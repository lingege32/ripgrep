!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ACCEPT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const ACCEPT: usize = 12;$/;"	c
ALIAS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const ALIAS: Symbol = Symbol("alias");$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_rev.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/regional_indicator_rev.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/sentence_break_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/simple_word_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_rev.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/word_break_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ASCII_MASK	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const ASCII_MASK: usize = ASCII_MASK_U64 as usize;$/;"	c
ASCII_MASK_U64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const ASCII_MASK_U64: u64 = 0x8080808080808080;$/;"	c
Adapter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        struct Adapter<'ser, W: 'ser, F: 'ser> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_rev.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/regional_indicator_rev.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/sentence_break_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/simple_word_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_rev.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/word_break_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Ansi	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct Ansi<W>(W);$/;"	s
ArrayInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
AstAnalysis	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^pub struct AstAnalysis {$/;"	s
Attr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^struct Attr<'c, T> {$/;"	s
B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub fn B<'a, B: ?Sized + AsRef<[u8]>>(bytes: &'a B) -> &'a [u8] {$/;"	f
BASE64_CHUNK_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^const BASE64_CHUNK_SIZE: usize = 4;$/;"	c
BB	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const BB: u8 = b'b'; \/\/ \\x08$/;"	c
BCRYPT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub const BCRYPT: Config = Config {$/;"	c
BCRYPT_DECODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const BCRYPT_DECODE: &[u8; 256] = &[$/;"	c
BCRYPT_ENCODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const BCRYPT_ENCODE: &[u8; 64] = &[$/;"	c
BINARY	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^        const BINARY: &'static [u8] = b"\\$/;"	c
BLOCKS_PER_FAST_LOOP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    const BLOCKS_PER_FAST_LOOP: usize = 4;$/;"	c
BORROW	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const BORROW: Symbol = Symbol("borrow");$/;"	c
BOUND	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const BOUND: Symbol = Symbol("bound");$/;"	c
BS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const BS: bool = true; \/\/ backslash \\x5C$/;"	c
BS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const BS: u8 = b'\\\\'; \/\/ \\x5C$/;"	c
BStr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/bstr.rs	/^pub struct BStr {$/;"	s
BStrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            struct BStrVisitor;$/;"	s
BString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/bstring.rs	/^pub struct BString {$/;"	s
BStringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            struct BStringVisitor;$/;"	s
BUF_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^const BUF_SIZE: usize = 1024;$/;"	c
BYTE_FREQUENCIES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/byte_frequencies.rs	/^pub const BYTE_FREQUENCIES: [u8; 256] = [$/;"	c
Base64Display	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^pub struct Base64Display<'a> {$/;"	s
Begin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^pub struct Begin<'a> {$/;"	s
BinaryDetection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^pub enum BinaryDetection {$/;"	g
BinaryDetection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^pub struct BinaryDetection(line_buffer::BinaryDetection);$/;"	s
BitSet	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^struct BitSet([u64; 4]);$/;"	s
BoolAttr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^struct BoolAttr<'c>(Attr<'c, ()>);$/;"	s
BoolVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
BorrowedBytesDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedCowStrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct BorrowedCowStrDeserializer<'de> {$/;"	s
BorrowedLifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^enum BorrowedLifetimes {$/;"	g
BorrowedLifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    struct BorrowedLifetimes(Punctuated<syn::Lifetime, Token![+]>);$/;"	s
BorrowedRawDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct BorrowedRawDeserializer<'de> {$/;"	s
BorrowedStrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BoundVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s
BoxedFromString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct BoxedFromString;$/;"	s
BoxedVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^        struct BoxedVisitor;$/;"	s
BufReadExt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^pub trait BufReadExt: io::BufRead {$/;"	t
Buffer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct Buffer(BufferInner);$/;"	s
BufferAllocation	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^pub enum BufferAllocation {$/;"	g
BufferInner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum BufferInner {$/;"	g
BufferWriter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct BufferWriter {$/;"	s
BufferedStandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct BufferedStandardStream {$/;"	s
ByteLines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^pub struct ByteLines<B> {$/;"	s
ByteRecords	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^pub struct ByteRecords<B> {$/;"	s
ByteSet	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub struct ByteSet(BitSet);$/;"	s
ByteSlice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub trait ByteSlice: Sealed {$/;"	t
ByteVec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub trait ByteVec: Sealed {$/;"	t
Bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Bytes<'a> {$/;"	s
Bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub struct Bytes<F>(pub F)$/;"	s
BytesDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
CHARSETS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tests.rs	/^    const CHARSETS: &[CharacterSet] = &[$/;"	c
CHUNKS_PER_FAST_LOOP_BLOCK	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^const CHUNKS_PER_FAST_LOOP_BLOCK: usize = 4;$/;"	c
CLASSES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const CLASSES: [u8; 256] = [$/;"	c
CODE	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    const CODE: &'static str = "\\$/;"	c
CONTENT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const CONTENT: Symbol = Symbol("content");$/;"	c
CRATE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const CRATE: Symbol = Symbol("crate");$/;"	c
CRLFMatcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^pub struct CRLFMatcher {$/;"	s
CRYPT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub const CRYPT: Config = Config {$/;"	c
CRYPT_DECODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const CRYPT_DECODE: &[u8; 256] = &[$/;"	c
CRYPT_ENCODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const CRYPT_ENCODE: &[u8; 64] = &[$/;"	c
CStringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const CT: bool = true; \/\/ control character \\x00..=\\x1F$/;"	c
CaptureRef	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^struct CaptureRef<'a> {$/;"	s
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    type Captures = M::Captures;$/;"	T
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    type Captures: Captures;$/;"	T
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub trait Captures {$/;"	t
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    type Captures = RegexCaptures;$/;"	T
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    type Captures = RegexCaptures;$/;"	T
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    type Captures = RegexCaptures;$/;"	T
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    type Captures = RegexCaptures;$/;"	T
Captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    type Captures = NoCaptures;$/;"	T
Category	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^pub enum Category {$/;"	g
CharEscape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub enum CharEscape {$/;"	g
CharIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct CharIndices<'a> {$/;"	s
CharVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct CharVisitor;$/;"	s
CharacterSet	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub enum CharacterSet {$/;"	g
Chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Chars<'a> {$/;"	s
ChunkedEncoder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^pub struct ChunkedEncoder {$/;"	s
Color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub enum Color {$/;"	g
ColorChoice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub enum ColorChoice {$/;"	g
ColorError	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^pub enum ColorError {$/;"	g
ColorSpec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct ColorSpec {$/;"	s
ColorSpecs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^pub struct ColorSpecs {$/;"	s
CompactFormatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub struct CompactFormatter;$/;"	s
Compound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub enum Compound<'a, W: 'a, F: 'a> {$/;"	g
Config	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^pub struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^pub struct Config {$/;"	s
ConfigError	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^pub enum ConfigError {$/;"	g
ConfiguredHIR	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^pub struct ConfiguredHIR {$/;"	s
Container	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub struct Container<'a> {$/;"	s
Container	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Container {$/;"	s
Content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g
Content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub enum Content {$/;"	g
ContentDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s
ContentRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s
ContentSerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s
ContentVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s
Context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^pub struct Context<'a> {$/;"	s
Core	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^pub struct Core<'s, M: 's, S> {$/;"	s
CounterWriter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^pub struct CounterWriter<W> {$/;"	s
CowBytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^pub struct CowBytes<'a>(Imp<'a>);$/;"	s
CowBytesVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s
CowStrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s
Ctxt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^pub struct Ctxt {$/;"	s
DECODED_BLOCK_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^const DECODED_BLOCK_LEN: usize =$/;"	c
DECODED_CHUNK_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^const DECODED_CHUNK_LEN: usize = 6;$/;"	c
DECODED_CHUNK_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^const DECODED_CHUNK_SIZE: usize = 3;$/;"	c
DECODED_CHUNK_SUFFIX	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^const DECODED_CHUNK_SUFFIX: usize = 2;$/;"	c
DEFAULT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DEFAULT: Symbol = Symbol("default");$/;"	c
DENY_UNKNOWN_FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DENY_UNKNOWN_FIELDS: Symbol = Symbol("deny_unknown_fields");$/;"	c
DESERIALIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DESERIALIZE: Symbol = Symbol("deserialize");$/;"	c
DESERIALIZE_WITH	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DESERIALIZE_WITH: Symbol = Symbol("deserialize_with");$/;"	c
Data	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub enum Data<'a> {$/;"	g
Data	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^enum Data<'a> {$/;"	g
DeImplGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct DeImplGenerics<'a>(&'a Parameters);$/;"	s
DeTypeGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct DeTypeGenerics<'a>(&'a Parameters);$/;"	s
DecodeError	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^pub enum DecodeError {$/;"	g
DecoderReader	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^pub struct DecoderReader<'a, R: 'a + io::Read> {$/;"	s
Default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub enum Default {$/;"	g
Derive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/mod.rs	/^pub enum Derive {$/;"	g
Deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	t
Deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        trait Deserialize<'de>: Sized {$/;"	t
DeserializeOwned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	t
DeserializeSeed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	t
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	t
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            type Deserializer = $name<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Deserializer = Self;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer = <u32 as IntoDeserializer<'de, E>>::Deserializer;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub struct Deserializer<R> {$/;"	s
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Deserializer = Self;$/;"	T
DisplaySinkTestHelper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^    struct DisplaySinkTestHelper;$/;"	s
DrainBytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub struct DrainBytes<'a> {$/;"	s
DurationVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s
ESCAPE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^static ESCAPE: [bool; 256] = {$/;"	c
ESCAPE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^static ESCAPE: [u8; 256] = [$/;"	c
Encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^pub struct Encode {$/;"	s
EncoderWriter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^pub struct EncoderWriter<'a, W: 'a + Write> {$/;"	s
Encoding	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^pub struct Encoding(&'static encoding_rs::Encoding);$/;"	s
End	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^pub struct End<'a> {$/;"	s
Entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub enum Entry<'a> {$/;"	g
EnumAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	t
EnumDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s
EnumDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct EnumDeserializer {$/;"	s
EnumRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s
EnumRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct EnumRefDeserializer<'de> {$/;"	s
EnumVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct EnumVisitor;$/;"	s
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    type Err = ();$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Err = Error;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Err = Error;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    type Err = ParseColorError;$/;"	T
Err	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    type Err = ColorError;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    type Error = ();$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    type Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^    type Error = fmt::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Error = A::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Error: Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Error = A::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Error = A::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Error = M::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Error = M::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Error = S::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct Error;$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type Error: Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	t
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub struct Error;$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    type Error = M::Error;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    type Error: fmt::Display;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    type Error = io::Error;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    type Error = io::Error;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    type Error = io::Error;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    type Error = NoError;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/error.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    type Error = NoError;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    type Error = NoError;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    type Error = NoError;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^        type Error = io::Error;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    type Error = S::Error;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    type Error: SinkError;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    type Error = NoError;$/;"	T
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    type Error = io::Error;$/;"	T
ErrorImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^type ErrorImpl = ();$/;"	T
ErrorImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	T
ErrorImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^struct ErrorImpl {$/;"	s
ErrorKind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub enum ErrorKind {$/;"	g
ErrorKind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/error.rs	/^pub enum ErrorKind {$/;"	g
Expected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Expected {$/;"	t
ExpectedInMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
Expr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub struct Expr(pub Fragment);$/;"	s
FALLBACK_LOOP_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const FALLBACK_LOOP_SIZE: usize = 2 * USIZE_BYTES;$/;"	c
FF	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const FF: u8 = b'f'; \/\/ \\x0C$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#field_names),* ];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        const FIELDS: &'static [&'static str] = &[#tag, #content];$/;"	c
FIELD_IDENTIFIER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const FIELD_IDENTIFIER: Symbol = Symbol("field_identifier");$/;"	c
FLATTEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const FLATTEN: Symbol = Symbol("flatten");$/;"	c
FROM	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const FROM: Symbol = Symbol("from");$/;"	c
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        enum Field {$/;"	g
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    enum Field {$/;"	g
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub struct Field<'a> {$/;"	s
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Field {$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        struct FieldVisitor;$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^        struct FieldVisitor;$/;"	s
Fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Fields<'a> {$/;"	s
FieldsWith	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct FieldsWith<'a, F> {$/;"	s
Find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Find<'a> {$/;"	s
FindReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct FindReverse<'a> {$/;"	s
FindTyParams	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^    struct FindTyParams<'ast> {$/;"	s
Finder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Finder<'a> {$/;"	s
FinderReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct FinderReverse<'a> {$/;"	s
First	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type First = A;$/;"	T
First	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type First;$/;"	T
First	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	T
FlatInternallyTaggedAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
Formatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub trait Formatter {$/;"	t
FormatterSink	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^struct FormatterSink<'a, 'b: 'a> {$/;"	s
Fragment	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub enum Fragment {$/;"	g
Freqy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^pub struct Freqy {$/;"	s
FromPrimitive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^pub trait FromPrimitive: Sized {$/;"	t
FromUtf8Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub struct FromUtf8Error {$/;"	s
Fused	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub trait Fused: private::Sealed {}$/;"	t
GETTER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const GETTER: Symbol = Symbol("getter");$/;"	c
GraphemeIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^pub struct GraphemeIndices<'a> {$/;"	s
Graphemes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^pub struct Graphemes<'a> {$/;"	s
HEX	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^static HEX: [u8; 256] = {$/;"	c
HEX_DIGITS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^                static HEX_DIGITS: [u8; 16] = *b"0123456789abcdef";$/;"	c
IMAP_MUTF7	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub const IMAP_MUTF7: Config = Config {$/;"	c
IMAP_MUTF7_DECODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const IMAP_MUTF7_DECODE: &[u8; 256] = &[$/;"	c
IMAP_MUTF7_ENCODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const IMAP_MUTF7_ENCODE: &[u8; 64] = &[$/;"	c
INPUT_BLOCK_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^const INPUT_BLOCK_LEN: usize = CHUNKS_PER_FAST_LOOP_BLOCK * INPUT_CHUNK_LEN;$/;"	c
INPUT_CHUNK_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^const INPUT_CHUNK_LEN: usize = 8;$/;"	c
INTO	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const INTO: Symbol = Symbol("into");$/;"	c
INVALID	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^        const INVALID: &'static str = "\\u{FFFD}";$/;"	c
INVALID	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^        const INVALID: &'static str = "\\u{FFFD}";$/;"	c
INVALID	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^        const INVALID: &'static str = "\\u{FFFD}";$/;"	c
INVALID_VALUE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const INVALID_VALUE: u8 = 255;$/;"	c
Identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub enum Identifier {$/;"	g
IdentifierDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	t
IgnoredAny	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^struct Imp<'a>(&'a [u8]);$/;"	s
Imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^struct Imp<'a>(Cow<'a, [u8]>);$/;"	s
Impossible	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InPlaceImplGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct InPlaceImplGenerics<'a>(&'a Parameters);$/;"	s
InPlaceSeed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
InPlaceTypeGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct InPlaceTypeGenerics<'a>(&'a Parameters);$/;"	s
Index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^pub trait Index: private::Sealed {$/;"	t
InternallyTaggedUnitVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s
InterruptingWriter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^struct InterruptingWriter<'a, W: 'a + Write, R: 'a + Rng> {$/;"	s
IntoDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	t
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type IntoIter = IntoIter;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type IntoIter = Iter<'a>;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type IntoIter = IterMut<'a>;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct IntoIter {$/;"	s
IntoIterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IntoIterImpl = btree_map::IntoIter<String, Value>;$/;"	T
IntoIterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IntoIterImpl = indexmap::map::IntoIter<String, Value>;$/;"	T
IoRead	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct IoRead<R>$/;"	s
IoStandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum IoStandardStream {$/;"	g
IoStandardStreamLock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum IoStandardStreamLock<'a> {$/;"	g
IpAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct IpAddrVisitor;$/;"	s
IpAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct IpAddrVisitor;$/;"	s
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    type Item = &'a [u8];$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    type Item = u8;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    type Item = usize;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    type Item = u8;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    type Item = io::Result<Vec<u8>>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    type Item = &'a str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    type Item = (usize, usize, &'a str);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    type Item = &'a str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    type Item = (usize, usize, &'a str);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    type Item = &'a str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    type Item = (usize, usize, &'a str);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    type Item = (usize, usize, char);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    type Item = Utf8Chunk<'a>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    type Item = char;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Item = Result<T>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    type Item = io::Result<u8>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            type Item = $item;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Item = (&'a String, &'a Value);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Item = (&'a String, &'a mut Value);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Item = (String, Value);$/;"	T
Item	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    type Item = &'b [u8];$/;"	T
Iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Iter<'a> {$/;"	s
IterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterImpl<'a> = btree_map::Iter<'a, String, Value>;$/;"	T
IterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterImpl<'a> = indexmap::map::Iter<'a, String, Value>;$/;"	T
IterMut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct IterMut<'a> {$/;"	s
IterMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterMutImpl<'a> = btree_map::IterMut<'a, String, Value>;$/;"	T
IterMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterMutImpl<'a> = indexmap::map::IterMut<'a, String, Value>;$/;"	T
JSON	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^pub struct JSON<W> {$/;"	s
JSONBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^pub struct JSONBuilder {$/;"	s
JSONSink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^pub struct JSONSink<'p, 's, M: Matcher, W: 's> {$/;"	s
KeyClass	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^enum KeyClass {$/;"	g
KeyClassifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct KeyClassifier;$/;"	s
Keys	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Keys<'a> {$/;"	s
KeysImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type KeysImpl<'a> = btree_map::Keys<'a, String, Value>;$/;"	T
KeysImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type KeysImpl<'a> = indexmap::map::Keys<'a, String, Value>;$/;"	T
KindVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct KindVisitor;$/;"	s
KitchenSink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^pub struct KitchenSink(Vec<u8>);$/;"	s
LOOP_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^const LOOP_SIZE: usize = 2 * USIZE_BYTES;$/;"	c
LOSSY_TESTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/tests.rs	/^pub const LOSSY_TESTS: &[(&str, &[u8])] = &[$/;"	c
LOW_SIX_BITS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    const LOW_SIX_BITS: u64 = 0x3F;$/;"	c
LOW_SIX_BITS_U8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    const LOW_SIX_BITS_U8: u8 = 0x3F;$/;"	c
LenHint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^trait LenHint: Iterator {$/;"	t
LineBuffer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^pub struct LineBuffer {$/;"	s
LineBufferBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^pub struct LineBufferBuilder {$/;"	s
LineBufferReader	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^pub struct LineBufferReader<'b, R> {$/;"	s
LineColIterator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^pub struct LineColIterator<I> {$/;"	s
LineIter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^pub struct LineIter<'b> {$/;"	s
LineMatchKind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub enum LineMatchKind {$/;"	g
LineStep	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^pub struct LineStep {$/;"	s
LineTerminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub struct LineTerminator(LineTerminatorImp);$/;"	s
LineTerminatorImp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^enum LineTerminatorImp {$/;"	g
Lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Lines<'a> {$/;"	s
LinesWithTerminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct LinesWithTerminator<'a> {$/;"	s
LiteralSets	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^pub struct LiteralSets {$/;"	s
Lossy	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub struct Lossy<F>(pub F)$/;"	s
LossyStandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^struct LossyStandardStream<W> {$/;"	s
MAX_INPUT_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^const MAX_INPUT_LEN: usize = BUF_SIZE \/ 4 * 3;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 15;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 21;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 39;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 47;$/;"	c
MAX_ONE_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const MAX_ONE_B: u32 = 0x80;$/;"	c
MAX_RANK	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    const MAX_RANK: usize = 200;$/;"	c
MAX_THREE_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const MAX_THREE_B: u32 = 0x10000;$/;"	c
MAX_TWO_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const MAX_TWO_B: u32 = 0x800;$/;"	c
MIN_ENCODE_CHUNK_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^const MIN_ENCODE_CHUNK_SIZE: usize = 3;$/;"	c
MIN_SKIPS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    const MIN_SKIPS: usize = 50;$/;"	c
MIN_SKIP_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    const MIN_SKIP_BYTES: usize = 8;$/;"	c
Map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Map<K, V> {$/;"	s
MapAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	t
MapAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct MapAccess<'a, R: 'a> {$/;"	s
MapAccessDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s
MapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s
MapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct MapDeserializer {$/;"	s
MapImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type MapImpl<K, V> = BTreeMap<K, V>;$/;"	T
MapImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type MapImpl<K, V> = IndexMap<K, V>;$/;"	T
MapKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct MapKey<'a, R: 'a> {$/;"	s
MapKeyDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct MapKeyDeserializer<'de> {$/;"	s
MapKeySerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^struct MapKeySerializer<'a, W: 'a, F: 'a> {$/;"	s
MapKeySerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^struct MapKeySerializer;$/;"	s
MapRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s
MapRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct MapRefDeserializer<'de> {$/;"	s
MapVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct MapVisitor<K, V $(, $typaram)*> {$/;"	s
Match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub struct Match(pub Fragment);$/;"	s
Match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub struct Match {$/;"	s
Match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^pub struct Match<'a> {$/;"	s
Matcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub trait Matcher {$/;"	t
Message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^pub enum Message<'a> {$/;"	g
MissingFieldDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s
MmapChoice	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mmap.rs	/^pub struct MmapChoice(MmapChoiceImpl);$/;"	s
MmapChoiceImpl	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mmap.rs	/^enum MmapChoiceImpl {$/;"	g
MultiLine	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^pub struct MultiLine<'s, M: 's, S> {$/;"	s
MultiLiteralMatcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^pub struct MultiLiteralMatcher {$/;"	s
N	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^enum N {$/;"	g
N	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^type N = String;$/;"	T
NN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const NN: u8 = b'n'; \/\/ \\x0A$/;"	c
NULL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^        static NULL: Value = Value::Null;$/;"	c
Name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Name {$/;"	s
NeverDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
NiceDuration	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^pub struct NiceDuration(pub time::Duration);$/;"	s
NoCaptures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub struct NoCaptures(());$/;"	s
NoColor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct NoColor<W>(W);$/;"	s
NoError	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^pub struct NoError(());$/;"	s
Number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^pub struct Number {$/;"	s
NumberFieldDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^struct NumberFieldDeserializer;$/;"	s
NumberFromString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^pub struct NumberFromString {$/;"	s
NumberKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^struct NumberKey;$/;"	s
NumberStrEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^struct NumberStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
NumberValueEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^struct NumberValueEmitter;$/;"	s
NumberVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        struct NumberVisitor;$/;"	s
OTHER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const OTHER: Symbol = Symbol("other");$/;"	c
OccupiedEntry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct OccupiedEntry<'a> {$/;"	s
OccupiedEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type OccupiedEntryImpl<'a> = btree_map::OccupiedEntry<'a, String, Value>;$/;"	T
OccupiedEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type OccupiedEntryImpl<'a> = indexmap::map::OccupiedEntry<'a, String, Value>;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Ok = Content;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Ok = ();$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type Ok = ();$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type Ok = ();$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type Ok = String;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type Ok = Value;$/;"	T
OneOf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^struct OneOf {$/;"	s
OptionVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
OsStringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
OutType	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^enum OutType {$/;"	g
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Output = BStr;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Output = u8;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Output = Value;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    type Output = Value;$/;"	T
Output	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    type Output = [u8];$/;"	T
Output	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    type Output = str;$/;"	T
Output	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    type Output = Stats;$/;"	T
Owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Owned = BString;$/;"	T
Owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Owned = Box<RawValue>;$/;"	T
OwnedRawDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct OwnedRawDeserializer {$/;"	s
POW10	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^static POW10: [f64; 309] = [$/;"	c
Pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub trait Pair {$/;"	t
PairDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
Parameters	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct Parameters {$/;"	s
Parameters	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^struct Parameters {$/;"	s
ParseColorError	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct ParseColorError {$/;"	s
ParseColorErrorKind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum ParseColorErrorKind {$/;"	g
PartialInterruptingWriter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^struct PartialInterruptingWriter<'a, W: 'a + Write, R: 'a + Rng> {$/;"	s
PathBufVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct PathVisitor;$/;"	s
PhantomDataVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
Position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct Position {$/;"	s
PrefilterState	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^pub struct PrefilterState {$/;"	s
PrettyFormatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub struct PrettyFormatter<'a> {$/;"	s
PrimitiveVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct PrimitiveVisitor;$/;"	s
PrimitiveVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct PrimitiveVisitor;$/;"	s
PrinterPath	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^pub struct PrinterPath<'a>(Cow<'a, [u8]>);$/;"	s
QU	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const QU: bool = true; \/\/ quote \\x22$/;"	c
QU	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const QU: u8 = b'"'; \/\/ \\x22$/;"	c
REJECT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const REJECT: usize = 0;$/;"	c
REMOTE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const REMOTE: Symbol = Symbol("remote");$/;"	c
RENAME	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const RENAME: Symbol = Symbol("rename");$/;"	c
RENAME_ALL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const RENAME_ALL: Symbol = Symbol("rename_all");$/;"	c
RR	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const RR: u8 = b'r'; \/\/ \\x0D$/;"	c
RandomShortRead	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^struct RandomShortRead<'a, 'b, R: io::Read, N: rand::Rng> {$/;"	s
Range	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^type Range = Match;$/;"	T
RangeVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s
RawKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^struct RawKey;$/;"	s
RawKeyDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^struct RawKeyDeserializer;$/;"	s
RawValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct RawValue {$/;"	s
RawValueEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^struct RawValueEmitter;$/;"	s
RawValueStrEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^struct RawValueStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
Read	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub trait Read<'de>: private::Sealed {$/;"	t
ReadByLine	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^pub struct ReadByLine<'s, M: 's, R, S> {$/;"	s
Ref	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^enum Ref<'a> {$/;"	g
Reference	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub enum Reference<'b, 'c, T>$/;"	g
ReferenceFromString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct ReferenceFromString;$/;"	s
ReferenceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^        struct ReferenceVisitor;$/;"	s
RegexCaptures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^pub struct RegexCaptures(RegexCapturesImp);$/;"	s
RegexCapturesImp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^enum RegexCapturesImp {$/;"	g
RegexMatcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^pub struct RegexMatcher {$/;"	s
RegexMatcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^pub struct RegexMatcher {$/;"	s
RegexMatcherBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^pub struct RegexMatcherBuilder {$/;"	s
RegexMatcherImpl	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^enum RegexMatcherImpl {$/;"	g
RenameAllRules	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct RenameAllRules {$/;"	s
RenameRule	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^pub enum RenameRule {$/;"	g
Replacer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^pub struct Replacer<M: Matcher> {$/;"	s
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	T
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	T
ResultVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s
SEARCH_TESTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^const SEARCH_TESTS: &'static [SearchTest] = &[$/;"	c
SERDE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SERDE: Symbol = Symbol("serde");$/;"	c
SERIALIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SERIALIZE: Symbol = Symbol("serialize");$/;"	c
SERIALIZE_WITH	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SERIALIZE_WITH: Symbol = Symbol("serialize_with");$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    const SHERLOCK: &'static [u8] = b"\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/lib.rs	/^const SHERLOCK: &'static [u8] = b"\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    const SHERLOCK: &'static str = "\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    const SHERLOCK: &'static [u8] = b"\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lib.rs	/^const SHERLOCK: &'static [u8] = b"\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    const SHERLOCK: &'static str = "\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    const SHERLOCK: &'static str = "\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^        const SHERLOCK: &'static [u8] = b"\\$/;"	c
SHERLOCK	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    const SHERLOCK: &'static str = "\\$/;"	c
SHERLOCK_CRLF	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    const SHERLOCK_CRLF: &'static str = "\\$/;"	c
SKIP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP: Symbol = Symbol("skip");$/;"	c
SKIP_DESERIALIZING	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP_DESERIALIZING: Symbol = Symbol("skip_deserializing");$/;"	c
SKIP_SERIALIZING	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP_SERIALIZING: Symbol = Symbol("skip_serializing");$/;"	c
SKIP_SERIALIZING_IF	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP_SERIALIZING_IF: Symbol = Symbol("skip_serializing_if");$/;"	c
STANDARD	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub const STANDARD: Config = Config {$/;"	c
STANDARD_DECODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const STANDARD_DECODE: &[u8; 256] = &[$/;"	c
STANDARD_ENCODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const STANDARD_ENCODE: &[u8; 64] = &[$/;"	c
STANDARD_NO_PAD	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub const STANDARD_NO_PAD: Config = Config {$/;"	c
STATES_FORWARD	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const STATES_FORWARD: &'static [u8] = &[$/;"	c
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub trait Sealed {}$/;"	t
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub trait Sealed {}$/;"	t
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub trait Sealed {}$/;"	t
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    pub trait Sealed {}$/;"	t
SearchTest	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^type SearchTest = (&'static str, &'static str, Option<usize>, Option<usize>);$/;"	T
Searcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^pub struct Searcher {$/;"	s
SearcherBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^pub struct SearcherBuilder {$/;"	s
SearcherTester	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^pub struct SearcherTester {$/;"	s
Second	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Second = B;$/;"	T
Second	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Second;$/;"	T
Second	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	T
SeedStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s
SeedTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s
SentenceIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^pub struct SentenceIndices<'a> {$/;"	s
Sentences	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^pub struct Sentences<'a> {$/;"	s
SeqAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	t
SeqAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct SeqAccess<'a, R: 'a> {$/;"	s
SeqAccessDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s
SeqDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct SeqDeserializer {$/;"	s
SeqInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct SeqInPlaceVisitor<'a, T: 'a $(, $typaram: 'a)*>(&'a mut $ty<T $(, $typaram)*>);$/;"	s
SeqRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s
SeqRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct SeqRefDeserializer<'de> {$/;"	s
SeqVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct SeqVisitor<T $(, $typaram)*> {$/;"	s
SerAndDe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^type SerAndDe<T> = (Option<T>, Option<T>);$/;"	T
Serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        trait Serialize {$/;"	t
Serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait Serialize {$/;"	t
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeMap = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	t
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeMap = Compound<'a, W, F>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeMap = Impossible<String, Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeMap = Impossible<Value, Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeMap = SerializeMap;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub enum SerializeMap {$/;"	g
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeSeq = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	t
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeSeq = Compound<'a, W, F>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeSeq = Impossible<String, Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeSeq = Impossible<Value, Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeSeq = SerializeVec;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	t
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStruct = Compound<'a, W, F>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStruct = Impossible<String, Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStruct = Impossible<Value, Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStruct = SerializeMap;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeStructVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	t
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStructVariant = Compound<'a, W, F>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<String, Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<Value, Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStructVariant = SerializeStructVariant;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct SerializeStructVariant {$/;"	s
SerializeStructVariantAsMapValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeTuple = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	t
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTuple = Compound<'a, W, F>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTuple = Impossible<String, Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTuple = Impossible<Value, Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTuple = SerializeVec;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeTupleStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	t
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleStruct = Compound<'a, W, F>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<String, Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<Value, Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleStruct = SerializeVec;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeTupleVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	t
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleVariant = Compound<'a, W, F>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<String, Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<Value, Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariant;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct SerializeTupleVariant {$/;"	s
SerializeTupleVariantAsMapValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s
SerializeVec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct SerializeVec {$/;"	s
Serializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	t
Serializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub struct Serializer<W, F = CompactFormatter> {$/;"	s
Serializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct Serializer;$/;"	s
Shift	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^enum Shift {$/;"	g
Sink	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^pub trait Sink {$/;"	t
Sink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^pub trait Sink {$/;"	t
SinkContext	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^pub struct SinkContext<'b> {$/;"	s
SinkContextKind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^pub enum SinkContextKind {$/;"	g
SinkError	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^pub trait SinkError: Sized {$/;"	t
SinkFinish	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^pub struct SinkFinish {$/;"	s
SinkMatch	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^pub struct SinkMatch<'b> {$/;"	s
SinkTestHelper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    pub trait SinkTestHelper {$/;"	t
SliceByLine	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^pub struct SliceByLine<'s, M: 's, S> {$/;"	s
SliceRead	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct SliceRead<'a> {$/;"	s
SocketAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct SocketAddrVisitor;$/;"	s
SocketAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct SocketAddrVisitor;$/;"	s
Space	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^struct Space<M: Matcher> {$/;"	s
SpecType	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^enum SpecType {$/;"	g
SpecValue	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^enum SpecValue {$/;"	g
Split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Split<'a> {$/;"	s
SplitN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct SplitN<'a> {$/;"	s
SplitNReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct SplitNReverse<'a> {$/;"	s
SplitReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct SplitReverse<'a> {$/;"	s
Standard	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^pub struct Standard<W> {$/;"	s
StandardBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^pub struct StandardBuilder {$/;"	s
StandardImpl	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^struct StandardImpl<'a, M: 'a + Matcher, W: 'a> {$/;"	s
StandardMatcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^struct StandardMatcher {$/;"	s
StandardSink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^pub struct StandardSink<'p, 's, M: Matcher, W: 's> {$/;"	s
StandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct StandardStream {$/;"	s
StandardStreamLock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct StandardStreamLock<'a> {$/;"	s
StandardStreamType	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum StandardStreamType {$/;"	g
State	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub enum State {$/;"	g
Stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^pub struct Stats {$/;"	s
Stmts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub struct Stmts(pub Fragment);$/;"	s
StrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrRead	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct StrRead<'a> {$/;"	s
StrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StreamDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub struct StreamDeserializer<'de, R, T> {$/;"	s
StringDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringSinkTestHelper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    struct StringSinkTestHelper;$/;"	s
StringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct StringVisitor;$/;"	s
StructTrait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum StructTrait {$/;"	g
StructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum StructVariant<'a> {$/;"	g
Style	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub enum Style {$/;"	g
Style	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^enum Style {$/;"	g
SubMatch	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^pub struct SubMatch<'a> {$/;"	s
SubMatches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^enum SubMatches<'a> {$/;"	g
Suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^struct Suffix {$/;"	s
SuffixKind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^enum SuffixKind {$/;"	g
SuffixOrdering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^enum SuffixOrdering {$/;"	g
Summary	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^pub struct Summary<W> {$/;"	s
SummaryBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^pub struct SummaryBuilder {$/;"	s
SummaryKind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^pub enum SummaryKind {$/;"	g
SummarySink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^pub struct SummarySink<'p, 's, M: Matcher, W: 's> {$/;"	s
Sunk	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^pub struct Sunk<'a> {$/;"	s
Symbol	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub struct Symbol(&'static str);$/;"	s
TAG	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const TAG: Symbol = Symbol("tag");$/;"	c
TAG_CONT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_CONT: u8 = 0b1000_0000;$/;"	c
TAG_FOUR_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_FOUR_B: u8 = 0b1111_0000;$/;"	c
TAG_THREE_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_THREE_B: u8 = 0b1110_0000;$/;"	c
TAG_TWO_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_TWO_B: u8 = 0b1100_0000;$/;"	c
TESTDATA	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^        const TESTDATA: &'static str =$/;"	c
TESTDATA	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^        const TESTDATA: &'static str =$/;"	c
TESTDATA	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^        const TESTDATA: &'static str = include_str!("data\/WordBreakTest.txt");$/;"	c
TESTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    const TESTS: &[(&[u8], u8, usize, usize)] = &[$/;"	c
TOKEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub const TOKEN: &str = "$serde_json::private::RawValue";$/;"	c
TRANSPARENT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const TRANSPARENT: Symbol = Symbol("transparent");$/;"	c
TRY_FROM	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const TRY_FROM: Symbol = Symbol("try_from");$/;"	c
TT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const TT: u8 = b't'; \/\/ \\x09$/;"	c
TagContentOtherField	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g
TagContentOtherFieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s
TagOrContent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g
TagOrContentField	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g
TagOrContentFieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s
TagOrContentVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s
TagType	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub enum TagType {$/;"	g
TaggedContent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s
TaggedContentVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s
TaggedSerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    type Target = [u8];$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Target = Vec<u8>;$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Target = [u8];$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    type Target = T;$/;"	T
TestCase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    type TestCase = (Vec<u8>, u8, Option<(usize, usize)>);$/;"	T
TesterConfig	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^struct TesterConfig {$/;"	s
TupleInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct TupleInPlaceVisitor<'a, $($name: 'a,)+>(&'a mut ($($name,)+));$/;"	s
TupleTrait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum TupleTrait {$/;"	g
TupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum TupleVariant {$/;"	g
TupleVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct TupleVisitor<$($name,)+> {$/;"	s
TwoWay	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^pub struct TwoWay<'b> {$/;"	s
Type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^struct Type<'a>(&'a Value);$/;"	s
U32Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
UNTAGGED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const UNTAGGED: Symbol = Symbol("untagged");$/;"	c
URL_SAFE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub const URL_SAFE: Config = Config {$/;"	c
URL_SAFE_DECODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const URL_SAFE_DECODE: &[u8; 256] = &[$/;"	c
URL_SAFE_ENCODE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tables.rs	/^pub const URL_SAFE_ENCODE: &[u8; 64] = &[$/;"	c
URL_SAFE_NO_PAD	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^pub const URL_SAFE_NO_PAD: Config = Config {$/;"	c
USIZE_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const USIZE_BYTES: usize = mem::size_of::<usize>();$/;"	c
USIZE_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^const USIZE_BYTES: usize = 4;$/;"	c
USIZE_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^const USIZE_BYTES: usize = 8;$/;"	c
UTF8	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub struct UTF8<F>(pub F)$/;"	s
UU	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const UU: u8 = b'u'; \/\/ \\x00...\\x1F except the ones above$/;"	c
Unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
UnitDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s
UnitOnly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct UnitOnly;$/;"	s
UnitVariantAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct UnitVariantAccess<'a, R: 'a> {$/;"	s
UnitVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
Unsupported	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^enum Unsupported {$/;"	g
Untagged	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^enum Untagged {$/;"	g
UntaggedUnitVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s
UserColorSpec	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^pub struct UserColorSpec {$/;"	s
Utf8Chunk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Utf8Chunk<'a> {$/;"	s
Utf8Chunks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Utf8Chunks<'a> {$/;"	s
Utf8Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Utf8Error {$/;"	s
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	c
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	c
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#variant_names),* ];$/;"	c
VARIANT_IDENTIFIER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const VARIANT_IDENTIFIER: Symbol = Symbol("variant_identifier");$/;"	c
VECTOR_ALIGN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    const VECTOR_ALIGN: usize = VECTOR_SIZE - 1;$/;"	c
VECTOR_LOOP_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    const VECTOR_LOOP_SIZE: usize = 4 * VECTOR_SIZE;$/;"	c
VECTOR_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    const VECTOR_SIZE: usize = mem::size_of::<__m128i>();$/;"	c
VacantEntry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct VacantEntry<'a> {$/;"	s
VacantEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type VacantEntryImpl<'a> = btree_map::VacantEntry<'a, String, Value>;$/;"	T
VacantEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type VacantEntryImpl<'a> = indexmap::map::VacantEntry<'a, String, Value>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                type Value = &'de BStr;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                type Value = BString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        type Value = $ty;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        type Value = ($($name,)+);$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $name_kind;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $ty;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $ty<K, V $(, $typaram)*>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $ty<T $(, $typaram)*>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = Field;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = Field;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = [T; $len];$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = i128;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = net::IpAddr;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = net::SocketAddr;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = u128;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = $name;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Duration;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = &'a Path;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = &'a str;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = CString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = Option<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = OsString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = PathBuf;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = String;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = [T; 0];$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = bool;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = char;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Value = T;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Value;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Value = V::Value;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = Content<'de>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^                type Value = #this #ty_generics;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = #this #ty_generics;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = #this;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = __Field #lifetime;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            type Value = Map<String, Value>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            type Value = Number;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            type Value = NumberFromString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            type Value = &'de RawValue;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            type Value = Box<RawValue>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Value = &'de RawValue;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Value = Box<RawValue>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            type Value = Value;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Value = KeyClass;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^pub enum Value {$/;"	g
ValueVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^        struct ValueVisitor;$/;"	s
Values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Values<'a> {$/;"	s
ValuesImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesImpl<'a> = btree_map::Values<'a, String, Value>;$/;"	T
ValuesImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesImpl<'a> = indexmap::map::Values<'a, String, Value>;$/;"	T
ValuesMut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct ValuesMut<'a> {$/;"	s
ValuesMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesMutImpl<'a> = btree_map::ValuesMut<'a, String, Value>;$/;"	T
ValuesMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesMutImpl<'a> = indexmap::map::ValuesMut<'a, String, Value>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub struct Variant<'a> {$/;"	s
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Variant {$/;"	s
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Variant = Self;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Variant = UnitOnly;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Variant = VariantDeserializer;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Variant = VariantRefDeserializer<'de>;$/;"	T
VariantAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	t
VariantAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct VariantAccess<'a, R: 'a> {$/;"	s
VariantDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s
VariantDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct VariantDeserializer {$/;"	s
VariantRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s
VariantRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct VariantRefDeserializer<'de> {$/;"	s
VecAttr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^struct VecAttr<'c, T> {$/;"	s
VecInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s
VecVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s
Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	t
Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^        struct Visitor;$/;"	s
Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        struct Visitor;$/;"	s
Void	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^enum Void {}$/;"	g
WITH	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const WITH: Symbol = Symbol("with");$/;"	c
WindowsBuffer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^struct WindowsBuffer {$/;"	s
WordIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct WordIndices<'a>(WordsWithBreakIndices<'a>);$/;"	s
WordMatcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^pub struct WordMatcher {$/;"	s
Words	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct Words<'a>(WordsWithBreaks<'a>);$/;"	s
WordsWithBreakIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct WordsWithBreakIndices<'a> {$/;"	s
WordsWithBreaks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct WordsWithBreaks<'a> {$/;"	s
Write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub trait Write {$/;"	t
WriteColor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub trait WriteColor: io::Write {$/;"	t
WriterFormatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^struct WriterFormatter<'a, 'b: 'a> {$/;"	s
WriterInner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum WriterInner<W> {$/;"	g
WriterInnerLock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum WriterInnerLock<'a, W> {$/;"	g
__	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const __: bool = false; \/\/ allow unescaped$/;"	c
__	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const __: u8 = 255; \/\/ not a hex digit$/;"	c
__	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const __: u8 = 0;$/;"	c
__AdjacentlyTagged	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^        struct __AdjacentlyTagged #wrapper_generics #where_clause {$/;"	s
__DeserializeWith	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __DeserializeWith #de_impl_generics #where_clause {$/;"	s
__EnumFlatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^                struct __EnumFlatten #wrapper_generics #where_clause {$/;"	s
__Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        enum __Field #lifetime {$/;"	g
__FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __FieldVisitor #de_impl_generics #where_clause {$/;"	s
__FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __FieldVisitor;$/;"	s
__Seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Seed #de_impl_generics #where_clause {$/;"	s
__SerializeWith	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^        struct __SerializeWith #wrapper_impl_generics #where_clause {$/;"	s
__Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Visitor #de_impl_generics #where_clause {$/;"	s
__Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Visitor #in_place_impl_generics #where_clause {$/;"	s
__Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Visitor;$/;"	s
__private_deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __private_deserialize {$/;"	d
__private_serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __private_serialize {$/;"	d
__private_visit_untagged_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	f
__serialize_unimplemented	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __serialize_unimplemented {$/;"	d
__serialize_unimplemented_helper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	d
__serialize_unimplemented_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	d
absolute_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn absolute_byte_offset(&self) -> u64 {$/;"	f
absolute_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn absolute_byte_offset(&self) -> u64 {$/;"	f
absolute_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn absolute_byte_offset(&self) -> u64 {$/;"	f
absolute_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub fn absolute_byte_offset(&self) -> u64 {$/;"	f
add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn add(&mut self, byte: u8) {$/;"	f
add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    fn add(self, rhs: &'a Stats) -> Stats {$/;"	f
add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    fn add(self, rhs: Stats) -> Stats {$/;"	f
add_all	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn add_all(&mut self, start: u8, end: u8) {$/;"	f
add_assign	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    fn add_assign(&mut self, rhs: &'a Stats) {$/;"	f
add_assign	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    fn add_assign(&mut self, rhs: Stats) {$/;"	f
add_bytes_printed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn add_bytes_printed(&mut self, n: u64) {$/;"	f
add_bytes_searched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn add_bytes_searched(&mut self, n: u64) {$/;"	f
add_elapsed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn add_elapsed(&mut self, duration: Duration) {$/;"	f
add_matched_lines	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn add_matched_lines(&mut self, n: u64) {$/;"	f
add_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn add_matches(&mut self, n: u64) {$/;"	f
add_padding	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^pub fn add_padding(input_len: usize, output: &mut [u8]) -> usize {$/;"	f
add_padding_random_valid_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn add_padding_random_valid_utf8() {$/;"	f
add_searches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn add_searches(&mut self, n: u64) {$/;"	f
add_searches_with_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn add_searches_with_match(&mut self, n: u64) {$/;"	f
adjust_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^pub fn adjust_match(haystack: &[u8], m: Match) -> Match {$/;"	f
adjust_rev_for_regional_indicator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^fn adjust_rev_for_regional_indicator(mut bs: &[u8], i: usize) -> usize {$/;"	f
advance	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn advance(&mut self, range: &Range) {$/;"	f
after_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn after_context($/;"	f
after_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn after_context(&self) -> usize {$/;"	f
after_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn after_context(&mut self, lines: usize) -> &mut SearcherTester {$/;"	f
after_context_by_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn after_context_by_line($/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	f
all_attributes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn all_attributes() -> Vec<ColorSpec> {$/;"	f
all_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^    pub fn all_fields(&'a self) -> Box<Iterator<Item = &'a Field<'a>> + 'a> {$/;"	f
all_verbatim_literal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    pub fn all_verbatim_literal(&self) -> bool {$/;"	f
alloc_error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^pub fn alloc_error(limit: usize) -> io::Error {$/;"	f
allocate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    fn allocate(&mut self, matcher: &M) -> io::Result<&mut Space<M>> {$/;"	f
allow_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn allow_transparent(field: &Field, derive: Derive) -> bool {$/;"	f
alternate_literals	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^fn alternate_literals<F: FnMut(&Hir, &mut Literals)>($/;"	f
alternation_literals	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn alternation_literals(&self) -> Option<Vec<Vec<u8>>> {$/;"	f
alternation_literals	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^pub fn alternation_literals(expr: &Hir) -> Option<Vec<Vec<u8>>> {$/;"	f
always_begin_end	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn always_begin_end(&mut self, yes: bool) -> &mut JSONBuilder {$/;"	f
always_begin_end_no_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn always_begin_end_no_match() {$/;"	f
analysis	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn analysis(pattern: &str) -> AstAnalysis {$/;"	f
analysis	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    fn analysis(&self, ast: &Ast) -> Result<AstAnalysis, Error> {$/;"	f
ansi	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn ansi() -> Buffer {$/;"	f
any_literal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    pub fn any_literal(&self) -> bool {$/;"	f
any_uppercase	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    pub fn any_uppercase(&self) -> bool {$/;"	f
apitests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^mod apitests {$/;"	m
append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn append(&mut self, other: &mut Self) {$/;"	f
apply_to_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    pub fn apply_to_field(&self, field: &str) -> String {$/;"	f
apply_to_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    pub fn apply_to_variant(&self, variant: &str) -> String {$/;"	f
arbitrary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn arbitrary<G: Gen>(g: &mut G) -> BString {$/;"	f
array_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! array_impls {$/;"	d
array_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	d
as_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_array(&self) -> Option<&Vec<Value>> {$/;"	f
as_array_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_array_mut(&mut self) -> Option<&mut Vec<Value>> {$/;"	f
as_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_bool(&self) -> Option<bool> {$/;"	f
as_bstr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bstr(&self) -> &BStr {$/;"	f
as_bstr_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bstr_mut(&mut self) -> &mut BStr {$/;"	f
as_byte	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn as_byte(&self) -> u8 {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes_mut(&mut self) -> &mut [u8] {$/;"	f
as_bytes_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes_mut(&mut self) -> &mut [u8];$/;"	f
as_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	f
as_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	f
as_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	f
as_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	f
as_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_mut(&mut self) -> &mut BStr {$/;"	f
as_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_mut_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn as_mut_slice(&mut self) -> &mut [u8] {$/;"	f
as_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_null(&self) -> Option<()> {$/;"	f
as_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_object(&self) -> Option<&Map<String, Value>> {$/;"	f
as_object_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_object_mut(&mut self) -> Option<&mut Map<String, Value>> {$/;"	f
as_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_ref(&self) -> &BStr {$/;"	f
as_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^    fn as_ref(&self) -> &TokenStream {$/;"	f
as_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	f
as_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	f
as_slice	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn as_slice(&self) -> &[jsont::SubMatch] {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn as_str<'de, 's, R: Read<'de>>(read: &R, slice: &'s [u8]) -> Result<&'s str> {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_str(&self) -> Option<&str> {$/;"	f
as_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	f
as_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	f
as_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec(&self) -> &Vec<u8> {$/;"	f
as_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec(&self) -> &Vec<u8>;$/;"	f
as_vec_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec_mut(&mut self) -> &mut Vec<u8> {$/;"	f
as_vec_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec_mut(&mut self) -> &mut Vec<u8>;$/;"	f
assert_encode_sanity	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tests.rs	/^pub fn assert_encode_sanity(encoded: &str, config: Config, input_len: usize) {$/;"	f
assert_encoded_length	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn assert_encoded_length(input_len: usize, encoded_len: usize, config: Config) {$/;"	f
assert_eq_printed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/macros.rs	/^macro_rules! assert_eq_printed {$/;"	d
assert_eq_printed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/macros.rs	/^macro_rules! assert_eq_printed {$/;"	d
assert_is_send	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn assert_is_send<T: Send>() {}$/;"	f
assert_send	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^        fn assert_send<T: Send>() {}$/;"	f
assert_suffix_max	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        macro_rules! assert_suffix_max {$/;"	d
assert_suffix_min	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        macro_rules! assert_suffix_min {$/;"	d
assert_sync	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^        fn assert_sync<T: Sync>() {}$/;"	f
assert_unwind_safe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^        fn assert_unwind_safe<T: RefUnwindSafe + UnwindSafe>() {}$/;"	f
ast	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    fn ast(&self, pattern: &str) -> Result<Ast, Error> {$/;"	f
at_most_one	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn at_most_one(mut self) -> Result<Option<T>, ()> {$/;"	f
atomic_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	d
atomic_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	d
auto	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mmap.rs	/^    pub unsafe fn auto() -> MmapChoice {$/;"	f
auto_heap_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn auto_heap_limit(&mut self, yes: bool) -> &mut SearcherTester {$/;"	f
bad_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
basic1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn basic1() {$/;"	f
basic2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn basic2() {$/;"	f
basic3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn basic3() {$/;"	f
basic4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn basic4() {$/;"	f
basic_display	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^    fn basic_display() {$/;"	f
before_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn before_context($/;"	f
before_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn before_context(&self) -> usize {$/;"	f
before_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn before_context(&mut self, lines: usize) -> &mut SearcherTester {$/;"	f
before_context_by_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn before_context_by_line($/;"	f
begin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn begin(&mut self, _searcher: &Searcher) -> Result<bool, io::Error> {$/;"	f
begin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn begin(&mut self, _searcher: &Searcher) -> Result<bool, io::Error> {$/;"	f
begin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn begin(&mut self, _searcher: &Searcher) -> Result<bool, io::Error> {$/;"	f
begin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn begin(&mut self) -> Result<bool, S::Error> {$/;"	f
begin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn begin(&mut self, _searcher: &Searcher) -> Result<bool, Self::Error> {$/;"	f
begin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn begin(&mut self, searcher: &Searcher) -> Result<bool, S::Error> {$/;"	f
begin_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_array<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_array_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_array_value<W>(&mut self, writer: &mut W, first: bool) -> io::Result<()>$/;"	f
begin_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_object<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_object_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_object_key<W>(&mut self, writer: &mut W, first: bool) -> io::Result<()>$/;"	f
begin_object_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_object_value<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_raw_buffering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	f
begin_raw_buffering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn begin_raw_buffering(&mut self);$/;"	f
begin_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
bg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn bg(&self) -> Option<&Color> {$/;"	f
big1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn big1() {$/;"	f
big_error_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn big_error_multi_line() {$/;"	f
big_error_one_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn big_error_one_line() {$/;"	f
binary1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn binary1() {$/;"	f
binary2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn binary2() {$/;"	f
binary3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn binary3() {$/;"	f
binary4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn binary4() {$/;"	f
binary_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn binary_byte_offset(&self) -> Option<u64> {$/;"	f
binary_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn binary_byte_offset(&self) -> Option<u64> {$/;"	f
binary_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn binary_byte_offset(&self) -> Option<u64> {$/;"	f
binary_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn binary_byte_offset(&self) -> Option<u64> {$/;"	f
binary_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn binary_byte_offset(&self) -> Option<u64> {$/;"	f
binary_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn binary_byte_offset(&self) -> Option<u64> {$/;"	f
binary_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub fn binary_byte_offset(&self) -> Option<u64> {$/;"	f
binary_data	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn binary_data($/;"	f
binary_data	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn binary_data($/;"	f
binary_data	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn binary_data($/;"	f
binary_detection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn binary_detection() {$/;"	f
binary_detection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn binary_detection($/;"	f
binary_detection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn binary_detection($/;"	f
binary_detection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn binary_detection(&self) -> &BinaryDetection {$/;"	f
binary_detection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn binary_detection($/;"	f
bold	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn bold(&self) -> bool {$/;"	f
bom_sniffing	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn bom_sniffing(&mut self, yes: bool) -> &mut SearcherBuilder {$/;"	f
borrow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn borrow(&self) -> &BStr {$/;"	f
borrow_cow_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrowable_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn borrowable_lifetimes($/;"	f
borrowed_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn borrowed_lifetimes(cont: &Container) -> BorrowedLifetimes {$/;"	f
borrowed_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn borrowed_lifetimes(&self) -> &BTreeSet<syn::Lifetime> {$/;"	f
box_forwarded_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	d
bstr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstr {$/;"	m
bstr	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn bstr(&self) -> &::bstr::BStr {$/;"	f
bstr_serde	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstr_serde {$/;"	m
bstring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstring {$/;"	m
bstring_arbitrary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstring_arbitrary {$/;"	m
bstring_serde	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstring_serde {$/;"	m
buffer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn buffer(&self) -> Buffer {$/;"	f
buffer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer(&self) -> &[u8] {$/;"	f
buffer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn buffer(&self) -> &[u8] {$/;"	f
buffer_alloc	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn buffer_alloc($/;"	f
buffer_basics1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_basics1() {$/;"	f
buffer_basics2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_basics2() {$/;"	f
buffer_basics3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_basics3() {$/;"	f
buffer_basics4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_basics4() {$/;"	f
buffer_binary_convert1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_convert1() {$/;"	f
buffer_binary_convert2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_convert2() {$/;"	f
buffer_binary_convert3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_convert3() {$/;"	f
buffer_binary_convert4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_convert4() {$/;"	f
buffer_binary_none	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_none() {$/;"	f
buffer_binary_quit1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_quit1() {$/;"	f
buffer_binary_quit2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_quit2() {$/;"	f
buffer_binary_quit3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_quit3() {$/;"	f
buffer_binary_quit4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_quit4() {$/;"	f
buffer_binary_quit5	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_binary_quit5() {$/;"	f
buffer_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_empty() {$/;"	f
buffer_limited_capacity1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_limited_capacity1() {$/;"	f
buffer_limited_capacity2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_limited_capacity2() {$/;"	f
buffer_limited_capacity3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_limited_capacity3() {$/;"	f
buffer_small_capacity	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_small_capacity() {$/;"	f
buffer_zero_capacity	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn buffer_zero_capacity() {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn build<W: io::Write>(&self, wtr: W) -> JSON<W> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn build<W: WriteColor>(&self, wtr: W) -> Standard<W> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn build<W: WriteColor>(&self, wtr: W) -> Summary<W> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn build(&self, pattern: &str) -> Result<RegexMatcher, Error> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn build(&self) -> LineBuffer {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn build(&self) -> Searcher {$/;"	f
build_generics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn build_generics(cont: &Container, borrowed: &BorrowedLifetimes) -> syn::Generics {$/;"	f
build_generics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn build_generics(cont: &Container) -> syn::Generics {$/;"	f
build_literals	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn build_literals<B: AsRef<str>>($/;"	f
build_no_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn build_no_color<W: io::Write>($/;"	f
build_no_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn build_no_color<W: io::Write>(&self, wtr: W) -> Summary<NoColor<W>> {$/;"	f
build_table	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^fn build_table(byteset: &[u8]) -> [u8; 256] {$/;"	f
build_tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    fn build_tests() -> Vec<TestCase> {$/;"	f
by_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn by_line(&mut self, yes: bool) -> &mut SearcherTester {$/;"	f
byte	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn byte(byte: u8) -> LineTerminator {$/;"	f
byte_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn byte_count(&mut self) -> u64 {$/;"	f
byte_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub fn byte_count(&self) -> u64 {$/;"	f
byte_lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn byte_lines(self) -> ByteLines<Self>$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn byte_offset(&self) -> usize;$/;"	f
byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn byte_offset() {$/;"	f
byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn byte_offset(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
byte_offset_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn byte_offset_multi_line() {$/;"	f
byte_records	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn byte_records(self, terminator: u8) -> ByteRecords<Self>$/;"	f
bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn bytes(&self) -> Bytes {$/;"	f
bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn bytes(&self) -> &'a [u8] {$/;"	f
bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub fn bytes(&self) -> &'b [u8] {$/;"	f
bytes_printed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn bytes_printed(&self) -> u64 {$/;"	f
bytes_searched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn bytes_searched(&self) -> u64 {$/;"	f
bytes_to_regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/util.rs	/^pub fn bytes_to_regex(bs: &[u8]) -> String {$/;"	f
c	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^    macro_rules! c {$/;"	d
can_plain_aho_corasick	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn can_plain_aho_corasick(&self) -> bool {$/;"	f
candidate_lines	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn candidate_lines() {$/;"	f
capacity	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn capacity(&mut self, capacity: usize) -> &mut LineBufferBuilder {$/;"	f
capture_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn capture_count(&self) -> usize {$/;"	f
capture_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    fn capture_count(&self) -> usize {$/;"	f
capture_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn capture_count(&self) -> usize {$/;"	f
capture_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    fn capture_count(&self) -> usize {$/;"	f
capture_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn capture_count(&self) -> usize {$/;"	f
capture_index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn capture_index(&self, _name: &str) -> Option<usize> {$/;"	f
capture_index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn capture_index(&self, name: &str) -> Option<usize> {$/;"	f
capture_index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    fn capture_index(&self, name: &str) -> Option<usize> {$/;"	f
capture_index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn capture_index(&self, name: &str) -> Option<usize> {$/;"	f
capture_index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    fn capture_index(&self, _: &str) -> Option<usize> {$/;"	f
capture_index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn capture_index(&self, name: &str) -> Option<usize> {$/;"	f
capture_indexing	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn capture_indexing() {$/;"	f
captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn captures($/;"	f
captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn captures($/;"	f
captures_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn captures_at($/;"	f
captures_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    fn captures_at($/;"	f
captures_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn captures_at($/;"	f
captures_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    fn captures_at($/;"	f
captures_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn captures_at($/;"	f
captures_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn captures_iter<F>($/;"	f
captures_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn captures_iter<F>($/;"	f
case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn case_insensitive(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
case_smart	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn case_smart() {$/;"	f
case_smart	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn case_smart(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
cause	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn cause(&self) -> Option<&dyn error::Error> {$/;"	f
cautious	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub fn cautious(hint: Option<usize>) -> usize {$/;"	f
char_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn char_indices(&self) -> CharIndices {$/;"	f
chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn chars(&self) -> Chars {$/;"	f
chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn chars() {$/;"	f
check	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^pub fn check(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn check(self) -> Result<(), Vec<syn::Error>> {$/;"	f
check_adjacent_tag_conflict	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_adjacent_tag_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn check_config<M: Matcher>(&self, matcher: M) -> Result<(), ConfigError> {$/;"	f
check_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_flatten(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {$/;"	f
check_from_and_try_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_from_and_try_from(cx: &Ctxt, cont: &mut Container) {$/;"	f
check_getter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_getter(cx: &Ctxt, cont: &Container) {$/;"	f
check_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_identifier(cx: &Ctxt, cont: &Container) {$/;"	f
check_internal_tag_field_name_conflict	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_internal_tag_field_name_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_recursion	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! check_recursion {$/;"	d
check_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_transparent(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check_variant_skip_attrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_variant_skip_attrs(cx: &Ctxt, cont: &Container) {$/;"	f
chunked_encode_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn chunked_encode_empty() {$/;"	f
chunked_encode_fast_loop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn chunked_encode_fast_loop() {$/;"	f
chunked_encode_intermediate_fast_loop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn chunked_encode_intermediate_fast_loop() {$/;"	f
chunked_encode_matches_normal_encode_random	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    pub fn chunked_encode_matches_normal_encode_random<S: SinkTestHelper>(sink_test_helper: &S) {$/;"	f
chunked_encode_matches_normal_encode_random_string_sink	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn chunked_encode_matches_normal_encode_random_string_sink() {$/;"	f
chunked_encode_slow_loop_only	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn chunked_encode_slow_loop_only() {$/;"	f
chunked_encode_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn chunked_encode_str(bytes: &[u8], config: Config) -> String {$/;"	f
classify	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn classify(&self) -> Category {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn clear(&mut self) {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn clone(&self) -> WordMatcher {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn cmp(&self, other: &BStr) -> Ordering {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn cmp(&self, other: &BString) -> Ordering {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn cmp(self, current: u8, candidate: u8) -> SuffixOrdering {$/;"	f
col	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn col(&self) -> usize {$/;"	f
collect_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn collect_lifetimes(ty: &syn::Type, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn collect_lines<B: AsRef<[u8]>>(slice: B) -> Vec<BString> {$/;"	f
collect_lines_term	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn collect_lines_term<B: AsRef<[u8]>>(slice: B) -> Vec<BString> {$/;"	f
collect_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<()>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<String>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Value>$/;"	f
color_specs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn color_specs(&mut self, specs: ColorSpecs) -> &mut StandardBuilder {$/;"	f
color_specs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn color_specs(&mut self, specs: ColorSpecs) -> &mut SummaryBuilder {$/;"	f
column	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn column(&self) -> usize {$/;"	f
column	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    pub fn column(&self) -> &ColorSpec {$/;"	f
column	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn column(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
column_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn column_number() {$/;"	f
column_number_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn column_number_multi_line() {$/;"	f
concat	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub fn concat<T, I>(elements: I) -> Vec<u8>$/;"	f
config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn config(&self) -> &'a Config {$/;"	f
config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn config(&self) -> &Config {$/;"	f
config_error_heap_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn config_error_heap_limit() {$/;"	f
config_error_line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn config_error_line_terminator() {$/;"	f
config_with_pad	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn config_with_pad(pad: bool) -> Config {$/;"	f
configs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn configs(&self) -> Vec<TesterConfig> {$/;"	f
console	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn console() -> Buffer {$/;"	f
constrain	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
consume	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn consume(&mut self, amt: usize) {$/;"	f
consume	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn consume(&mut self, amt: usize) {$/;"	f
consume_all	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn consume_all(&mut self) {$/;"	f
consume_with_short_reads_and_validate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn consume_with_short_reads_and_validate<R: Read>($/;"	f
contains	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn contains(&self, byte: u8) -> bool {$/;"	f
contains_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn contains_key<Q>(&self, key: &Q) -> bool$/;"	f
contains_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn contains_str<B: AsRef<[u8]>>(&self, needle: B) -> bool {$/;"	f
content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^mod content {$/;"	m
content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^mod content {$/;"	m
context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn context($/;"	f
context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn context($/;"	f
context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn context($/;"	f
context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn context($/;"	f
context_break	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn context_break($/;"	f
context_break	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn context_break() {$/;"	f
context_break	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn context_break($/;"	f
context_break	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn context_break($/;"	f
context_break_multiple_heading	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn context_break_multiple_heading() {$/;"	f
context_break_multiple_no_heading	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn context_break_multiple_no_heading() {$/;"	f
context_code1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_code1() {$/;"	f
context_code2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_code2() {$/;"	f
context_code3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_code3() {$/;"	f
context_kind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn context_kind(&self) -> Option<&'a SinkContextKind> {$/;"	f
context_sherlock1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock1() {$/;"	f
context_sherlock2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock2() {$/;"	f
context_sherlock3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock3() {$/;"	f
context_sherlock4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock4() {$/;"	f
context_sherlock5	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock5() {$/;"	f
context_sherlock6	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock6() {$/;"	f
context_sherlock_invert1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock_invert1() {$/;"	f
context_sherlock_invert2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn context_sherlock_invert2() {$/;"	f
convert	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn convert(binary_byte: u8) -> BinaryDetection {$/;"	f
convert_byte	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn convert_byte(&self) -> Option<u8> {$/;"	f
copy_within_fail1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail1() {$/;"	f
copy_within_fail2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail2() {$/;"	f
copy_within_fail3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail3() {$/;"	f
copy_within_fail4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail4() {$/;"	f
copy_within_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_str<R>(&mut self, src: R, dest: usize)$/;"	f
core	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/lib.rs	/^    mod core {$/;"	m
core	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/lib.rs	/^    mod core {$/;"	m
count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn count(&self) -> u64 {$/;"	f
count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^pub fn count(bytes: &[u8], line_term: u8) -> u64 {$/;"	f
count_byte_class	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^fn count_byte_class(cls: &hir::ClassBytes) -> u32 {$/;"	f
count_lines	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn count_lines(&mut self, buf: &[u8], upto: usize) {$/;"	f
count_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_matches() {$/;"	f
count_max_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_max_matches() {$/;"	f
count_no_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_no_path() {$/;"	f
count_no_path_even_with_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_no_path_even_with_path() {$/;"	f
count_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_path() {$/;"	f
count_path_field_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_path_field_separator() {$/;"	f
count_path_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_path_separator() {$/;"	f
count_path_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_path_terminator() {$/;"	f
count_path_with_zero	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_path_with_zero() {$/;"	f
count_path_without_zero	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn count_path_without_zero() {$/;"	f
count_unicode_class	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^fn count_unicode_class(cls: &hir::ClassUnicode) -> u32 {$/;"	f
create	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn create($/;"	f
create	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn create(sty: StandardStreamType, choice: ColorChoice) -> BufferWriter {$/;"	f
crlf	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn crlf() -> LineTerminator {$/;"	f
crlf	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn crlf(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
crlfify	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^pub fn crlfify(expr: Hir) -> Hir {$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn custom<T>(_: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn custom<T: Display>(msg: T) -> Error {$/;"	f
custom_serde_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn custom_serde_path(&self) -> Option<&syn::Path> {$/;"	f
d	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^        fn d(mut s: &str) -> Vec<char> {$/;"	f
de_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
de_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn de_lifetime(&self) -> syn::Lifetime {$/;"	f
de_lifetime_def	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn de_lifetime_def(&self) -> Option<syn::LifetimeDef> {$/;"	f
decide_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn decide_identifier($/;"	f
decide_tag	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn decide_tag($/;"	f
declare_error_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
declare_error_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
decode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^pub fn decode<T: AsRef<[u8]>>(input: T) -> Result<Vec<u8>, DecodeError> {$/;"	f
decode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode<B: AsRef<[u8]>>(slice: B) -> (Option<char>, usize) {$/;"	f
decode_allow_trailing_bits	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^    pub fn decode_allow_trailing_bits(self, allow: bool) -> Config {$/;"	f
decode_chunk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^fn decode_chunk($/;"	f
decode_chunk_precise	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^fn decode_chunk_precise($/;"	f
decode_chunk_precise_writes_only_6_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn decode_chunk_precise_writes_only_6_bytes() {$/;"	f
decode_chunk_writes_8_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn decode_chunk_writes_8_bytes() {$/;"	f
decode_config	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^pub fn decode_config<T: AsRef<[u8]>>(input: T, config: Config) -> Result<Vec<u8>, DecodeError> {$/;"	f
decode_config_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^pub fn decode_config_buf<T: AsRef<[u8]>>($/;"	f
decode_config_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^pub fn decode_config_slice<T: AsRef<[u8]>>($/;"	f
decode_grapheme	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^pub fn decode_grapheme(bs: &[u8]) -> (&str, usize) {$/;"	f
decode_helper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^fn decode_helper($/;"	f
decode_hex_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	f
decode_hex_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16>;$/;"	f
decode_hex_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn decode_hex_val(val: u8) -> Option<u16> {$/;"	f
decode_imap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn decode_imap() {$/;"	f
decode_into_nonempty_vec_doesnt_clobber_existing_prefix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn decode_into_nonempty_vec_doesnt_clobber_existing_prefix() {$/;"	f
decode_into_slice_doesnt_clobber_existing_prefix_or_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn decode_into_slice_doesnt_clobber_existing_prefix_or_suffix() {$/;"	f
decode_into_slice_fits_in_precisely_sized_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn decode_into_slice_fits_in_precisely_sized_slice() {$/;"	f
decode_invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_invalid() {$/;"	f
decode_last	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_last<B: AsRef<[u8]>>(slice: B) -> (Option<char>, usize) {$/;"	f
decode_last_grapheme	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^fn decode_last_grapheme(bs: &[u8]) -> (&str, usize) {$/;"	f
decode_last_invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_last_invalid() {$/;"	f
decode_last_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_last_lossy() {$/;"	f
decode_last_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_last_lossy<B: AsRef<[u8]>>(slice: B) -> (char, usize) {$/;"	f
decode_last_valid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_last_valid() {$/;"	f
decode_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_lossy() {$/;"	f
decode_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_lossy<B: AsRef<[u8]>>(slice: B) -> (char, usize) {$/;"	f
decode_sentence	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^fn decode_sentence(bs: &[u8]) -> (&str, usize) {$/;"	f
decode_step	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_step(state: &mut usize, cp: &mut u32, b: u8) {$/;"	f
decode_table	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^    fn decode_table(self) -> &'static [u8; 256] {$/;"	f
decode_to_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^    fn decode_to_buf(&mut self, num_bytes: usize, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
decode_valid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_valid() {$/;"	f
decode_word	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^fn decode_word(bs: &[u8]) -> (&str, usize) {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn default() -> &'a BStr {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn default() -> &'a mut BStr {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn default() -> BString {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn default() -> Value {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn default() -> ColorSpec {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn default() -> LineTerminator {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn default() -> RegexMatcherBuilder {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn default() -> BinaryDetection {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn default() -> BufferAllocation {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mmap.rs	/^    fn default() -> MmapChoice {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn default() -> SearcherBuilder {$/;"	f
default_color_specs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^pub fn default_color_specs() -> Vec<UserColorSpec> {$/;"	f
default_with_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    pub fn default_with_color() -> ColorSpecs {$/;"	f
delegate_iterator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^macro_rules! delegate_iterator {$/;"	d
deny_unknown_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn deny_unknown_fields(&self) -> bool {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref(&self) -> &Vec<u8> {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref(&self) -> &[u8] {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	d
deref_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref_mut(&mut self) -> &mut Vec<u8> {$/;"	f
deref_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref_mut(&mut self) -> &mut [u8] {$/;"	f
derive_deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/lib.rs	/^pub fn derive_deserialize(input: TokenStream) -> TokenStream {$/;"	f
derive_serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/lib.rs	/^pub fn derive_serialize(input: TokenStream) -> TokenStream {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<&'a BStr, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<BString, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^                fn deserialize<__D>(__deserializer: __D) -> #serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^                fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn deserialize<__D>(__deserializer: __D) -> _serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Number, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberFromString, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberKey, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<RawKey, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize_adjacently_tagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_adjacently_tagged_enum($/;"	f
deserialize_aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn deserialize_aliases(&self) -> Vec<String> {$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! deserialize_any {$/;"	d
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_custom_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_custom_identifier($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	d
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_enum($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_externally_tagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_externally_tagged_enum($/;"	f
deserialize_externally_tagged_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_externally_tagged_newtype_variant($/;"	f
deserialize_externally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_externally_tagged_variant($/;"	f
deserialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_from(type_from: &syn::Type) -> Fragment {$/;"	f
deserialize_generated_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_generated_identifier($/;"	f
deserialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_identifier($/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn deserialize_in_place<__D>(__deserializer: __D, __place: &mut Self) -> _serde::export::Result<(), __D::Error>$/;"	f
deserialize_in_place_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_in_place_body(_cont: &Container, _params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_in_place_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_in_place_body(cont: &Container, params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_integer_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! deserialize_integer_key {$/;"	d
deserialize_integer_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^macro_rules! deserialize_integer_key {$/;"	d
deserialize_internally_tagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_internally_tagged_enum($/;"	f
deserialize_internally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_internally_tagged_variant($/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_map($/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_map_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_map_in_place($/;"	f
deserialize_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn deserialize_name(&self) -> String {$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_newtype_struct($/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, name: &str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_newtype_struct_in_place(params: &Parameters, field: &Field) -> TokenStream {$/;"	f
deserialize_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! deserialize_number {$/;"	d
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_other	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_prim_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_prim_number<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_prim_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! deserialize_prim_number {$/;"	d
deserialize_prim_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^macro_rules! deserialize_prim_number {$/;"	d
deserialize_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_raw_value<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_seq($/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_seq_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_seq_in_place($/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct_as_map_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_as_map_visitor($/;"	f
deserialize_struct_as_struct_in_place_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_as_struct_in_place_visitor($/;"	f
deserialize_struct_as_struct_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_as_struct_visitor($/;"	f
deserialize_struct_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_in_place($/;"	f
deserialize_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_try_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_try_from(type_try_from: &syn::Type) -> Fragment {$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_tuple($/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_tuple_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_tuple_in_place($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_unit_struct(params: &Parameters, cattrs: &attr::Container) -> Fragment {$/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_untagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_untagged_enum($/;"	f
deserialize_untagged_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_untagged_newtype_variant($/;"	f
deserialize_untagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_untagged_variant($/;"	f
deserialize_value_ref_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^macro_rules! deserialize_value_ref_number {$/;"	d
deserialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
detect_binary	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn detect_binary($/;"	f
detect_invalid_last_symbol_every_possible_three_symbols	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn detect_invalid_last_symbol_every_possible_three_symbols() {$/;"	f
detect_invalid_last_symbol_every_possible_two_symbols	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn detect_invalid_last_symbol_every_possible_two_symbols() {$/;"	f
detect_invalid_last_symbol_one_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn detect_invalid_last_symbol_one_byte() {$/;"	f
detect_invalid_last_symbol_two_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn detect_invalid_last_symbol_two_bytes() {$/;"	f
dfa_size_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn dfa_size_limit($/;"	f
disable_recursion_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn disable_recursion_limit(&mut self) {$/;"	f
discard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn discard(&mut self) {$/;"	f
discard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn discard(&mut self);$/;"	f
display_encode_matches_normal_encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^    fn display_encode_matches_normal_encode() {$/;"	f
do_encode_random_config_matches_normal_encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn do_encode_random_config_matches_normal_encode(max_input_len: usize) {$/;"	f
done	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn done(&self) -> bool {$/;"	f
dot	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^    fn dot() {$/;"	f
dot_matches_new_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn dot_matches_new_line($/;"	f
drain_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn drain_bytes<R>(&mut self, range: R) -> DrainBytes$/;"	f
drop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    fn drop(&mut self) {$/;"	f
drop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    fn drop(&mut self) {$/;"	f
drop_calls_finish_for_you	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn drop_calls_finish_for_you() {$/;"	f
duplicate_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn duplicate_field(field: &'static str) -> Self {$/;"	f
eat_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn eat_char(&mut self) {$/;"	f
effective_style	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
effective_style	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
elapsed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn elapsed(&self) -> Duration {$/;"	f
empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn empty() -> ByteSet {$/;"	f
empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn empty() -> SubMatches<'static> {$/;"	f
empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn empty() -> Sunk<'static> {$/;"	f
empty_line1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn empty_line1() {$/;"	f
empty_line1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn empty_line1() {$/;"	f
empty_line2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn empty_line2() {$/;"	f
empty_line2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn empty_line2() {$/;"	f
empty_line3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn empty_line3() {$/;"	f
empty_line3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn empty_line3() {$/;"	f
empty_line4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn empty_line4() {$/;"	f
empty_line4	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn empty_line4() {$/;"	f
empty_line5	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn empty_line5() {$/;"	f
empty_line5	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn empty_line5() {$/;"	f
empty_line6	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn empty_line6() {$/;"	f
empty_line6	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn empty_line6() {$/;"	f
encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    pub fn encode<S: Sink>(&self, bytes: &[u8], sink: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^pub fn encode<T: AsRef<[u8]>>(input: T) -> String {$/;"	f
encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
encode_1_2_3_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_1_2_3_bytes() {$/;"	f
encode_config	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^pub fn encode_config<T: AsRef<[u8]>>(input: T, config: Config) -> String {$/;"	f
encode_config_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^pub fn encode_config_buf<T: AsRef<[u8]>>(input: T, config: Config, buf: &mut String) {$/;"	f
encode_config_buf_into_nonempty_buffer_doesnt_clobber_prefix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encode_config_buf_into_nonempty_buffer_doesnt_clobber_prefix() {$/;"	f
encode_config_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^pub fn encode_config_slice<T: AsRef<[u8]>>(input: T, config: Config, output: &mut [u8]) -> usize {$/;"	f
encode_config_slice_fits_into_precisely_sized_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encode_config_slice_fits_into_precisely_sized_slice() {$/;"	f
encode_config_slice_into_nonempty_buffer_doesnt_clobber_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encode_config_slice_into_nonempty_buffer_doesnt_clobber_suffix() {$/;"	f
encode_imap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encode_imap() {$/;"	f
encode_nine_bytes_two_writes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_nine_bytes_two_writes() {$/;"	f
encode_one_then_five_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_one_then_five_bytes() {$/;"	f
encode_one_then_two_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_one_then_two_bytes() {$/;"	f
encode_random_config_matches_normal_encode_reasonable_input_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_random_config_matches_normal_encode_reasonable_input_len() {$/;"	f
encode_random_config_matches_normal_encode_tiny_input_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_random_config_matches_normal_encode_tiny_input_len() {$/;"	f
encode_table	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^    fn encode_table(self) -> &'static [u8; 64] {$/;"	f
encode_three_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_three_bytes() {$/;"	f
encode_to_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^pub fn encode_to_slice(input: &[u8], output: &mut [u8], encode_table: &[u8; 64]) -> usize {$/;"	f
encode_to_slice_random_valid_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encode_to_slice_random_valid_utf8() {$/;"	f
encode_to_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^        fn encode_to_string(&self, config: Config, bytes: &[u8]) -> String {$/;"	f
encode_to_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^        fn encode_to_string(&self, config: Config, bytes: &[u8]) -> String;$/;"	f
encode_to_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^        fn encode_to_string(&self, config: Config, bytes: &[u8]) -> String {$/;"	f
encode_with_padding	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^fn encode_with_padding(input: &[u8], config: Config, encoded_size: usize, output: &mut [u8]) {$/;"	f
encode_with_padding	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_with_padding() {$/;"	f
encode_with_padding_multiple_writes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn encode_with_padding_multiple_writes() {$/;"	f
encode_with_padding_random_valid_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encode_with_padding_random_valid_utf8() {$/;"	f
encoded_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^pub fn encoded_size(bytes_len: usize, config: Config) -> Option<usize> {$/;"	f
encoded_size_correct_no_pad	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encoded_size_correct_no_pad() {$/;"	f
encoded_size_correct_standard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encoded_size_correct_standard() {$/;"	f
encoded_size_overflow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^    fn encoded_size_overflow() {$/;"	f
encoding	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn encoding($/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn end(&mut self) -> Result<()> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end(self) -> Result<()> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	f
end	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn end(&self) -> usize {$/;"	f
end_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_array<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
end_array_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_array_value<W>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_color_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn end_color_match(&self) -> io::Result<()> {$/;"	f
end_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn end_map(&mut self) -> Result<()> {$/;"	f
end_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_object<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
end_object_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_object_key<W>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_object_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_object_value<W>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_raw_buffering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
end_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn end_seq(&mut self) -> Result<()> {$/;"	f
end_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
ends_with_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn ends_with_str<B: AsRef<[u8]>>(&self, suffix: B) -> bool {$/;"	f
ensure_capacity	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn ensure_capacity(&mut self) -> Result<(), io::Error> {$/;"	f
entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn entry<S>(&mut self, key: S) -> Entry$/;"	f
enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        struct enum identifier ignored_any$/;"	s
enum_from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^fn enum_from_ast<'a>($/;"	f
env_allows_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn env_allows_color(&self) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn eq(&self, other: &$lhs) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn eq(&self, other: &$rhs) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn eq(&self, other: &BStr) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn eq(&self, other: &BString) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^                fn eq(&self, other: &$ty) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^                fn eq(&self, other: &Value) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &Value) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	f
eq_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_bool(value: &Value, other: bool) -> bool {$/;"	f
eq_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_f64(value: &Value, other: f64) -> bool {$/;"	f
eq_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_i64(value: &Value, other: i64) -> bool {$/;"	f
eq_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_str(value: &Value, other: &str) -> bool {$/;"	f
eq_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_u64(value: &Value, other: u64) -> bool {$/;"	f
error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn error(&self, reason: ErrorCode) -> Error {$/;"	f
error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn error<'de, R, T>(read: &R, reason: ErrorCode) -> Result<T>$/;"	f
error_config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn error_config(err: ConfigError) -> Self {$/;"	f
error_io	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn error_io(err: io::Error) -> Self {$/;"	f
error_io	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn error_io(err: io::Error) -> io::Error {$/;"	f
error_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn error_len(&self) -> Option<usize> {$/;"	f
error_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn error_message<T: fmt::Display>(message: T) -> Box<dyn error::Error> {$/;"	f
error_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn error_message<T: fmt::Display>(message: T) -> Self;$/;"	f
error_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn error_message<T: fmt::Display>(message: T) -> io::Error {$/;"	f
error_spanned_by	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {$/;"	f
every_line_is_candidate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn every_line_is_candidate(&mut self, yes: bool) -> &mut RegexMatcher {$/;"	f
every_possible_split_of_input	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn every_possible_split_of_input() {$/;"	f
example	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/lib.rs	/^fn example() -> Result<(), Box<Error>> {$/;"	f
example	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lib.rs	/^fn example() -> Result<(), Box<Error>> {$/;"	f
exceeds_max_columns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn exceeds_max_columns(&self, line: &[u8]) -> bool {$/;"	f
exclude_zero	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn exclude_zero(&mut self, yes: bool) -> &mut SummaryBuilder {$/;"	f
expand_derive_deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^pub fn expand_derive_deserialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expand_derive_serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^pub fn expand_derive_serialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expected_no_line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn expected_no_line_number($/;"	f
expected_slice_no_line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn expected_slice_no_line_number($/;"	f
expected_slice_with_line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn expected_slice_with_line_number($/;"	f
expected_with_line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn expected_with_line_number($/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expr_is_missing	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn expr_is_missing(field: &Field, cattrs: &attr::Container) -> Fragment {$/;"	f
extend	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
extract	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^    fn extract(pattern: &str) -> ByteSet {$/;"	f
f64_from_parts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn f64_from_parts($/;"	f
fast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn fast(slice: &[u8]) -> Result<(), Utf8Error> {$/;"	f
fast_find	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn fast_find($/;"	f
fast_line_regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn fast_line_regex(&self) -> Result<Option<Regex>, Error> {$/;"	f
fg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn fg(&self) -> Option<&Color> {$/;"	f
field_i	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn field_i(i: usize) -> Ident {$/;"	f
fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn fields(&self) -> Fields {$/;"	f
fields_from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^fn fields_from_ast<'a>($/;"	f
fields_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn fields_with<F: FnMut(char) -> bool>(&self, f: F) -> FieldsWith<F> {$/;"	f
fill	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn fill<R: io::Read>(&mut self, mut rdr: R) -> Result<bool, io::Error> {$/;"	f
fill	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn fill(&mut self) -> Result<bool, io::Error> {$/;"	f
fill	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn fill(&mut self) -> Result<bool, S::Error> {$/;"	f
fill_multi_line_buffer_from_file	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn fill_multi_line_buffer_from_file<S: Sink>($/;"	f
fill_multi_line_buffer_from_reader	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn fill_multi_line_buffer_from_reader<R: io::Read, S: Sink>($/;"	f
filter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn filter(&mut self, pattern: &str) -> &mut SearcherTester {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find<B: AsRef<[u8]>>(&self, needle: B) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn find<B: AsRef<[u8]>>(&self, haystack: B) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^    macro_rules! find {$/;"	d
find	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn find(&self, haystack: &[u8]) -> Result<Option<Match>, Self::Error> {$/;"	f
find	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn find(&self, haystack: &[u8]) -> Result<Option<Match>, NoError> {$/;"	f
find	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn find(pattern: &str, haystack: &str) -> Option<(usize, usize)> {$/;"	f
find	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn find(&mut self) -> Result<Option<Range>, S::Error> {$/;"	f
find_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn find_at($/;"	f
find_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    fn find_at($/;"	f
find_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn find_at($/;"	f
find_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    fn find_at($/;"	f
find_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn find_at($/;"	f
find_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn find_at($/;"	f
find_by_caps	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn find_by_caps(pattern: &str, haystack: &str) -> Option<(usize, usize)> {$/;"	f
find_by_line_fast	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn find_by_line_fast($/;"	f
find_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_byte(&self, byte: u8) -> Option<usize> {$/;"	f
find_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
find_candidate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn find_candidate($/;"	f
find_candidate_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn find_candidate_line($/;"	f
find_candidate_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn find_candidate_line($/;"	f
find_candidate_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn find_candidate_line($/;"	f
find_cap_ref	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^fn find_cap_ref(replacement: &[u8]) -> Option<CaptureRef> {$/;"	f
find_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_char(&self, ch: char) -> Option<usize> {$/;"	f
find_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_iter<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
find_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn find_iter<F>($/;"	f
find_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn find_iter<F>(&self, haystack: &[u8], matched: F) -> Result<(), NoError>$/;"	f
find_large	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_large($/;"	f
find_large_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_large_imp($/;"	f
find_non_ascii_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_non_ascii_byte(&self) -> Option<usize> {$/;"	f
find_not_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_not_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
find_small	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_small($/;"	f
find_small_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_small_imp($/;"	f
find_valid_up_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn find_valid_up_to(slice: &[u8], rejected_at: usize) -> Utf8Error {$/;"	f
find_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn find_with($/;"	f
findpos	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^                    unsafe fn findpos($/;"	f
finish	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    pub fn finish(&mut self) -> Result<()> {$/;"	f
finish	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn finish($/;"	f
finish	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn finish($/;"	f
finish	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn finish($/;"	f
finish	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn finish($/;"	f
finish	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn finish($/;"	f
finish	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn finish($/;"	f
finish_writes_extra_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn finish_writes_extra_byte() {$/;"	f
first_non_ascii_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^pub fn first_non_ascii_byte(slice: &[u8]) -> usize {$/;"	f
first_non_ascii_byte_fallback	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn first_non_ascii_byte_fallback(slice: &[u8]) -> usize {$/;"	f
first_non_ascii_byte_mask	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn first_non_ascii_byte_mask(mask: usize) -> usize {$/;"	f
first_non_ascii_byte_slow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn first_non_ascii_byte_slow($/;"	f
first_non_ascii_byte_sse2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn first_non_ascii_byte_sse2(slice: &[u8]) -> usize {$/;"	f
fix_position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn fix_position(&self, err: Error) -> Error {$/;"	f
flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn flatten(&self) -> bool {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn flush(&mut self) -> Result<()>;$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    fn flush(&mut self) -> Result<(), io::Error> {$/;"	f
flush_decoded_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^    fn flush_decoded_buf(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^    fn fmt(&self, formatter: &mut Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn fmt(&self, _formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt_primitives	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	d
for_byte_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_line<F>(self, mut for_each_line: F) -> io::Result<()>$/;"	f
for_byte_line_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_line_with_terminator<F>($/;"	f
for_byte_record	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_record<F>($/;"	f
for_byte_record_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_record_with_terminator<F>($/;"	f
format_escaped_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn format_escaped_str<W, F>(writer: &mut W, formatter: &mut F, value: &str) -> io::Result<()>$/;"	f
format_escaped_str_contents	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn format_escaped_str_contents<W, F>($/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn forward(needle: &[u8]) -> Freqy {$/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn forward($/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn forward(needle: &[u8], kind: SuffixKind) -> Suffix {$/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn forward(needle: &'b [u8]) -> TwoWay<'b> {$/;"	f
forward_additional	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn forward_additional() {$/;"	f
forward_additional	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn forward_additional() {$/;"	f
forward_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn forward_lossy() {$/;"	f
forward_search	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^unsafe fn forward_search<F: Fn(u8) -> bool>($/;"	f
forward_to_deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	d
forward_to_deserialize_any_helper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	d
forward_to_deserialize_any_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	d
forward_to_deserialize_other	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	d
forward_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn forward_ucd() {$/;"	f
forward_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn forward_ucd() {$/;"	f
forward_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn forward_ucd() {$/;"	f
forwarded_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	d
fractional_seconds	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    fn fractional_seconds(&self) -> f64 {$/;"	f
free_buffer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn free_buffer(&mut self) -> &mut [u8] {$/;"	f
freqy_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn freqy_forward() {$/;"	f
freqy_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn freqy_reverse() {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a BStr) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a BStr) -> Cow<'a, BStr> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a [u8]) -> &'a BStr {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a [u8]) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a str) -> &'a BStr {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a str) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: BString) -> Cow<'a, BStr> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: BString) -> Vec<u8> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: String) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: Vec<u8>) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn from(j: Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^                fn from(i: $ty) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^                fn from(u: $ty) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        fn from(i: i128) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        fn from(u: u128) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn from(value: ParserNumber) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^                fn from(n: $ty) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from((): ()) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: &'a [T]) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: &str) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: Cow<'a, str>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: Map<String, Value>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: String) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: Vec<T>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: bool) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: f32) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: f64) -> Self {$/;"	f
from	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^    fn from(x: &'a str) -> Ref<'a> {$/;"	f
from	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^    fn from(x: usize) -> Ref<'static> {$/;"	f
from	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn from(_: NoError) -> io::Error {$/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^    pub fn from_ast($/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn from_ast($/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, item: &syn::DeriveInput) -> Self {$/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, variant: &syn::Variant) -> Self {$/;"	f
from_ast	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    pub fn from_ast(ast: &Ast) -> AstAnalysis {$/;"	f
from_ast_class_set	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn from_ast_class_set(&mut self, ast: &ast::ClassSet) {$/;"	f
from_ast_class_set_item	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn from_ast_class_set_item(&mut self, ast: &ast::ClassSetItem) {$/;"	f
from_ast_impl	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn from_ast_impl(&mut self, ast: &Ast) {$/;"	f
from_ast_literal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn from_ast_literal(&mut self, ast: &ast::Literal) {$/;"	f
from_attrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn from_attrs($/;"	f
from_borrowed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn from_borrowed(json: &str) -> &Self {$/;"	f
from_bounds	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f
from_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^    fn from_bytes(bytes: &[u8]) -> Data {$/;"	f
from_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn from_context($/;"	f
from_escape_table	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn from_escape_table(escape: u8, byte: u8) -> CharEscape {$/;"	f
from_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn from_f64(f: f64) -> Option<Number> {$/;"	f
from_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i16(n: i16) -> Option<Self>;$/;"	f
from_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i32(n: i32) -> Option<Self>;$/;"	f
from_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	f
from_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i8(n: i8) -> Option<Self>;$/;"	f
from_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^macro_rules! from_integer {$/;"	d
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = &'a BStr>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = &'a [u8]>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = &'a str>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = BString>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = char>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = u8>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn from_iter<T>(iter: T) -> Self$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {$/;"	f
from_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn from_match($/;"	f
from_os_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn from_os_str(os_str: &OsStr) -> Option<&[u8]> {$/;"	f
from_os_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_os_str_lossy<'a>(os_str: &'a OsStr) -> Cow<'a, [u8]> {$/;"	f
from_os_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_os_string(os_str: OsString) -> Result<Vec<u8>, OsString> {$/;"	f
from_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn from_owned(json: Box<str>) -> Box<Self> {$/;"	f
from_parse_error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn from_parse_error(err: ParseColorError) -> ColorError {$/;"	f
from_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn from_path(path: &Path) -> Option<&[u8]> {$/;"	f
from_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^    fn from_path(path: &Path) -> Data {$/;"	f
from_path_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_path_buf(path: PathBuf) -> Result<Vec<u8>, PathBuf> {$/;"	f
from_path_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_path_lossy<'a>(path: &'a Path) -> Cow<'a, [u8]> {$/;"	f
from_pattern	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    pub fn from_pattern(pattern: &str) -> Option<AstAnalysis> {$/;"	f
from_reader	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn from_reader(reader: R) -> Self {$/;"	f
from_reader	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub fn from_reader<R, T>(rdr: R) -> Result<T>$/;"	f
from_sink_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn from_sink_context($/;"	f
from_sink_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn from_sink_match($/;"	f
from_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_slice<B: AsRef<[u8]>>(bytes: B) -> Vec<u8> {$/;"	f
from_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn from_slice(bytes: &'a [u8]) -> Self {$/;"	f
from_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub fn from_slice<'a, T>(v: &'a [u8]) -> Result<T>$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    fn from_str(rename_all_str: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn from_str(s: &str) -> result::Result<Self, Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn from_str(s: &'a str) -> Self {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub fn from_str<'a, T>(s: &'a str) -> Result<T>$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn from_str(s: &str) -> Result<Value, Error> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_str(s: &str) -> Result<Color, ParseColorError> {$/;"	f
from_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn from_str(s: &str) -> Result<OutType, ColorError> {$/;"	f
from_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn from_str(s: &str) -> Result<SpecType, ColorError> {$/;"	f
from_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn from_str(s: &str) -> Result<Style, ColorError> {$/;"	f
from_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn from_str(s: &str) -> Result<UserColorSpec, ColorError> {$/;"	f
from_str_numeric	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_str_numeric(s: &str) -> Result<Color, ParseColorError> {$/;"	f
from_stream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_stream(stream: &StandardStream) -> StandardStreamLock {$/;"	f
from_stream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_stream(stream: &StandardStream) -> StandardStreamLock<'_> {$/;"	f
from_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    pub fn from_string(json: String) -> Result<Box<Self>, Error> {$/;"	f
from_string_unchecked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn from_string_unchecked(n: String) -> Self {$/;"	f
from_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^fn from_trait<'de, R, T>(read: R) -> Result<T>$/;"	f
from_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u16(n: u16) -> Option<Self>;$/;"	f
from_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u32(n: u32) -> Option<Self>;$/;"	f
from_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	f
from_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u8(n: u8) -> Option<Self>;$/;"	f
from_utf8_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f
from_utf8_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f
from_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^pub fn from_value<T>(value: Value) -> Result<T, Error>$/;"	f
full	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn full() -> ByteSet {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get(&self) -> bool {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get(self) -> Option<T> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get(self) -> Vec<T> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get(&self) -> &Value {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get<Q>(&self, key: &Q) -> Option<&Value>$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    pub fn get(&self) -> &str {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn get<I: Index>(&self, index: I) -> Option<&Value> {$/;"	f
get	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn get(&self, _: usize) -> Option<Match> {$/;"	f
get	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn get(&self, i: usize) -> Option<Match>;$/;"	f
get	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn get(&self, i: usize) -> Option<Match> {$/;"	f
get_lit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_lit_str<'a>(cx: &Ctxt, attr_name: Symbol, lit: &'a syn::Lit) -> Result<&'a syn::LitStr, ()> {$/;"	f
get_lit_str2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_lit_str2<'a>($/;"	f
get_member	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {$/;"	f
get_multiple_renames	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_multiple_renames<'a>($/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut Value {$/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get_mut<Q>(&mut self, key: &Q) -> Option<&mut Value>$/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn get_mut<I: Index>(&mut self, index: I) -> Option<&mut Value> {$/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	f
get_mut	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	f
get_mut	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	f
get_mut	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	f
get_mut	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	f
get_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn get_ref(&self) -> &W {$/;"	f
get_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn get_ref(&self) -> &W {$/;"	f
get_ref	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn get_ref(&self) -> &W {$/;"	f
get_renames	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_renames<'a>($/;"	f
get_ser_and_de	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_ser_and_de<'a, 'b, T, F>($/;"	f
get_serde_meta_items	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub fn get_serde_meta_items(cx: &Ctxt, attr: &syn::Attribute) -> Result<Vec<syn::NestedMeta>, ()> {$/;"	f
get_suffix_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn get_suffix_forward(needle: &[u8], kind: SuffixKind) -> (&[u8], usize) {$/;"	f
get_suffix_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn get_suffix_reverse(needle: &[u8], kind: SuffixKind) -> (&[u8], usize) {$/;"	f
get_where_predicates	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_where_predicates($/;"	f
get_with_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get_with_tokens(self) -> Option<(TokenStream, T)> {$/;"	f
getter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn getter(&self) -> Option<&syn::ExprPath> {$/;"	f
grapheme_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn grapheme_indices(&self) -> GraphemeIndices {$/;"	f
graphemes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn graphemes(&self) -> Graphemes {$/;"	f
handles_short_read_from_delegate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn handles_short_read_from_delegate() {$/;"	f
has_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn has_flatten(&self) -> bool {$/;"	f
has_getter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^    pub fn has_getter(&self) -> bool {$/;"	f
has_line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn has_line_terminator(&self, buf: &[u8]) -> bool {$/;"	f
has_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn has_match(&self) -> bool {$/;"	f
has_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn has_match(&self) -> bool {$/;"	f
has_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn has_match(&self) -> bool {$/;"	f
has_only_whitespace	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^fn has_only_whitespace(lits: &[Literal]) -> bool {$/;"	f
has_written	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn has_written(&self) -> bool {$/;"	f
has_written	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn has_written(&self) -> bool {$/;"	f
has_written	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn has_written(&self) -> bool {$/;"	f
haystack	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn haystack(&self) -> &'a [u8] {$/;"	f
heading	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn heading() {$/;"	f
heading	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn heading(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
heading_multiple	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn heading_multiple() {$/;"	f
heap_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn heap_limit($/;"	f
helper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f
hide_from_rustfmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/features_check/mod.rs	/^macro_rules! hide_from_rustfmt {$/;"	d
hir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn hir(&self, pattern: &str) -> Result<ConfiguredHIR, Error> {$/;"	f
identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn identifier(&self) -> Identifier {$/;"	f
identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        struct identifier ignored_any$/;"	s
if_checking_recursion_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! if_checking_recursion_limit {$/;"	d
ignore_decimal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_decimal(&mut self) -> Result<()> {$/;"	f
ignore_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn ignore_escape<'de, R>(read: &mut R) -> Result<()>$/;"	f
ignore_exponent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_exponent(&mut self) -> Result<()> {$/;"	f
ignore_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_integer(&mut self) -> Result<()> {$/;"	f
ignore_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	f
ignore_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()>;$/;"	f
ignore_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_value(&mut self) -> Result<()> {$/;"	f
ignore_whitespace	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn ignore_whitespace($/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^        fn imp(bytes: &[u8]) -> Cow<OsStr> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^        fn imp(bytes: &[u8]) -> Result<&OsStr, Utf8Error> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^        fn imp(os_str: &OsStr) -> Option<&[u8]> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp(os_str: OsString) -> Result<Vec<u8>, OsString> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp(v: Vec<u8>) -> OsString {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp(v: Vec<u8>) -> Result<OsString, Vec<u8>> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp<'a>(os_str: &'a OsStr) -> Cow<'a, [u8]> {$/;"	f
impl_copy_clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	d
impl_deserialize_num	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	d
impl_from_primitive_for_float	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_float {$/;"	d
impl_from_primitive_for_int	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_int {$/;"	d
impl_from_primitive_for_uint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_uint {$/;"	d
impl_from_signed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! impl_from_signed {$/;"	d
impl_from_unsigned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! impl_from_unsigned {$/;"	d
impl_partial_eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^macro_rules! impl_partial_eq {$/;"	d
impl_partial_eq_cow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^macro_rules! impl_partial_eq_cow {$/;"	d
impl_partial_ord	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^macro_rules! impl_partial_ord {$/;"	d
in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn in_place(self) -> InPlaceImplGenerics<'a> {$/;"	f
in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn in_place(self) -> InPlaceTypeGenerics<'a> {$/;"	f
include	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn include(&self, label: &str) -> bool {$/;"	f
indent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn indent<W>(wr: &mut W, n: usize, s: &[u8]) -> io::Result<()>$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, _: ops::RangeFull) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, idx: usize) -> &u8 {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::Range<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeFrom<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeInclusive<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeTo<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeToInclusive<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn index(&self, index: &Q) -> &Value {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index(&self, index: I) -> &Value {$/;"	f
index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn index(&self, index: Match) -> &[u8] {$/;"	f
index	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn index(&self, index: Match) -> &str {$/;"	f
index_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	f
index_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value>;$/;"	f
index_into_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	f
index_into_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value>;$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, _: ops::RangeFull) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, idx: usize) -> &mut u8 {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::Range<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeFrom<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeInclusive<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeTo<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeToInclusive<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn index_mut(&mut self, index: &Q) -> &mut Value {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_mut(&mut self, index: I) -> &mut Value {$/;"	f
index_mut	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn index_mut(&mut self, index: Match) -> &mut [u8] {$/;"	f
index_or_insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	f
index_or_insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value;$/;"	f
inert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn inert() -> Freqy {$/;"	f
inert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn inert() -> PrefilterState {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert() {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn insert<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn insert(&mut self, k: String, v: Value) -> Option<Value> {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn insert(&mut self, value: Value) -> Value {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn insert(self, value: Value) -> &'a mut Value {$/;"	f
insert_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_char(&mut self, at: usize, ch: char) {$/;"	f
insert_fail1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_fail1() {$/;"	f
insert_fail2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_fail2() {$/;"	f
insert_fail3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_fail3() {$/;"	f
insert_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_str<B: AsRef<[u8]>>(&mut self, at: usize, bytes: B) {$/;"	f
int_to_int	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! int_to_int {$/;"	d
int_to_uint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! int_to_uint {$/;"	d
intense	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn intense(&self) -> bool {$/;"	f
interp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^    macro_rules! interp {$/;"	d
interpolate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^pub fn interpolate<A, N>($/;"	f
interpolate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn interpolate<F>($/;"	f
interpolate_string	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^    fn interpolate_string($/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            fn into_deserializer(self) -> $name<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn into_inner(self) -> Vec<u8> {$/;"	f
into_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn into_iter<T>(self) -> StreamDeserializer<'de, R, T>$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn into_mut(self) -> &'a mut Value {$/;"	f
into_os_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_os_string(self) -> Result<OsString, Vec<u8>>$/;"	f
into_os_string_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_os_string_lossy(self) -> OsString$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn into_owned(self) -> CowBytes<'static> {$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn into_owned(self) -> Finder<'static> {$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn into_owned(self) -> FinderReverse<'static> {$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn into_owned(self) -> TwoWay<'static> {$/;"	f
into_path_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_path_buf(self) -> Result<PathBuf, Vec<u8>>$/;"	f
into_path_buf_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_path_buf_lossy(self) -> PathBuf$/;"	f
into_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_string(self) -> Result<String, FromUtf8Error>$/;"	f
into_string_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_string_lossy(self) -> String$/;"	f
into_string_unchecked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    unsafe fn into_string_unchecked(self) -> String$/;"	f
into_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_vec(self) -> Vec<u8> {$/;"	f
into_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_vec(self) -> Vec<u8>$/;"	f
into_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    pub fn into_vec(self) -> Vec<u8> {$/;"	f
inv_memchr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^pub fn inv_memchr(n1: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
inv_memrchr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^pub fn inv_memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn invalid(&self) -> &'a [u8] {$/;"	f
invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn invalid(&self) -> &str {$/;"	f
invalid_length	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn invalid_length(len: usize, exp: &Expected) -> Self {$/;"	f
invalid_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn invalid_type(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn invalid_type(self, exp: &dyn Expected) -> Error {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn invalid_type(unexp: de::Unexpected, exp: &dyn de::Expected) -> Self {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn invalid_type<E>(&self, exp: &dyn Expected) -> E$/;"	f
invalid_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn invalid_value(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
invert	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn invert() {$/;"	f
invert1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn invert1() {$/;"	f
invert_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn invert_context() {$/;"	f
invert_context_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn invert_context_multi_line() {$/;"	f
invert_context_only_matching	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn invert_context_only_matching() {$/;"	f
invert_context_only_matching_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn invert_context_only_matching_multi_line() {$/;"	f
invert_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn invert_match(&mut self, yes: bool) -> &mut SearcherBuilder {$/;"	f
invert_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn invert_match(&self) -> bool {$/;"	f
invert_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn invert_match(&mut self, yes: bool) -> &mut SearcherTester {$/;"	f
invert_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn invert_multi_line() {$/;"	f
io	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn io(error: io::Error) -> Self {$/;"	f
io_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^        fn io_error<E>(_: E) -> io::Error {$/;"	f
is_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_array(&self) -> bool {$/;"	f
is_ascii	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn is_ascii(&self) -> bool {$/;"	f
is_boolean	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_boolean(&self) -> bool {$/;"	f
is_candidate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^        fn is_candidate(m: LineMatchKind) -> bool {$/;"	f
is_case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    fn is_case_insensitive(&self, analysis: &AstAnalysis) -> bool {$/;"	f
is_confirmed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^        fn is_confirmed(m: LineMatchKind) -> bool {$/;"	f
is_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn is_context(&self) -> bool {$/;"	f
is_cow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_cow(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_crlf	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn is_crlf(&self) -> bool {$/;"	f
is_data	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_data(&self) -> bool {$/;"	f
is_effective	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn is_effective(&mut self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_eof(&self) -> bool {$/;"	f
is_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn is_f64(&self) -> bool {$/;"	f
is_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_f64(&self) -> bool {$/;"	f
is_human_readable	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_human_readable	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn is_i64(&self) -> bool {$/;"	f
is_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_i64(&self) -> bool {$/;"	f
is_implicitly_borrowed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_implicitly_borrowed(ty: &syn::Type) -> bool {$/;"	f
is_implicitly_borrowed_reference	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_implicitly_borrowed_reference(ty: &syn::Type) -> bool {$/;"	f
is_io	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_io(&self) -> bool {$/;"	f
is_leading_or_invalid_utf8_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^fn is_leading_or_invalid_utf8_byte(b: u8) -> bool {$/;"	f
is_line_by_line_fast	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn is_line_by_line_fast(&self) -> bool {$/;"	f
is_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn is_match(&self, haystack: &[u8]) -> Result<bool, Self::Error> {$/;"	f
is_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn is_match(&self, haystack: &[u8]) -> Result<bool, NoError> {$/;"	f
is_match_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn is_match_at($/;"	f
is_match_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn is_match_at($/;"	f
is_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_null(&self) -> bool {$/;"	f
is_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_number(&self) -> bool {$/;"	f
is_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_object(&self) -> bool {$/;"	f
is_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_option(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_packed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn is_packed(&self) -> bool {$/;"	f
is_primitive_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {$/;"	f
is_primitive_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_primitive_type(ty: &syn::Type, primitive: &str) -> bool {$/;"	f
is_quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn is_quit(&self) -> bool {$/;"	f
is_reference	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_reference(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_simple	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^fn is_simple(expr: &Hir) -> bool {$/;"	f
is_slice_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_slice_u8(ty: &syn::Type) -> bool {$/;"	f
is_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn is_some(self) -> bool {$/;"	f
is_space	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    fn is_space(b: u8) -> bool {$/;"	f
is_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_str(ty: &syn::Type) -> bool {$/;"	f
is_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_string(&self) -> bool {$/;"	f
is_suffix	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn is_suffix(&self, slice: &[u8]) -> bool {$/;"	f
is_synchronous	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn is_synchronous(&self) -> bool {$/;"	f
is_synchronous	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    fn is_synchronous(&self) -> bool {$/;"	f
is_syntax	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_syntax(&self) -> bool {$/;"	f
is_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn is_u64(&self) -> bool {$/;"	f
is_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_u64(&self) -> bool {$/;"	f
is_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn is_utf8(&self) -> bool {$/;"	f
is_valid_cap_letter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^fn is_valid_cap_letter(b: &u8) -> bool {$/;"	f
italic	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn italic(&self) -> bool {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn iter(&self) -> Iter {$/;"	f
iter_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut {$/;"	f
iterator_len_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
join	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub fn join<B, T, I>(separator: B, elements: I) -> Vec<u8>$/;"	f
json	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json {$/;"	d
json_internal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json_internal {$/;"	d
json_internal_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json_internal_vec {$/;"	d
json_unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json_unexpected {$/;"	d
key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	f
key_must_be_a_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
key_must_be_a_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
keys	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn keys(&self) -> Keys {$/;"	f
kind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn kind(&mut self, kind: SummaryKind) -> &mut SummaryBuilder {$/;"	f
kind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/error.rs	/^    pub fn kind(&self) -> &ErrorKind {$/;"	f
kind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub fn kind(&self) -> &SinkContextKind {$/;"	f
last_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn last_byte(&self) -> Option<u8> {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn len(&self) -> usize;$/;"	f
len	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn len(&self) -> usize {$/;"	f
len_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn len_hint(&self) -> Option<usize> {$/;"	f
len_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn len_hint(&self) -> Option<usize>;$/;"	f
lib	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/lib.rs	/^mod lib {$/;"	m
lib	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/lib.rs	/^mod lib {$/;"	m
line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn line(&self) -> usize {$/;"	f
line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn line(&self) -> usize {$/;"	f
line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    pub fn line(&self) -> &ColorSpec {$/;"	f
line_buffer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn line_buffer(&self) -> LineBuffer {$/;"	f
line_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn line_count() {$/;"	f
line_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn line_iter() {$/;"	f
line_iter_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn line_iter_empty() {$/;"	f
line_locate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn line_locate() {$/;"	f
line_locate_weird	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn line_locate_weird() {$/;"	f
line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn line_number() {$/;"	f
line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn line_number(&self) -> Option<u64> {$/;"	f
line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn line_number(&mut self, yes: bool) -> &mut SearcherBuilder {$/;"	f
line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn line_number(&self) -> bool {$/;"	f
line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub fn line_number(&self) -> Option<u64> {$/;"	f
line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn line_number(&mut self, yes: bool) -> &mut SearcherTester {$/;"	f
line_number1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn line_number1() {$/;"	f
line_number_invert1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn line_number_invert1() {$/;"	f
line_number_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn line_number_multi_line() {$/;"	f
line_ranges	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn line_ranges(text: &str) -> Vec<Range<usize>> {$/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn line_terminator(&self) -> Option<LineTerminator> {$/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn line_terminator(&self) -> Option<LineTerminator> {$/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn line_terminator() {$/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn line_terminator($/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn line_terminator(&mut self, lineterm: u8) -> &mut LineBufferBuilder {$/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn line_terminator($/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn line_terminator(&self) -> LineTerminator {$/;"	f
line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn line_terminator(&self) -> Option<LineTerminator> {$/;"	f
line_terminator_crlf	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn line_terminator_crlf() {$/;"	f
line_terminator_error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn line_terminator_error() {$/;"	f
lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn lines(&self) -> Lines {$/;"	f
lines	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn lines(&self, line_term: u8) -> LineIter<'a> {$/;"	f
lines	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn lines(text: &str) -> Vec<&str> {$/;"	f
lines	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    pub fn lines(&self) -> LineIter<'b> {$/;"	f
lines_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn lines_with_terminator(&self) -> LinesWithTerminator {$/;"	f
lines_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn lines_with_terminator() {$/;"	f
lines_without_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn lines_without_terminator() {$/;"	f
literal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^    fn literal() {$/;"	f
loc	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn loc(text: &str, start: usize, end: usize) -> Match {$/;"	f
locate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^pub fn locate(bytes: &[u8], line_term: u8, range: Match) -> Match {$/;"	f
lock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn lock(&self) -> IoStandardStreamLock<'_> {$/;"	f
lock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn lock(&self) -> StandardStreamLock<'_> {$/;"	f
m	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn m(start: usize, end: usize) -> Match {$/;"	f
m	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn m(start: usize, end: usize) -> Match {$/;"	f
main	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^fn main() {$/;"	f
make_ascii_lowercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn make_ascii_lowercase(&mut self) {$/;"	f
make_ascii_uppercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn make_ascii_uppercase(&mut self) {$/;"	f
make_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^fn make_error(mut msg: String) -> Error {$/;"	f
map_as_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f
map_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! map_impl {$/;"	d
map_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	d
mark_has_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn mark_has_flatten(&mut self) {$/;"	f
mark_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn mark_transparent(&mut self) {$/;"	f
match_by_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn match_by_line(&mut self, buf: &[u8]) -> Result<bool, S::Error> {$/;"	f
match_by_line_fast	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn match_by_line_fast(&mut self, buf: &[u8]) -> Result<bool, S::Error> {$/;"	f
match_by_line_fast_invert	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn match_by_line_fast_invert($/;"	f
match_by_line_slow	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn match_by_line_slow(&mut self, buf: &[u8]) -> Result<bool, S::Error> {$/;"	f
match_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn match_count(&self) -> u64 {$/;"	f
match_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn match_count(&self) -> u64 {$/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    pub fn matched(&self) -> &ColorSpec {$/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn matched($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn matched($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn matched($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn matched($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^        fn matched($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^    fn matched($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn matched($/;"	f
matched_lines	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn matched_lines(&self) -> u64 {$/;"	f
matcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn matcher(pattern: &str) -> WordMatcher {$/;"	f
matcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn matcher(&self) -> &M {$/;"	f
matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn matches(&self) -> u64 {$/;"	f
matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn matches(&self) -> &'a [Match] {$/;"	f
max_columns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns() {$/;"	f
max_columns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn max_columns(&mut self, limit: Option<u64>) -> &mut StandardBuilder {$/;"	f
max_columns_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns_multi_line() {$/;"	f
max_columns_multi_line_preview	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns_multi_line_preview() {$/;"	f
max_columns_preview	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns_preview() {$/;"	f
max_columns_preview	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn max_columns_preview(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
max_columns_with_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns_with_count() {$/;"	f
max_columns_with_count_preview_no_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns_with_count_preview_no_match() {$/;"	f
max_columns_with_count_preview_one_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns_with_count_preview_one_match() {$/;"	f
max_columns_with_count_preview_two_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_columns_with_count_preview_two_matches() {$/;"	f
max_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn max_context(&self) -> usize {$/;"	f
max_input_length	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^fn max_input_length(encoded_buf_len: usize, config: Config) -> usize {$/;"	f
max_input_length_cant_use_extra_single_encoded_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn max_input_length_cant_use_extra_single_encoded_byte() {$/;"	f
max_input_length_no_pad	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn max_input_length_no_pad() {$/;"	f
max_input_length_with_pad_decrements_one_triple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn max_input_length_with_pad_decrements_one_triple() {$/;"	f
max_input_length_with_pad_fits_exactly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn max_input_length_with_pad_fits_exactly() {$/;"	f
max_input_length_with_pad_one_byte_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn max_input_length_with_pad_one_byte_short() {$/;"	f
max_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn max_matches() {$/;"	f
max_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn max_matches(&mut self, limit: Option<u64>) -> &mut JSONBuilder {$/;"	f
max_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_matches() {$/;"	f
max_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn max_matches(&mut self, limit: Option<u64>) -> &mut StandardBuilder {$/;"	f
max_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn max_matches(&mut self, limit: Option<u64>) -> &mut SummaryBuilder {$/;"	f
max_matches_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_matches_context() {$/;"	f
max_matches_multi_line1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_matches_multi_line1() {$/;"	f
max_matches_multi_line2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn max_matches_multi_line2() {$/;"	f
member_message	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn member_message(member: &Member) -> String {$/;"	f
memory_map	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn memory_map($/;"	f
merge_into	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    fn merge_into(&self, cspec: &mut ColorSpec) {$/;"	f
minimal_heap_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn minimal_heap_limit(&self, multi_line: bool) -> usize {$/;"	f
missing_crlf	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn missing_crlf() {$/;"	f
missing_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn missing_field(field: &'static str) -> Self {$/;"	f
missing_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn multi_line(&self) -> bool {$/;"	f
multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn multi_line(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn multi_line(&mut self, yes: bool) -> &mut SearcherBuilder {$/;"	f
multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn multi_line(&self) -> bool {$/;"	f
multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn multi_line(&mut self, yes: bool) -> &mut SearcherTester {$/;"	f
multi_line_overlap1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn multi_line_overlap1() {$/;"	f
multi_line_overlap2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn multi_line_overlap2() {$/;"	f
multi_line_with_matcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn multi_line_with_matcher<M: Matcher>(&self, matcher: M) -> bool {$/;"	f
mut_if	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn mut_if(is_mut: bool) -> Option<TokenStream> {$/;"	f
naive_find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn naive_find(needle: &[u8], haystack: &[u8]) -> Option<usize> {$/;"	f
naive_maximal_suffix_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn naive_maximal_suffix_forward(needle: &[u8]) -> &[u8] {$/;"	f
naive_maximal_suffix_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn naive_maximal_suffix_reverse(needle: &[u8]) -> Vec<u8> {$/;"	f
naive_rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn naive_rfind(needle: &[u8], haystack: &[u8]) -> Option<usize> {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	f
needle	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn needle(&self) -> &[u8] {$/;"	f
needle	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn needle(&self) -> &[u8] {$/;"	f
needle	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn needle(&self) -> &[u8] {$/;"	f
needs_crlf_stripped	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn needs_crlf_stripped(&self) -> bool {$/;"	f
needs_deserialize_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn needs_deserialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
needs_match_granularity	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn needs_match_granularity(&self) -> bool {$/;"	f
needs_serialize_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn needs_serialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
negative_fallback_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn negative_fallback_forward() {$/;"	f
negative_sse2_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn negative_sse2_forward() {$/;"	f
nest_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn nest_limit(&mut self, limit: u32) -> &mut RegexMatcherBuilder {$/;"	f
never	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mmap.rs	/^    pub fn never() -> MmapChoice {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    pub fn new(config: Config) -> ChunkedEncoder {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^    pub fn new(char_set: CharacterSet, pad: bool) -> Config {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^    pub fn new(r: &'a mut R, config: Config) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    pub fn new(w: &'a mut W, config: Config) -> EncoderWriter<'a, W> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn new(bytes: &'a [u8]) -> Imp<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn new<B: ?Sized + AsRef<[u8]>>(bytes: &'a B) -> CowBytes<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new($/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8]) -> Fields<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8]) -> Lines<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8]) -> LinesWithTerminator<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8], f: F) -> FieldsWith<'a, F> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], needle: &'a [u8]) -> Find<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], needle: &'a [u8]) -> FindReverse<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], splitter: &'a [u8]) -> Split<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], splitter: &'a [u8]) -> SplitReverse<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn new<B: ?Sized + AsRef<[u8]>>(needle: &'a B) -> Finder<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn new<B: ?Sized + AsRef<[u8]>>(needle: &'a B) -> FinderReverse<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn new(max_match_len: usize) -> PrefilterState {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> BorrowedBytesDeserializer<'de, E> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(name: &'static str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, E> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn new($/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn new(read: R) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn new(iter: I) -> LineColIterator<I> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub fn new(reader: R) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub fn new(s: &'a str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub fn new(slice: &'a [u8]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn new(writer: W) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(map: &'de Map<String, Value>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(map: Map<String, Value>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(slice: &'de [Value]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(value: Cow<'de, str>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(vec: Vec<Value>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new() -> WindowsBuffer {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(choice: ColorChoice) -> Buffer {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(choice: ColorChoice, console: bool) -> Buffer {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(sty: StandardStreamType) -> IoStandardStream {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(wtr: W) -> LossyStandardStream<W> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn new() -> ColorSpec {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn new(wtr: W) -> Ansi<W> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn new(wtr: W) -> NoColor<W> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn new() -> NoCaptures {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn new(start: usize, end: usize) -> Match {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    pub fn new(specs: &[UserColorSpec]) -> ColorSpecs {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn new(wtr: W) -> CounterWriter<W> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn new(bytes: &'a [u8], matches: &[Match]) -> SubMatches<'a> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn new() -> JSONBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn new(wtr: W) -> JSON<W> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn new($/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn new() -> StandardBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn new(wtr: W) -> Standard<W> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn new() -> Stats {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn new() -> SummaryBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn new(wtr: W) -> Summary<W> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn new() -> Replacer<M> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn new(path: &'a Path) -> PrinterPath<'a> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn new() -> AstAnalysis {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    pub fn new(expr: &ConfiguredHIR) -> Result<CRLFMatcher, Error> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    pub fn new(expr: &Hir) -> LiteralSets {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn new(expr: &ConfiguredHIR) -> Result<RegexMatcherImpl, Error> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn new(expr: &ConfiguredHIR) -> Result<StandardMatcher, Error> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn new() -> RegexMatcherBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn new(pattern: &str) -> Result<RegexMatcher, Error> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    pub fn new<B: AsRef<[u8]>>($/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    pub fn new(expr: &ConfiguredHIR) -> Result<WordMatcher, Error> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn new($/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn new() -> LineBufferBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    pub fn new(line_term: u8, bytes: &'b [u8]) -> LineIter<'b> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    pub fn new(line_term: u8, start: usize, end: usize) -> LineStep {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn new($/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    pub fn new($/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn new() -> Searcher {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn new() -> SearcherBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn new(label: &str) -> Result<Encoding, ConfigError> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn new() -> KitchenSink {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn new(haystack: &str, pattern: &str) -> SearcherTester {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn new(pattern: &str) -> RegexMatcher {$/;"	f
new_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn new_captures(&self) -> Result<Self::Captures, Self::Error> {$/;"	f
new_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn new_captures(&self) -> Result<Self::Captures, Self::Error>;$/;"	f
new_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    fn new_captures(&self) -> Result<RegexCaptures, NoError> {$/;"	f
new_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn new_captures(&self) -> Result<RegexCaptures, NoError> {$/;"	f
new_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/multi.rs	/^    fn new_captures(&self) -> Result<RegexCaptures, NoError> {$/;"	f
new_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn new_captures(&self) -> Result<RegexCaptures, NoError> {$/;"	f
new_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn new_captures(&self) -> Result<NoCaptures, NoError> {$/;"	f
new_line_matcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn new_line_matcher(pattern: &str) -> Result<RegexMatcher, Error> {$/;"	f
new_no_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn new_no_color(wtr: W) -> Standard<NoColor<W>> {$/;"	f
new_no_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn new_no_color(wtr: W) -> Summary<NoColor<W>> {$/;"	f
new_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn new_owned(bytes: Vec<u8>) -> CowBytes<'static> {$/;"	f
newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Error>$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next(&mut self) -> Option<&'a [u8]> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next(&mut self) -> Option<u8> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn next(&mut self) -> Option<u8> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn next(&mut self) -> Option<io::Result<Vec<u8>>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn next(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn next(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next(&mut self) -> Option<(usize, usize, char)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next(&mut self) -> Option<Utf8Chunk<'a>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next(&mut self) -> Option<char> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next(&mut self) -> Option<Result<T>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    fn next(&mut self) -> Option<io::Result<u8>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>>;$/;"	f
next	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn next(&mut self) -> Option<&'b [u8]> {$/;"	f
next	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    pub fn next(&mut self, bytes: &[u8]) -> Option<(usize, usize)> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next_back(&mut self) -> Option<u8> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn next_back(&mut self) -> Option<u8> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next_back(&mut self) -> Option<&'a str> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next_back(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next_back(&mut self) -> Option<(usize, usize, char)> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next_back(&mut self) -> Option<char> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_char(&mut self) -> Result<Option<u8>> {$/;"	f
next_char_or_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_char_or_null(&mut self) -> Result<u8> {$/;"	f
next_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	f
next_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_impl	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn next_impl(&mut self, mut bytes: &[u8]) -> Option<(usize, usize)> {$/;"	f
next_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	f
next_or_eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn next_or_eof<'de, R>(read: &mut R) -> Result<u8>$/;"	f
next_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Error>$/;"	f
no_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn no_color() -> Buffer {$/;"	f
no_heading	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn no_heading() {$/;"	f
no_heading_multiple	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn no_heading_multiple() {$/;"	f
no_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn no_match() {$/;"	f
non_matching_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn non_matching_bytes(&self) -> Option<&ByteSet> {$/;"	f
non_matching_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn non_matching_bytes(&self) -> ByteSet {$/;"	f
non_matching_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn non_matching_bytes(&self) -> Option<&ByteSet> {$/;"	f
non_matching_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^pub fn non_matching_bytes(expr: &Hir) -> ByteSet {$/;"	f
none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	f
none	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn none() -> BinaryDetection {$/;"	f
nonzero_integers	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nonzero_integers	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nop_reserve	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
num_chunks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^fn num_chunks(input: &[u8]) -> usize {$/;"	f
octal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn octal(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn offset(&self, amount: usize) -> Match {$/;"	f
oibits	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^    fn oibits() {$/;"	f
one_regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    fn one_regex(pattern: &str) -> Option<String> {$/;"	f
one_regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    pub fn one_regex(&self, word: bool) -> Option<String> {$/;"	f
only_matching	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching() {$/;"	f
only_matching	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn only_matching(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
only_matching_max_columns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_max_columns() {$/;"	f
only_matching_max_columns_multi_line1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_max_columns_multi_line1() {$/;"	f
only_matching_max_columns_multi_line2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_max_columns_multi_line2() {$/;"	f
only_matching_max_columns_preview	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_max_columns_preview() {$/;"	f
only_matching_max_columns_preview_multi_line1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_max_columns_preview_multi_line1() {$/;"	f
only_matching_max_columns_preview_multi_line2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_max_columns_preview_multi_line2() {$/;"	f
only_matching_multi_line1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_multi_line1() {$/;"	f
only_matching_multi_line2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn only_matching_multi_line2() {$/;"	f
or_insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn or_insert(self, default: Value) -> &'a mut Value {$/;"	f
or_insert_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn or_insert_with<F>(self, default: F) -> &'a mut Value$/;"	f
original_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn original_matches(&self) -> &'a [Match] {$/;"	f
other	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn other(&self) -> bool {$/;"	f
other_context_by_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn other_context_by_line($/;"	f
overflow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! overflow {$/;"	d
pad	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/lib.rs	/^    pub fn pad(self, pad: bool) -> Config {$/;"	f
parse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^        fn parse(input: ParseStream) -> parse::Result<Self> {$/;"	f
parse_any_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_any_number(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	f
parse_any_signed_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_any_signed_number(&mut self) -> Result<ParserNumber> {$/;"	f
parse_decimal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_decimal($/;"	f
parse_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn parse_escape<'de, R: Read<'de>>(read: &mut R, scratch: &mut Vec<u8>) -> Result<()> {$/;"	f
parse_exponent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_exponent($/;"	f
parse_exponent_overflow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_exponent_overflow($/;"	f
parse_ident	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_ident(&mut self, ident: &[u8]) -> Result<()> {$/;"	f
parse_index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^fn parse_index(s: &str) -> Option<usize> {$/;"	f
parse_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_integer(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	f
parse_ip_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	d
parse_line_col	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^fn parse_line_col(msg: &mut String) -> Option<(usize, usize)> {$/;"	f
parse_lit_into_expr_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_expr_path($/;"	f
parse_lit_into_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_lifetimes($/;"	f
parse_lit_into_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_path(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Path, ()> {$/;"	f
parse_lit_into_ty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_ty(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Type, ()> {$/;"	f
parse_lit_into_where	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_where($/;"	f
parse_lit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_str<T>(s: &syn::LitStr) -> parse::Result<T>$/;"	f
parse_long_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_long_integer($/;"	f
parse_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_number(&mut self, positive: bool, significand: u64) -> Result<ParserNumber> {$/;"	f
parse_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        fn parse_number(s: &str) -> Option<u8> {$/;"	f
parse_object_colon	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_object_colon(&mut self) -> Result<()> {$/;"	f
parse_socket_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	d
parse_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'a, 's, str>> {$/;"	f
parse_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>> {$/;"	f
parse_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>>;$/;"	f
parse_str_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str_bytes<'s, T, F>($/;"	f
parse_str_raw	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str_raw<'s>($/;"	f
parse_whitespace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_whitespace(&mut self) -> Result<Option<u8>> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn partial_cmp(&self, other: &$lhs) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn partial_cmp(&self, other: &$rhs) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn partial_cmp(&self, other: &BStr) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn partial_cmp(&self, other: &BString) -> Option<Ordering> {$/;"	f
partialeq_numeric	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^macro_rules! partialeq_numeric {$/;"	d
passthru	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn passthru(&mut self, yes: bool) -> &mut SearcherBuilder {$/;"	f
passthru	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn passthru(&self) -> bool {$/;"	f
passthru	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn passthru(&mut self, yes: bool) -> &mut SearcherTester {$/;"	f
passthru_sherlock1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn passthru_sherlock1() {$/;"	f
passthru_sherlock_invert1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn passthru_sherlock_invert1() {$/;"	f
pat	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    fn pat(pattern: &str) -> Option<String> {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    pub fn path(&self) -> &ColorSpec {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn path(&self) -> Option<&'a PrinterPath<'a>> {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn path() {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn path(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn path(&mut self, yes: bool) -> &mut SummaryBuilder {$/;"	f
path_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn path_terminator() {$/;"	f
path_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn path_terminator($/;"	f
path_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn path_terminator($/;"	f
path_with_match_error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn path_with_match_error() {$/;"	f
path_with_match_found	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn path_with_match_found() {$/;"	f
path_with_match_not_found	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn path_with_match_not_found() {$/;"	f
path_without_match_error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn path_without_match_error() {$/;"	f
path_without_match_found	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn path_without_match_found() {$/;"	f
path_without_match_not_found	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn path_without_match_not_found() {$/;"	f
pattern_to_hir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    fn pattern_to_hir(&self, pattern: &str) -> Result<ConfiguredHIR, Error> {$/;"	f
pattern_to_regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    fn pattern_to_regex(&self, pattern: &str) -> Result<Regex, Error> {$/;"	f
peek	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>>;$/;"	f
peek_end_of_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_end_of_value(&mut self) -> Result<()> {$/;"	f
peek_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_error(&self, reason: ErrorCode) -> Error {$/;"	f
peek_invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_invalid_type(&mut self, exp: &dyn Expected) -> Error {$/;"	f
peek_or_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_or_null(&mut self) -> Result<u8> {$/;"	f
peek_position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	f
peek_position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek_position(&self) -> Position;$/;"	f
per_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn per_match() {$/;"	f
per_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn per_match(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
per_match_multi_line1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn per_match_multi_line1() {$/;"	f
per_match_multi_line2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn per_match_multi_line2() {$/;"	f
per_match_multi_line3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn per_match_multi_line3() {$/;"	f
place_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn place_lifetime() -> syn::LifetimeDef {$/;"	f
pointer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn pointer(&self, pointer: &str) -> Option<&Value> {$/;"	f
pointer_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn pointer_mut(&mut self, pointer: &str) -> Option<&mut Value> {$/;"	f
pop_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn pop_byte(&mut self) -> Option<u8> {$/;"	f
pop_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn pop_char(&mut self) -> Option<char> {$/;"	f
pos	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn pos(&self) -> usize {$/;"	f
position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn position(&self) -> Position {$/;"	f
position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn position(&self) -> Position;$/;"	f
position_of_index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn position_of_index(&self, i: usize) -> Position {$/;"	f
positive_fallback_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn positive_fallback_forward() {$/;"	f
positive_sse2_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn positive_sse2_forward() {$/;"	f
preceding	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^pub fn preceding(bytes: &[u8], line_term: u8, count: usize) -> usize {$/;"	f
preceding_by_pos	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^fn preceding_by_pos($/;"	f
preceding_lines_doc	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn preceding_lines_doc() {$/;"	f
preceding_lines_empty1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn preceding_lines_empty1() {$/;"	f
preceding_lines_empty2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn preceding_lines_empty2() {$/;"	f
preceding_lines_sherlock	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn preceding_lines_sherlock() {$/;"	f
preceding_lines_short	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn preceding_lines_short() {$/;"	f
precondition	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_no_de_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn precondition_no_de_lifetime(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_sized	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn precondition_sized(cx: &Ctxt, cont: &Container) {$/;"	f
prefilter_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn prefilter_state(&self) -> PrefilterState {$/;"	f
prefilter_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn prefilter_state(&self) -> PrefilterState {$/;"	f
prepare_enum_variant_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn prepare_enum_variant_enum($/;"	f
pretend_fields_used	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^fn pretend_fields_used(cont: &Container) -> TokenStream {$/;"	f
pretend_used	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^pub fn pretend_used(cont: &Container) -> TokenStream {$/;"	f
pretend_variants_used	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^fn pretend_variants_used(cont: &Container) -> TokenStream {$/;"	f
pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn pretty(writer: W) -> Self {$/;"	f
pretty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn pretty(&mut self, yes: bool) -> &mut JSONBuilder {$/;"	f
prev	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^    fn prev(text: &str, pos: usize, count: usize) -> usize {$/;"	f
primitive_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	d
primitive_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	d
print	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn print($/;"	f
print	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	f
print_labels	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn print_labels(&mut self, yes: bool) -> &mut SearcherTester {$/;"	f
printer_contents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn printer_contents(printer: &mut JSON<Vec<u8>>) -> String {$/;"	f
printer_contents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn printer_contents(printer: &mut Standard<NoColor<Vec<u8>>>) -> String {$/;"	f
printer_contents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn printer_contents(printer: &mut Summary<NoColor<Vec<u8>>>) -> String {$/;"	f
private	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^mod private {$/;"	m
private	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^mod private {$/;"	m
private	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^mod private {$/;"	m
prop_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn prop_matches_naive($/;"	f
prop_prefix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn prop_prefix_is_substring($/;"	f
prop_suffix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn prop_suffix_is_substring($/;"	f
ptr_add	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn ptr_add(ptr: *const u8, amt: usize) -> *const u8 {$/;"	f
ptr_sub	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn ptr_sub(ptr: *const u8, amt: usize) -> *const u8 {$/;"	f
push	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn push(&mut self, spec: Option<ColorSpec>) {$/;"	f
push_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn push_byte(&mut self, byte: u8) {$/;"	f
push_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn push_char(&mut self, ch: char) {$/;"	f
push_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn push_str<B: AsRef<[u8]>>(&mut self, bytes: B) {$/;"	f
qc_byteset_backwards_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_backwards_matches_naive($/;"	f
qc_byteset_backwards_not_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_backwards_not_matches_naive($/;"	f
qc_byteset_forward_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_forward_matches_naive($/;"	f
qc_byteset_forward_not_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_forward_not_matches_naive($/;"	f
qc_suffix_forward_maximal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        fn qc_suffix_forward_maximal(bytes: Vec<u8>) -> bool {$/;"	f
qc_suffix_reverse_maximal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        fn qc_suffix_reverse_maximal(bytes: Vec<u8>) -> bool {$/;"	f
qc_twoway_fwd_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_fwd_matches_naive($/;"	f
qc_twoway_fwd_prefix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_fwd_prefix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
qc_twoway_fwd_suffix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_fwd_suffix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
qc_twoway_rev_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_rev_matches_naive($/;"	f
qc_twoway_rev_prefix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_rev_prefix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
qc_twoway_rev_suffix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_rev_suffix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
quiet	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn quiet() {$/;"	f
quiet_with_stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn quiet_with_stats() {$/;"	f
quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn quit(binary_byte: u8) -> BinaryDetection {$/;"	f
quit_byte	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn quit_byte(&self) -> Option<u8> {$/;"	f
quit_early	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn quit_early(&self) -> bool {$/;"	f
quote_block	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^macro_rules! quote_block {$/;"	d
quote_expr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^macro_rules! quote_expr {$/;"	d
random_config	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tests.rs	/^pub fn random_config<R: Rng>(rng: &mut R) -> Config {$/;"	f
range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^mod range {$/;"	m
rank	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn rank(b: u8) -> usize {$/;"	f
read	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^    fn read(&mut self, buf: &mut [u8]) -> Result<usize, io::Error> {$/;"	f
read_from_delegate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder.rs	/^    fn read_from_delegate(&mut self) -> io::Result<usize> {$/;"	f
read_in_short_increments	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn read_in_short_increments() {$/;"	f
read_in_short_increments_with_short_delegate_reads	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn read_in_short_increments_with_short_delegate_reads() {$/;"	f
read_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^fn read_u64(s: &[u8]) -> u64 {$/;"	f
read_unaligned_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn read_unaligned_usize(ptr: *const u8) -> usize {$/;"	f
read_unaligned_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^unsafe fn read_unaligned_usize(ptr: *const u8) -> usize {$/;"	f
record_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn record_matches(&mut self, bytes: &[u8]) -> io::Result<()> {$/;"	f
record_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn record_matches(&mut self, bytes: &[u8]) -> io::Result<()> {$/;"	f
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_fwd.rs	/^    pub static ref GRAPHEME_BREAK_FWD: ::regex_automata::SparseDFA<&'static [u8], u16> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_rev.rs	/^    pub static ref GRAPHEME_BREAK_REV: ::regex_automata::SparseDFA<&'static [u8], u16> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/regional_indicator_rev.rs	/^    pub static ref REGIONAL_INDICATOR_REV: ::regex_automata::DenseDFA<&'static [u8], u8> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/sentence_break_fwd.rs	/^    pub static ref SENTENCE_BREAK_FWD: ::regex_automata::SparseDFA<&'static [u8], u32> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/simple_word_fwd.rs	/^    pub static ref SIMPLE_WORD_FWD: ::regex_automata::SparseDFA<&'static [u8], u16> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_fwd.rs	/^    pub static ref WHITESPACE_ANCHORED_FWD: ::regex_automata::DenseDFA<&'static [u8], u8> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_rev.rs	/^    pub static ref WHITESPACE_ANCHORED_REV: ::regex_automata::DenseDFA<&'static [u8], u8> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/word_break_fwd.rs	/^    pub static ref WORD_BREAK_FWD: ::regex_automata::SparseDFA<&'static [u8], u32> = {$/;"	c
regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn regex(&self) -> Result<Regex, Error> {$/;"	f
regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    pub fn regex(&self) -> &Regex {$/;"	f
regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn regex(&self) -> String {$/;"	f
regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    pub fn regex(&self) -> &Regex {$/;"	f
regression_1064	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    fn regression_1064() {$/;"	f
regression_1319	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    fn regression_1319() {$/;"	f
regression_1537	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    fn regression_1537() {$/;"	f
regression_dash	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn regression_dash() {$/;"	f
remote	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn remote(&self) -> Option<&syn::Path> {$/;"	f
remove	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn remove(self) -> Value {$/;"	f
remove	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn remove<Q>(&mut self, key: &Q) -> Option<Value>$/;"	f
remove	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn remove(&mut self, byte: u8) {$/;"	f
remove_all	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn remove_all(&mut self, start: u8, end: u8) {$/;"	f
remove_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn remove_char(&mut self, at: usize) -> char {$/;"	f
remove_matching_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^fn remove_matching_bytes(expr: &Hir, set: &mut ByteSet) {$/;"	f
rename_all_rules	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	f
rename_by_rules	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	f
rename_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^fn rename_fields() {$/;"	f
rename_variants	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^fn rename_variants() {$/;"	f
repeat_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^fn repeat_byte(b: u8) -> usize {$/;"	f
repeat_range_literals	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^fn repeat_range_literals<F: FnMut(&Hir, &mut Literals)>($/;"	f
repeatn	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn repeatn(&self, n: usize) -> Vec<u8> {$/;"	f
replace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replace<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
replace	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn replace<F>($/;"	f
replace	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replace(&mut self, bytes: &[u8]) -> io::Result<()> {$/;"	f
replace	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn replace<F>($/;"	f
replace	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn replace() {$/;"	f
replace_all	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn replace_all<'a>($/;"	f
replace_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^fn replace_bytes(bytes: &mut [u8], src: u8, replacement: u8) -> Option<usize> {$/;"	f
replace_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replace_into<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
replace_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn replace_range<R, B>(&mut self, range: R, replace_with: B)$/;"	f
replace_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    fn replace_separator(&mut self, new_sep: u8) {$/;"	f
replace_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn replace_str($/;"	f
replace_with_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn replace_with_captures<F>($/;"	f
replace_with_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn replace_with_captures<F>($/;"	f
replacement	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/try.rs	/^pub fn replacement() -> TokenStream {$/;"	f
replacement	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replacement() {$/;"	f
replacement	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn replacement($/;"	f
replacement	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn replacement<'a>(&'a self) -> Option<(&'a [u8], &'a [Match])> {$/;"	f
replacement_max_columns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replacement_max_columns() {$/;"	f
replacement_max_columns_preview1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replacement_max_columns_preview1() {$/;"	f
replacement_max_columns_preview2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replacement_max_columns_preview2() {$/;"	f
replacement_only_matching	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replacement_only_matching() {$/;"	f
replacement_passthru	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replacement_passthru() {$/;"	f
replacement_per_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn replacement_per_match() {$/;"	f
replacen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replacen<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
replacen_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replacen_into<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
reports_binary	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn reports_binary() {$/;"	f
reports_invalid_byte_correctly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn reports_invalid_byte_correctly() {$/;"	f
reports_invalid_last_symbol_correctly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn reports_invalid_last_symbol_correctly() {$/;"	f
reports_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn reports_match() {$/;"	f
reports_stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn reports_stats() {$/;"	f
reports_stats_multiple	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn reports_stats_multiple() {$/;"	f
requires_default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn requires_default(field: &attr::Field, _variant: Option<&attr::Variant>) -> bool {$/;"	f
requires_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn requires_path(&self) -> bool {$/;"	f
requires_stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn requires_stats(&self) -> bool {$/;"	f
reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	f
reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()>;$/;"	f
reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn reset(&self) -> bool {$/;"	f
reset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	f
reset_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn reset_count(&mut self) {$/;"	f
respan_token_stream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn respan_token_stream(stream: TokenStream, span: Span) -> TokenStream {$/;"	f
respan_token_tree	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn respan_token_tree(mut token: TokenTree, span: Span) -> TokenTree {$/;"	f
retry_interrupted_write_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn retry_interrupted_write_all<W: Write>(w: &mut W, buf: &[u8]) -> io::Result<()> {$/;"	f
retrying_writes_that_error_with_interrupted_works	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn retrying_writes_that_error_with_interrupted_works() {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn reverse(needle: &[u8]) -> Freqy {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn reverse($/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn reverse(needle: &[u8], kind: SuffixKind) -> Suffix {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn reverse(needle: &'b [u8]) -> TwoWay<'b> {$/;"	f
reverse_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn reverse_bytes(&mut self) {$/;"	f
reverse_chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn reverse_chars(&mut self) {$/;"	f
reverse_graphemes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn reverse_graphemes(&mut self) {$/;"	f
reverse_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn reverse_lossy() {$/;"	f
reverse_search	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^unsafe fn reverse_search<F: Fn(u8) -> bool>($/;"	f
reverse_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn reverse_ucd() {$/;"	f
rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind<B: AsRef<[u8]>>(&self, needle: B) -> Option<usize> {$/;"	f
rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn rfind<B: AsRef<[u8]>>(&self, haystack: B) -> Option<usize> {$/;"	f
rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn rfind(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
rfind_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_byte(&self, byte: u8) -> Option<usize> {$/;"	f
rfind_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
rfind_candidate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn rfind_candidate($/;"	f
rfind_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_char(&self, ch: char) -> Option<usize> {$/;"	f
rfind_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_iter<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
rfind_large	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_large($/;"	f
rfind_large_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_large_imp($/;"	f
rfind_not_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_not_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
rfind_small	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_small($/;"	f
rfind_small_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_small_imp($/;"	f
rfind_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn rfind_with($/;"	f
roll	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn roll(&mut self) {$/;"	f
roll	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn roll(&mut self, buf: &[u8]) -> usize {$/;"	f
roundtrip	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    fn roundtrip(pattern: &str) -> String {$/;"	f
roundtrip	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^    fn roundtrip(pattern: &str, byte: u8) -> String {$/;"	f
roundtrip_crlf	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^    fn roundtrip_crlf(pattern: &str) -> String {$/;"	f
roundtrip_err	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^    fn roundtrip_err(pattern: &str, byte: u8) -> Result<String, Error> {$/;"	f
roundtrip_line_term	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^    fn roundtrip_line_term($/;"	f
roundtrip_random_config	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tests.rs	/^fn roundtrip_random_config(input_len_range: Uniform<usize>, iterations: u32) {$/;"	f
roundtrip_random_config_long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tests.rs	/^fn roundtrip_random_config_long() {$/;"	f
roundtrip_random_config_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/tests.rs	/^fn roundtrip_random_config_short() {$/;"	f
rsplit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rsplit_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
rsplitn_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rsplitn_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
run	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    pub fn run(mut self) -> Result<(), S::Error> {$/;"	f
run_search_tests_fwd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn run_search_tests_fwd($/;"	f
run_search_tests_rev	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn run_search_tests_rev($/;"	f
s	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    fn s(slice: &str) -> String {$/;"	f
scan_decimal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_decimal(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_exponent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_exponent(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_integer(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_integer128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        fn scan_integer128(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_number(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_or_eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_or_eof(&mut self, buf: &mut String) -> Result<u8> {$/;"	f
scratch	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn scratch() {$/;"	f
search_file	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn search_file<M, S>($/;"	f
search_file_maybe_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn search_file_maybe_path<M, S>($/;"	f
search_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn search_path<P, M, S>($/;"	f
search_reader	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn search_reader<M, R, S>($/;"	f
search_reader	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn search_reader(&self, haystack: &str) -> String {$/;"	f
search_slice	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn search_slice<M, S>($/;"	f
search_slice	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    fn search_slice(&self, haystack: &str) -> String {$/;"	f
searches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn searches(&self) -> u64 {$/;"	f
searches_with_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/stats.rs	/^    pub fn searches_with_match(&self) -> u64 {$/;"	f
sentence_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn sentence_indices(&self) -> SentenceIndices {$/;"	f
sentences	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn sentences(&self) -> Sentences {$/;"	f
sentences	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn sentences(bytes: &[u8]) -> Vec<&str> {$/;"	f
separator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn separator(&mut self, sep: Option<Vec<u8>>) {$/;"	f
separator_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn separator_context($/;"	f
separator_field	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn separator_field(&self) -> &[u8] {$/;"	f
separator_field	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn separator_field() {$/;"	f
separator_field	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn separator_field(&mut self, sep: Vec<u8>) -> &mut SummaryBuilder {$/;"	f
separator_field_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn separator_field_context($/;"	f
separator_field_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn separator_field_match($/;"	f
separator_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn separator_path() {$/;"	f
separator_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn separator_path(&mut self, sep: Option<u8>) -> &mut StandardBuilder {$/;"	f
separator_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn separator_path(&mut self, sep: Option<u8>) -> &mut SummaryBuilder {$/;"	f
separator_search	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn separator_search($/;"	f
seq_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	d
seq_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	d
ser_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
ser_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^fn ser_bytes<T, S>(bytes: T, ser: S) -> Result<S::Ok, S::Error>$/;"	f
ser_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^fn ser_path<P, S>(path: &Option<P>, ser: S) -> Result<S::Ok, S::Error>$/;"	f
serde_if_integer128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	d
serde_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn serde_path(&self) -> Cow<syn::Path> {$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^                fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^                    fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^                fn serialize<__S>(&self, __serializer: __S) -> #serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^            fn serialize<__S>(&self, __s: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^            fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize<S>(&self, serializer: S) -> result::Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    fn serialize<S: Serializer>(&self, ser: S) -> Result<S::Ok, S::Error> {$/;"	f
serialize_adjacently_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_adjacently_tagged_variant($/;"	f
serialize_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<()> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<()> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<()> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Value> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<String> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<Value> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<String> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Value> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Value> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<()> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_char(self, value: char) -> Result<()> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Value> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<String> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<Value> {$/;"	f
serialize_display_bounded_length	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	d
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn serialize_element(&self, span: Span) -> TokenStream {$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f
serialize_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_enum(params: &Parameters, variants: &[Variant], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_externally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_externally_tagged_variant($/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<()> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<()> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<()> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Value> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<String> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<Value> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<()> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<()> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<()> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Value> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<String> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<Value> {$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn serialize_field(&self, span: Span) -> TokenStream {$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^        fn serialize_i128(self, v: i128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_i128(self, _v: i128) -> Result<()> {$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_i128(self, value: i128) -> Result<()> {$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^        fn serialize_i128(self, value: i128) -> Result<Value> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<()> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<()> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Value> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<String> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<Value> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<()> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<()> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Value> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<String> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<Value> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<()> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<()> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Value> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<String> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<Value> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<()> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<()> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Value> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<String> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<Value> {$/;"	f
serialize_internally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_internally_tagged_variant($/;"	f
serialize_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_into(params: &Parameters, type_into: &syn::Type) -> Fragment {$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn serialize_name(&self) -> String {$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_newtype_struct($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<()>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<()>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<Value>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<String>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<Value>$/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_none(self) -> Result<String> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<()>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<String>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<Value>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<Value>$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<String> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct(params: &Parameters, fields: &[Field], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct_as_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_as_map($/;"	f
serialize_struct_as_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_as_struct($/;"	f
serialize_struct_tag_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_tag_field(cattrs: &attr::Container, struct_trait: &StructTrait) -> TokenStream {$/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_variant<'a>($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant_with_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_variant_with_flatten<'a>($/;"	f
serialize_struct_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_visitor($/;"	f
serialize_tagged_newtype	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_tuple_struct_visitor($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^        fn serialize_u128(self, v: u128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_u128(self, _v: u128) -> Result<()> {$/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_u128(self, value: u128) -> Result<()> {$/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^        fn serialize_u128(self, value: u128) -> Result<Value> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<()> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<()> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Value> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<String> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<Value> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<()> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<()> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Value> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<String> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<Value> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<()> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<()> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Value> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<String> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<Value> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<()> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<()> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Value> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<String> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<Value> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<String> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_unit_struct(cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<String> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_untagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_untagged_variant($/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_variant($/;"	f
serialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
set_bg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_bg(&mut self, color: Option<Color>) -> &mut ColorSpec {$/;"	f
set_binary_detection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^    pub fn set_binary_detection(&mut self, binary: BinaryDetection) {$/;"	f
set_binary_detection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    pub fn set_binary_detection(&mut self, detection: BinaryDetection) {$/;"	f
set_bold	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_bold(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn set_color(&mut self, _: &ColorSpec) -> io::Result<()> {$/;"	f
set_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()> {$/;"	f
set_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()>;$/;"	f
set_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()> {$/;"	f
set_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn set_failed(&mut self, _failed: &mut bool) {$/;"	f
set_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool) {$/;"	f
set_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool);$/;"	f
set_fg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_fg(&mut self, color: Option<Color>) -> &mut ColorSpec {$/;"	f
set_if_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set_if_none(&mut self, value: T) {$/;"	f
set_intense	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_intense(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_italic	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_italic(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_line_term	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn set_line_term($/;"	f
set_opt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set_opt<A: ToTokens>(&mut self, obj: A, value: Option<T>) {$/;"	f
set_pos	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    pub fn set_pos(&mut self, pos: usize) {$/;"	f
set_reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_reset(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_true	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set_true<A: ToTokens>(&mut self, obj: A) {$/;"	f
set_underline	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_underline(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
sets	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    fn sets(pattern: &str) -> LiteralSets {$/;"	f
shortest_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn shortest_match($/;"	f
shortest_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn shortest_match($/;"	f
shortest_match_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn shortest_match_at($/;"	f
shortest_match_at	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn shortest_match_at($/;"	f
should_ansi	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn should_ansi(&self) -> bool {$/;"	f
should_attempt_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn should_attempt_color(&self) -> bool {$/;"	f
should_binary_quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn should_binary_quit(&self) -> bool {$/;"	f
should_early_return_if_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const should_early_return_if_failed: bool = false;$/;"	c
should_early_return_if_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const should_early_return_if_failed: bool = true;$/;"	c
should_early_return_if_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const should_early_return_if_failed: bool;$/;"	c
should_quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn should_quit(&self) -> bool {$/;"	f
should_quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn should_quit(&self) -> bool {$/;"	f
should_quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn should_quit(&self) -> bool {$/;"	f
show_bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/util.rs	/^pub fn show_bytes(bs: &[u8]) -> String {$/;"	f
shrink	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn shrink(&self) -> Box<dyn Iterator<Item = BString>> {$/;"	f
simple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn simple() {$/;"	f
sink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn sink<'s, M: Matcher>($/;"	f
sink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn sink(&self) -> io::Result<()> {$/;"	f
sink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn sink<'s, M: Matcher>($/;"	f
sink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn sink<'s, M: Matcher>($/;"	f
sink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn sink(&mut self) -> Result<bool, S::Error> {$/;"	f
sink_after_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn sink_after_context($/;"	f
sink_before_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn sink_before_context($/;"	f
sink_break_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn sink_break_context($/;"	f
sink_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn sink_context(&mut self, range: &Range) -> Result<bool, S::Error> {$/;"	f
sink_fast	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn sink_fast(&self) -> io::Result<()> {$/;"	f
sink_fast_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn sink_fast_multi_line(&self) -> io::Result<()> {$/;"	f
sink_matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn sink_matched($/;"	f
sink_matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn sink_matched(&mut self, range: &Range) -> Result<bool, S::Error> {$/;"	f
sink_matched_inverted	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^    fn sink_matched_inverted(&mut self) -> Result<bool, S::Error> {$/;"	f
sink_other_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/core.rs	/^    fn sink_other_context($/;"	f
sink_slow	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn sink_slow(&self) -> io::Result<()> {$/;"	f
sink_slow_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn sink_slow_multi_line(&self) -> io::Result<()> {$/;"	f
sink_slow_multi_line_only_matching	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn sink_slow_multi_line_only_matching(&self) -> io::Result<()> {$/;"	f
sink_slow_multi_per_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn sink_slow_multi_per_match(&self) -> io::Result<()> {$/;"	f
sink_with_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn sink_with_path<'p, 's, M, P>($/;"	f
sink_with_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn sink_with_path<'p, 's, M, P>($/;"	f
sink_with_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn sink_with_path<'p, 's, M, P>($/;"	f
sinks	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/sink.rs	/^pub mod sinks {$/;"	m
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub mod size_hint {$/;"	m
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn size_limit(&mut self, bytes: usize) -> &mut RegexMatcherBuilder {$/;"	f
skip_deserializing	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	f
skip_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	f
skip_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn skip_field(&self, span: Span) -> Option<TokenStream> {$/;"	f
skip_serializing	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	f
skip_serializing_if	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn skip_serializing_if(&self) -> Option<&syn::ExprPath> {$/;"	f
slice_has_utf16_bom	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^fn slice_has_utf16_bom(slice: &[u8]) -> bool {$/;"	f
slice_needs_transcoding	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^    fn slice_needs_transcoding(&self, slice: &[u8]) -> bool {$/;"	f
slow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn slow(slice: &[u8]) -> Result<(), Utf8Error> {$/;"	f
source	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	f
source	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
spanned_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn spanned_tokens(s: &syn::LitStr) -> parse::Result<TokenStream> {$/;"	f
sparse	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^    fn sparse(set: &ByteSet) -> Vec<u8> {$/;"	f
sparse_except	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^    fn sparse_except(except: &[u8]) -> Vec<u8> {$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	f
split_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn split_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
split_with_de_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn split_with_de_lifetime($/;"	f
splitn_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn splitn_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
standard_stream_is_send	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn standard_stream_is_send() {$/;"	f
start	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn start(&self) -> usize {$/;"	f
start_color_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn start_color_match(&self) -> io::Result<()> {$/;"	f
starts_with_digit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^fn starts_with_digit(slice: &str) -> bool {$/;"	f
starts_with_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn starts_with_str<B: AsRef<[u8]>>(&self, prefix: B) -> bool {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    pub fn stats(&self) -> &Stats {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn stats(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn stats(&self) -> Option<&Stats> {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn stats(&mut self, yes: bool) -> &mut SummaryBuilder {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    pub fn stats(&self) -> Option<&Stats> {$/;"	f
stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stderr(choice: ColorChoice) -> BufferWriter {$/;"	f
stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stderr(choice: ColorChoice) -> BufferedStandardStream {$/;"	f
stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stderr(choice: ColorChoice) -> StandardStream {$/;"	f
stdout	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stdout(choice: ColorChoice) -> BufferWriter {$/;"	f
stdout	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stdout(choice: ColorChoice) -> BufferedStandardStream {$/;"	f
stdout	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stdout(choice: ColorChoice) -> StandardStream {$/;"	f
step	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn step(state: usize, b: u8) -> usize {$/;"	f
string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/export.rs	/^mod string {$/;"	m
strip_from_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^pub fn strip_from_match($/;"	f
strip_from_match_ascii	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^fn strip_from_match_ascii(expr: Hir, byte: u8) -> Result<Hir, Error> {$/;"	f
strs_to_bstrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn strs_to_bstrs<S: AsRef<str>>(strs: &[S]) -> Vec<&[u8]> {$/;"	f
strs_to_bstrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn strs_to_bstrs<S: AsRef<str>>(strs: &[S]) -> Vec<&[u8]> {$/;"	f
struct_from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^fn struct_from_ast<'a>($/;"	f
struct_pattern	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^fn struct_pattern(fields: &[Field]) -> TokenStream {$/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn struct_variant<V>($/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn struct_variant<V>($/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn struct_variant<V>($/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn struct_variant<V>(self, _fields: &'static [&'static str], _visitor: V) -> Result<V::Value>$/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn struct_variant<V>(self, fields: &'static [&'static str], visitor: V) -> Result<V::Value>$/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn struct_variant<V>($/;"	f
sub	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn sub(a: *const u8, b: *const u8) -> usize {$/;"	f
sub	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^fn sub(a: *const u8, b: *const u8) -> usize {$/;"	f
suffix_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn suffix_forward() {$/;"	f
suffix_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn suffix_reverse() {$/;"	f
suffixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn suffixes(bytes: &[u8]) -> Vec<&[u8]> {$/;"	f
supports_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn supports_color(&self) -> bool {$/;"	f
supports_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn supports_color(&self) -> bool;$/;"	f
supports_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    fn supports_color(&self) -> bool {$/;"	f
swap_greed	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn swap_greed(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
syn_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn syn_error(&self, err: syn::Error) {$/;"	f
tag	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn tag(&self) -> &TagType {$/;"	f
take	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn take(&mut self) -> Value {$/;"	f
test	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^    pub fn test(&self) {$/;"	f
test_256_parse_err_out_of_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_256_parse_err_out_of_range() {$/;"	f
test_256_parse_ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_256_parse_ok() {$/;"	f
test_clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_clear() {$/;"	f
test_inv_memchr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    fn test_inv_memchr() {$/;"	f
test_is_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_is_none() {$/;"	f
test_no_reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_no_reset() {$/;"	f
test_reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_reset() {$/;"	f
test_rgb_parse_err_bad_format	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_rgb_parse_err_bad_format() {$/;"	f
test_rgb_parse_err_out_of_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_rgb_parse_err_out_of_range() {$/;"	f
test_rgb_parse_ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_rgb_parse_ok() {$/;"	f
test_simple_parse_ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_simple_parse_ok() {$/;"	f
test_var_ansi_write_256	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_var_ansi_write_256() {$/;"	f
test_var_ansi_write_rgb	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_var_ansi_write_rgb() {$/;"	f
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^pub mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/encode.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/interpolate.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/non_matching.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/line_buffer.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/glue.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/searcher/mod.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/testutil.rs	/^mod tests {$/;"	m
to_ascii_lowercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_ascii_lowercase(&self) -> Vec<u8> {$/;"	f
to_ascii_uppercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_ascii_uppercase(&self) -> Vec<u8> {$/;"	f
to_base64	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/jsont.rs	/^fn to_base64<T, S>(bytes: T, ser: S) -> Result<S::Ok, S::Error>$/;"	f
to_color_spec	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/color.rs	/^    pub fn to_color_spec(&self) -> ColorSpec {$/;"	f
to_compile_errors	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/lib.rs	/^fn to_compile_errors(errors: Vec<syn::Error>) -> proc_macro2::TokenStream {$/;"	f
to_lowercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_lowercase(&self) -> Vec<u8> {$/;"	f
to_lowercase_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_lowercase_into(&self, buf: &mut Vec<u8>) {$/;"	f
to_os_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_os_str(&self) -> Result<&OsStr, Utf8Error> {$/;"	f
to_os_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_os_str_lossy(&self) -> Cow<OsStr> {$/;"	f
to_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn to_owned(&self) -> BString {$/;"	f
to_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn to_owned(&self) -> Self::Owned {$/;"	f
to_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_path(&self) -> Result<&Path, Utf8Error> {$/;"	f
to_path_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_path_lossy(&self) -> Cow<Path> {$/;"	f
to_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub fn to_raw_value<T>(value: &T) -> Result<Box<RawValue>, Error>$/;"	f
to_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str(&self) -> Result<&str, Utf8Error> {$/;"	f
to_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str_lossy(&self) -> Cow<str> {$/;"	f
to_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str_lossy() {$/;"	f
to_str_lossy_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str_lossy_into(&self, dest: &mut String) {$/;"	f
to_str_unchecked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    unsafe fn to_str_unchecked(&self) -> &str {$/;"	f
to_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_string<T>(value: &T) -> Result<String>$/;"	f
to_string_pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_string_pretty<T>(value: &T) -> Result<String>$/;"	f
to_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	f
to_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	f
to_uppercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_uppercase(&self) -> Vec<u8> {$/;"	f
to_uppercase_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_uppercase_into(&self, buf: &mut Vec<u8>) {$/;"	f
to_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^pub fn to_value<T>(value: T) -> Result<Value, Error>$/;"	f
to_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_vec<T>(value: &T) -> Result<Vec<u8>>$/;"	f
to_vec_pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_vec_pretty<T>(value: &T) -> Result<Vec<u8>>$/;"	f
to_windows	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn to_windows($/;"	f
to_writer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_writer<W, T>(writer: W, value: &T) -> Result<()>$/;"	f
to_writer_pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_writer_pretty<W, T>(writer: W, value: &T) -> Result<()>$/;"	f
total_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    pub fn total_count(&self) -> u64 {$/;"	f
trailing_junk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/read/decoder_tests.rs	/^fn trailing_junk() {$/;"	f
transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	f
tri	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/lib.rs	/^macro_rules! tri {$/;"	d
trim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim(&self) -> &[u8] {$/;"	f
trim_ascii	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn trim_ascii() {$/;"	f
trim_ascii	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    pub fn trim_ascii(&mut self, yes: bool) -> &mut StandardBuilder {$/;"	f
trim_ascii_multi_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn trim_ascii_multi_line() {$/;"	f
trim_ascii_prefix	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn trim_ascii_prefix(&self, slice: &[u8], range: &mut Match) {$/;"	f
trim_ascii_prefix	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^pub fn trim_ascii_prefix($/;"	f
trim_ascii_with_line_term	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn trim_ascii_with_line_term() {$/;"	f
trim_end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_end(&self) -> &[u8] {$/;"	f
trim_end_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_end_with<F: FnMut(char) -> bool>(&self, mut trim: F) -> &[u8] {$/;"	f
trim_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_line(line: &mut Vec<u8>) {$/;"	f
trim_line_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_line_slice(mut line: &[u8]) -> &[u8] {$/;"	f
trim_line_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn trim_line_terminator(&self, buf: &[u8], line: &mut Match) {$/;"	f
trim_record	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_record(record: &mut Vec<u8>, terminator: u8) {$/;"	f
trim_record_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_record_slice(mut record: &[u8], terminator: u8) -> &[u8] {$/;"	f
trim_start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_start(&self) -> &[u8] {$/;"	f
trim_start_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_start_with<F: FnMut(char) -> bool>(&self, mut trim: F) -> &[u8] {$/;"	f
trim_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_with<F: FnMut(char) -> bool>(&self, mut trim: F) -> &[u8] {$/;"	f
try	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/try.rs	/^        macro_rules! try {$/;"	d
try_captures_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn try_captures_iter<F, E>($/;"	f
try_captures_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn try_captures_iter<F, E>($/;"	f
try_find_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    fn try_find_iter<F, E>($/;"	f
try_find_iter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn try_find_iter<F, E>($/;"	f
tuple_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	f
type_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn type_from(&self) -> Option<&syn::Type> {$/;"	f
type_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn type_into(&self) -> Option<&syn::Type> {$/;"	f
type_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn type_name(&self) -> String {$/;"	f
type_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn type_name(&self) -> String {$/;"	f
type_of_item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^fn type_of_item(cont: &Container) -> syn::Type {$/;"	f
type_try_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn type_try_from(&self) -> Option<&syn::Type> {$/;"	f
ucdtests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn ucdtests() -> Vec<GraphemeClusterBreakTest> {$/;"	f
ucdtests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn ucdtests() -> Vec<SentenceBreakTest> {$/;"	f
ucdtests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn ucdtests() -> Vec<WordBreakTest> {$/;"	f
uint_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! uint_to {$/;"	d
underline	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn underline(&self) -> bool {$/;"	f
unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	f
unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn unexpected(&self) -> Unexpected {$/;"	f
unicode	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn unicode(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
uniescape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn uniescape(s: &str) -> String {$/;"	f
uniescape_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn uniescape_vec(strs: &[String]) -> Vec<String> {$/;"	f
union_required	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^fn union_required(expr: &Hir, lits: &mut Literals) {$/;"	f
unit_only	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f
unit_twoway_fwd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn unit_twoway_fwd() {$/;"	f
unit_twoway_rev	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn unit_twoway_rev() {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	f
unknown_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn unknown_field(field: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unknown_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn unknown_variant(variant: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unraw	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/dummy.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unraw	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
update	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn update(&mut self, skipped: usize) {$/;"	f
utf8_chunks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn utf8_chunks(&self) -> Utf8Chunks {$/;"	f
utf8_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    pub fn utf8_error(&self) -> &Utf8Error {$/;"	f
utf8e	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn utf8e(valid_up_to: usize) -> Utf8Error {$/;"	f
utf8e2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn utf8e2(valid_up_to: usize, error_len: usize) -> Utf8Error {$/;"	f
valid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn valid(&self) -> &'a str {$/;"	f
valid_up_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn valid_up_to(&self) -> usize {$/;"	f
validate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn validate(slice: &[u8]) -> Result<(), Utf8Error> {$/;"	f
validate_all_codepoints	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn validate_all_codepoints() {$/;"	f
validate_errors	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn validate_errors() {$/;"	f
validate_multiple_codepoints	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn validate_multiple_codepoints() {$/;"	f
values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn values(&self) -> Values {$/;"	f
values_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut {$/;"	f
variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	f
variant_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	d
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self)>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, VariantDeserializer), Error>$/;"	f
various	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/ast.rs	/^    fn various() {$/;"	f
various	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/crlf.rs	/^    fn various() {$/;"	f
various	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/literal.rs	/^    fn various() {$/;"	f
various	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/strip.rs	/^    fn various() {$/;"	f
various_captures	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn various_captures() {$/;"	f
various_find	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/word.rs	/^    fn various_find() {$/;"	f
visit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn visit<'de, V>(self, visitor: V) -> Result<V::Value>$/;"	f
visit_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_array<'de, V>(array: Vec<Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_array_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_array_ref<'de, V>(array: &'de [Value], visitor: V) -> Result<V::Value, Error>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_bool<__E>(self, __value: bool) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_bool<E>(self, value: bool) -> Result<Value, E> {$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_borrowed_bytes<E: Error>($/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_borrowed_bytes<__E>(self, __value: &'de [u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_borrowed_str<E: Error>($/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_borrowed_str<__E>(self, __value: &'de str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn visit_borrowed_str<E>(self, s: &'de str) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_byte_buf<E: Error>($/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_bytes<E: Error>($/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_bytes<__E>(self, __value: &[u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_char<__E>(self, __value: char) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_content_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f
visit_content_map_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f
visit_content_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, E>$/;"	f
visit_content_seq_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_enum<__A>(self, __data: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	f
visit_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	f
visit_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_f32<__E>(self, __value: f32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_f64<__E>(self, __value: f64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Number, E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Value, E> {$/;"	f
visit_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^        fn visit_field(&mut self, field: &'ast syn::Field) {$/;"	f
visit_float_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! visit_float_method {$/;"	d
visit_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	f
visit_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	f
visit_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i16<__E>(self, __value: i16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	f
visit_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	f
visit_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i32<__E>(self, __value: i32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i64<__E>(self, __value: i64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Number, E> {$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Value, E> {$/;"	f
visit_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	f
visit_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	f
visit_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i8<__E>(self, __value: i8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_integer_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! visit_integer_method {$/;"	d
visit_macro	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^        fn visit_macro(&mut self, _mac: &'ast syn::Macro) {}$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_map<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_map<__A>(self, mut __map: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Number, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_newtype_struct<__E>(self, __e: __E) -> _serde::export::Result<Self::Value, __E::Error>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_none<E>(self) -> Result<Value, E> {$/;"	f
visit_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_object<'de, V>(object: Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_object_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_object_ref<'de, V>(object: &'de Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^        fn visit_path(&mut self, path: &'ast syn::Path) {$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_seq<V: SeqAccess<'de>>($/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_seq<A>(mut self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_seq<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_seq<__A>(self, mut __seq: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_seq<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_some<D>(self, deserializer: D) -> Result<Value, D::Error>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_str<E: Error>($/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_str<__E>(self, __value: &str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<NumberFromString, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_str<E>(self, value: &str) -> Result<Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_string<E: Error>($/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_string<E>(self, value: String) -> Result<Value, E> {$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	f
visit_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	f
visit_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	f
visit_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u16<__E>(self, __value: u16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_u32<E>(self, value: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u32<__E>(self, __value: u32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u64<__E>(self, __value: u64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Number, E> {$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Value, E> {$/;"	f
visit_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	f
visit_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	f
visit_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u8<__E>(self, __value: u8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_unit<__E>(self) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_unit<E>(self) -> Result<Value, E> {$/;"	f
whitespace_len_fwd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/whitespace.rs	/^pub fn whitespace_len_fwd(slice: &[u8]) -> usize {$/;"	f
whitespace_len_rev	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/whitespace.rs	/^pub fn whitespace_len_rev(slice: &[u8]) -> usize {$/;"	f
with_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_bound($/;"	f
with_capacity	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> Self {$/;"	f
with_config	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^    pub fn with_config(bytes: &[u8], config: Config) -> Base64Display {$/;"	f
with_end	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn with_end(&self, end: usize) -> Match {$/;"	f
with_formatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn with_formatter(writer: W, formatter: F) -> Self {$/;"	f
with_indent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn with_indent(indent: &'a [u8]) -> Self {$/;"	f
with_lifetime_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_lifetime_bound(generics: &syn::Generics, lifetime: &str) -> syn::Generics {$/;"	f
with_pattern	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/config.rs	/^    pub fn with_pattern<F: FnMut(&str) -> String>($/;"	f
with_self_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_self_bound($/;"	f
with_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/util.rs	/^    pub fn with_separator(path: &'a Path, sep: Option<u8>) -> PrinterPath<'a> {$/;"	f
with_start	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn with_start(&self, start: usize) -> Match {$/;"	f
with_where_predicates	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_where_predicates($/;"	f
with_where_predicates_from_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_where_predicates_from_fields($/;"	f
with_where_predicates_from_variants	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_where_predicates_from_variants($/;"	f
without_defaults	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn without_defaults(generics: &syn::Generics) -> syn::Generics {$/;"	f
without_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/searcher/src/lines.rs	/^pub fn without_terminator(bytes: &[u8], line_term: LineTerminator) -> &[u8] {$/;"	f
word	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    fn word() {$/;"	f
word	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/regex/src/matcher.rs	/^    pub fn word(&mut self, yes: bool) -> &mut RegexMatcherBuilder {$/;"	f
word_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn word_indices(&self) -> WordIndices {$/;"	f
words	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn words(&self) -> Words {$/;"	f
words	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn words(bytes: &[u8]) -> Vec<&str> {$/;"	f
words_with_break_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn words_with_break_indices(&self) -> WordsWithBreakIndices {$/;"	f
words_with_breaks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn words_with_breaks(&self) -> WordsWithBreaks {$/;"	f
wrap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn wrap<Q: io::Write>(&self, wtr: Q) -> LossyStandardStream<Q> {$/;"	f
wrap_deserialize_field_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn wrap_deserialize_field_with($/;"	f
wrap_deserialize_variant_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn wrap_deserialize_variant_with($/;"	f
wrap_deserialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn wrap_deserialize_with($/;"	f
wrap_in_const	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/dummy.rs	/^pub fn wrap_in_const($/;"	f
wrap_serialize_field_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn wrap_serialize_field_with($/;"	f
wrap_serialize_variant_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn wrap_serialize_variant_with($/;"	f
wrap_serialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn wrap_serialize_with($/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    fn write(&mut self, input: &[u8]) -> Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize>;$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write(&mut self, b: &[u8]) -> io::Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/counter.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize, io::Error> {$/;"	f
write	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write(&self, buf: &[u8]) -> io::Result<()> {$/;"	f
write	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn write(&self, buf: &[u8]) -> io::Result<()> {$/;"	f
write_1_chunk_and_partial_encodes_only_complete_chunk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn write_1_chunk_and_partial_encodes_only_complete_chunk() {$/;"	f
write_1_chunk_encodes_complete_chunk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn write_1_chunk_encodes_complete_chunk() {$/;"	f
write_2_partials_to_exactly_complete_chunk_encodes_complete_chunk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn write_2_partials_to_exactly_complete_chunk_encodes_complete_chunk() {$/;"	f
write_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	f
write_all_encoded_output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    fn write_all_encoded_output(&mut self) -> Result<()> {$/;"	f
write_begin_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn write_begin_message(&mut self) -> io::Result<()> {$/;"	f
write_binary_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_binary_message(&self, offset: u64) -> io::Result<()> {$/;"	f
write_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_bool<W>(&mut self, writer: &mut W, value: bool) -> io::Result<()>$/;"	f
write_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_byte_offset($/;"	f
write_char_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_char_escape<W>(&mut self, writer: &mut W, char_escape: CharEscape) -> io::Result<()>$/;"	f
write_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write_color($/;"	f
write_colored_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_colored_line($/;"	f
write_colored_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_colored_matches($/;"	f
write_column_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_column_number($/;"	f
write_console	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write_console(&self, console: &mut wincon::Console) -> io::Result<()> {$/;"	f
write_context_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_context_separator(&self) -> io::Result<()> {$/;"	f
write_custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_custom {$/;"	d
write_encoded_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn write_encoded_bytes(&mut self, encoded: &[u8]) -> Result<(), Self::Error>;$/;"	f
write_encoded_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/chunked_encoder.rs	/^    fn write_encoded_bytes(&mut self, s: &[u8]) -> Result<(), Self::Error> {$/;"	f
write_encoded_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/display.rs	/^    fn write_encoded_bytes(&mut self, encoded: &[u8]) -> Result<(), Self::Error> {$/;"	f
write_exceeded_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_exceeded_line($/;"	f
write_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_f32<W>(&mut self, writer: &mut W, value: f32) -> io::Result<()>$/;"	f
write_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_f64<W>(&mut self, writer: &mut W, value: f64) -> io::Result<()>$/;"	f
write_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i16<W>(&mut self, writer: &mut W, value: i16) -> io::Result<()>$/;"	f
write_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i32<W>(&mut self, writer: &mut W, value: i32) -> io::Result<()>$/;"	f
write_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i64<W>(&mut self, writer: &mut W, value: i64) -> io::Result<()>$/;"	f
write_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i8<W>(&mut self, writer: &mut W, value: i8) -> io::Result<()>$/;"	f
write_intense	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_intense {$/;"	d
write_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_line(&self, line: &[u8]) -> io::Result<()> {$/;"	f
write_line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_line_number($/;"	f
write_line_term	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_line_term(&self) -> io::Result<()> {$/;"	f
write_line_term	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn write_line_term(&self, searcher: &Searcher) -> io::Result<()> {$/;"	f
write_lossy_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^fn write_lossy_utf8<W: io::Write>(mut w: W, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/json.rs	/^    fn write_message(&mut self, message: &jsont::Message) -> io::Result<()> {$/;"	f
write_normal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_normal {$/;"	d
write_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_null<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
write_number_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_number_str<W>(&mut self, writer: &mut W, value: &str) -> io::Result<()>$/;"	f
write_partial_chunk_encodes_partial_chunk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn write_partial_chunk_encodes_partial_chunk() {$/;"	f
write_partial_then_enough_to_complete_chunk_and_another_chunk_and_another_partial_chunk_encodes_only_complete_chunks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn write_partial_then_enough_to_complete_chunk_and_another_chunk_and_another_partial_chunk_encodes_only_complete_chunks($/;"	f
write_partial_then_enough_to_complete_chunk_and_another_chunk_encodes_complete_chunks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn write_partial_then_enough_to_complete_chunk_and_another_chunk_encodes_complete_chunks() {$/;"	f
write_partial_then_enough_to_complete_chunk_but_not_complete_another_chunk_encodes_complete_chunk_without_consuming_remaining	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn write_partial_then_enough_to_complete_chunk_but_not_complete_another_chunk_encodes_complete_chunk_without_consuming_remaining($/;"	f
write_path_field	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_path_field(&self, field_separator: &[u8]) -> io::Result<()> {$/;"	f
write_path_field	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn write_path_field(&self) -> io::Result<()> {$/;"	f
write_path_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_path_line(&self) -> io::Result<()> {$/;"	f
write_path_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn write_path_line(&self, searcher: &Searcher) -> io::Result<()> {$/;"	f
write_prelude	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_prelude($/;"	f
write_raw_fragment	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_raw_fragment<W>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	f
write_search_prelude	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_search_prelude(&self) -> io::Result<()> {$/;"	f
write_spec	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_spec(&self, spec: &ColorSpec, buf: &[u8]) -> io::Result<()> {$/;"	f
write_spec	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/summary.rs	/^    fn write_spec(&self, spec: &ColorSpec, buf: &[u8]) -> io::Result<()> {$/;"	f
write_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^            fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()> {$/;"	f
write_string_fragment	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_string_fragment<W>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	f
write_to_delegate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder.rs	/^    fn write_to_delegate(&mut self, current_output_len: usize) -> Result<()> {$/;"	f
write_trim	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn write_trim(&self, buf: &[u8]) -> io::Result<()> {$/;"	f
write_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u16<W>(&mut self, writer: &mut W, value: u16) -> io::Result<()>$/;"	f
write_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u32<W>(&mut self, writer: &mut W, value: u32) -> io::Result<()>$/;"	f
write_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/decode.rs	/^fn write_u64(output: &mut [u8], value: u64) {$/;"	f
write_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u64<W>(&mut self, writer: &mut W, value: u64) -> io::Result<()>$/;"	f
write_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u8<W>(&mut self, writer: &mut W, value: u8) -> io::Result<()>$/;"	f
write_var_ansi_code	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_var_ansi_code {$/;"	d
writes_that_only_write_part_of_input_and_sometimes_interrupt_produce_correct_encoded_data	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.1/src/write/encoder_tests.rs	/^fn writes_that_only_write_part_of_input_and_sometimes_interrupt_produce_correct_encoded_data() {$/;"	f
wtr	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/printer/src/standard.rs	/^    fn wtr(&self) -> &'a RefCell<CounterWriter<W>> {$/;"	f
zero	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/matcher/src/lib.rs	/^    pub fn zero(offset: usize) -> Match {$/;"	f
