!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ABOUT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^const ABOUT: &str = "$/;"	c
ACCEPT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const ACCEPT: usize = 12;$/;"	c
ALIAS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const ALIAS: Symbol = Symbol("alias");$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_rev.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/regional_indicator_rev.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/sentence_break_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/simple_word_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_rev.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALIGNED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/word_break_fwd.rs	/^        static ALIGNED: &'static Aligned<[u8]> = &Aligned {$/;"	c
ALLOC	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;$/;"	c
ALLOW_MISSING_POS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const ALLOW_MISSING_POS    = 1 << 33;$/;"	c
ALLOW_NEG_NUMS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const ALLOW_NEG_NUMS       = 1 << 27;$/;"	c
ALLOW_TAC_VALS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const ALLOW_TAC_VALS   = 1 << 12;$/;"	c
ALLOW_UNK_SC	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const ALLOW_UNK_SC         = 1 << 15;$/;"	c
ARGS_NEGATE_SCS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const ARGS_NEGATE_SCS      = 1 << 31;$/;"	c
ARGS_OVERRIDE_SELF	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const ARGS_OVERRIDE_SELF   = 1 << 40;$/;"	c
ASCII_MASK	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const ASCII_MASK: usize = ASCII_MASK_U64 as usize;$/;"	c
ASCII_MASK_U64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const ASCII_MASK_U64: u64 = 0x8080808080808080;$/;"	c
A_REQUIRED_ELSE_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const A_REQUIRED_ELSE_HELP = 1 << 2;$/;"	c
Adapter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        struct Adapter<'ser, W: 'ser, F: 'ser> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_rev.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/regional_indicator_rev.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/sentence_break_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/simple_word_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_rev.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Aligned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/word_break_fwd.rs	/^        struct Aligned<B: ?Sized> {$/;"	s
Ancestor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^struct Ancestor {$/;"	s
Ansi	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct Ansi<W>(W);$/;"	s
AnyArg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^pub trait AnyArg<'n, 'e>: std_fmt::Display {$/;"	t
App	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^pub struct App<'a, 'b>$/;"	s
AppFlags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^pub struct AppFlags(Flags);$/;"	s
AppMeta	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs	/^pub struct AppMeta<'b> {$/;"	s
AppSettings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^pub enum AppSettings {$/;"	g
Arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^pub struct Arg<'a, 'b>$/;"	s
Arg	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^type Arg = clap::Arg<'static, 'static>;$/;"	T
ArgEnum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^    pub trait ArgEnum {}$/;"	t
ArgFlags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^pub struct ArgFlags(Flags);$/;"	s
ArgGroup	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^pub struct ArgGroup<'a> {$/;"	s
ArgMatcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^pub struct ArgMatcher<'a>(pub ArgMatches<'a>);$/;"	s
ArgMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^pub struct ArgMatches<'a> {$/;"	s
ArgMatches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^struct ArgMatches(clap::ArgMatches<'static>);$/;"	s
ArgSettings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^pub enum ArgSettings {$/;"	g
ArgWithDisplay	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^trait ArgWithDisplay<'b, 'c>: AnyArg<'b, 'c> + Display {}$/;"	t
ArgWithOrder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^trait ArgWithOrder<'b, 'c>: ArgWithDisplay<'b, 'c> + DispOrder {$/;"	t
Args	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^pub struct Args(Arc<ArgsImp>);$/;"	s
ArgsImp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^struct ArgsImp {$/;"	s
ArrayInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
Attr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^struct Attr<'c, T> {$/;"	s
B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub fn B<'a, B: ?Sized + AsRef<[u8]>>(bytes: &'a B) -> &'a [u8] {$/;"	f
BB	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const BB: u8 = b'b'; \/\/ \\x08$/;"	c
BIT_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^const BIT_SIZE: usize = 32;$/;"	c
BORROW	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const BORROW: Symbol = Symbol("borrow");$/;"	c
BOUND	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const BOUND: Symbol = Symbol("bound");$/;"	c
BS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const BS: bool = true; \/\/ backslash \\x5C$/;"	c
BS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const BS: u8 = b'\\\\'; \/\/ \\x5C$/;"	c
BStr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/bstr.rs	/^pub struct BStr {$/;"	s
BStrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            struct BStrVisitor;$/;"	s
BString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/bstring.rs	/^pub struct BString {$/;"	s
BStringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            struct BStringVisitor;$/;"	s
BYTE_FREQUENCIES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/byte_frequencies.rs	/^pub const BYTE_FREQUENCIES: [u8; 256] = [$/;"	c
BYTE_FREQUENCIES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/freqs.rs	/^pub const BYTE_FREQUENCIES: [u8; 256] = [$/;"	c
BadFill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^        struct BadFill;$/;"	s
Base	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs	/^pub struct Base<'a, 'b>$/;"	s
BashGen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^pub struct BashGen<'a, 'b>$/;"	s
Bits	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^type Bits = u32;$/;"	T
BoolAttr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^struct BoolAttr<'c>(Attr<'c, ()>);$/;"	s
BoolVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
BorrowedBytesDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedCowStrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct BorrowedCowStrDeserializer<'de> {$/;"	s
BorrowedLifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^enum BorrowedLifetimes {$/;"	g
BorrowedLifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    struct BorrowedLifetimes(Punctuated<syn::Lifetime, Token![+]>);$/;"	s
BorrowedRawDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct BorrowedRawDeserializer<'de> {$/;"	s
BorrowedStrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BoundVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s
Bounded	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^pub struct Bounded<'a, 'm, 'r, 's, I> {$/;"	s
BoxedFromString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct BoxedFromString;$/;"	s
BoxedVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^        struct BoxedVisitor;$/;"	s
BoyerMooreSearch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^pub struct BoyerMooreSearch {$/;"	s
BufReadExt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^pub trait BufReadExt: io::BufRead {$/;"	t
Buffer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct Buffer(BufferInner);$/;"	s
BufferInner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum BufferInner {$/;"	g
BufferWriter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct BufferWriter {$/;"	s
BufferedStandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct BufferedStandardStream {$/;"	s
Byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct Byte(u16);$/;"	s
ByteClassSet	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^struct ByteClassSet([bool; 256]);$/;"	s
ByteInput	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^pub struct ByteInput<'t> {$/;"	s
ByteLines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^pub struct ByteLines<B> {$/;"	s
ByteRecords	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^pub struct ByteRecords<B> {$/;"	s
ByteSlice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub trait ByteSlice: Sealed {$/;"	t
ByteVec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub trait ByteVec: Sealed {$/;"	t
Bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Bytes<'a> {$/;"	s
BytesDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
CASE_INSENSITIVE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const CASE_INSENSITIVE = 1 << 16;$/;"	c
CGROUPS_CPUS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^static CGROUPS_CPUS: AtomicUsize = ::std::sync::atomic::ATOMIC_USIZE_INIT;$/;"	c
CLASSES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const CLASSES: [u8; 256] = [$/;"	c
COLORED_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const COLORED_HELP         = 1 << 22;$/;"	c
COLOR_ALWAYS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const COLOR_ALWAYS         = 1 << 23;$/;"	c
COLOR_AUTO	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const COLOR_AUTO           = 1 << 24;$/;"	c
COLOR_NEVER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const COLOR_NEVER          = 1 << 25;$/;"	c
CONF_NAME	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    const CONF_NAME: libc::c_int = libc::_SC_NPROCESSORS_CONF;$/;"	c
CONF_NAME	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    const CONF_NAME: libc::c_int = libc::_SC_NPROCESSORS_ONLN;$/;"	c
CONTAINS_LAST	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const CONTAINS_LAST        = 1 << 39;$/;"	c
CONTENT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const CONTENT: Symbol = Symbol("content");$/;"	c
COUNTER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^        static COUNTER: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
COUNTER	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^            static COUNTER: AtomicUsize = AtomicUsize::new(0);$/;"	c
CRATE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const CRATE: Symbol = Symbol("crate");$/;"	c
CStringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const CT: bool = true; \/\/ control character \\x00..=\\x1F$/;"	c
Cache	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^pub struct Cache {$/;"	s
Cache	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^pub struct Cache {$/;"	s
Cache	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^pub struct Cache {$/;"	s
CacheInner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct CacheInner {$/;"	s
Cached	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^    pub struct Cached<T: Send> {$/;"	s
Cached	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^    pub struct Cached<T: Send>(CachedThreadLocal<T>);$/;"	s
CachedGuard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^    pub struct CachedGuard<'a, T: 'a + Send> {$/;"	s
CachedGuard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^    pub struct CachedGuard<'a, T: 'a>(&'a T);$/;"	s
CaptureLocations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct CaptureLocations(re_trait::Locations);$/;"	s
CaptureLocations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct CaptureLocations(re_trait::Locations);$/;"	s
CaptureMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct CaptureMatches<'r, 't>($/;"	s
CaptureMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^pub struct CaptureMatches<'t, R>(Matches<'t, R>)$/;"	s
CaptureMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct CaptureMatches<'r, 't>($/;"	s
CaptureNames	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct CaptureNames<'r>(::std::slice::Iter<'r, Option<String>>);$/;"	s
CaptureNames	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct CaptureNames<'r>(::std::slice::Iter<'r, Option<String>>);$/;"	s
CaptureRef	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^struct CaptureRef<'a> {$/;"	s
Captures	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct Captures<'t> {$/;"	s
Captures	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct Captures<'t> {$/;"	s
CapturesDebug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
CapturesDebug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
CargoAuthors	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^        struct CargoAuthors {$/;"	s
Category	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^pub enum Category {$/;"	g
Cgroup	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^struct Cgroup {$/;"	s
Char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^pub struct Char(u32);$/;"	s
CharEscape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub enum CharEscape {$/;"	g
CharIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct CharIndices<'a> {$/;"	s
CharInput	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^pub struct CharInput<'t>(&'t [u8]);$/;"	s
CharVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct CharVisitor;$/;"	s
Chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Chars<'a> {$/;"	s
ClapApp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^    pub trait ClapApp: IntoApp + FromArgMatches + Sized {$/;"	t
Color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub enum Color {$/;"	g
ColorChoice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub enum ColorChoice {$/;"	g
ColorSpec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct ColorSpec {$/;"	s
ColorWhen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^pub enum ColorWhen {$/;"	g
Colorizer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^pub struct Colorizer {$/;"	s
ColorizerOption	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^pub struct ColorizerOption {$/;"	s
Command	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^pub enum Command {$/;"	g
CompactFormatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub struct CompactFormatter;$/;"	s
CompileClass	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^struct CompileClass<'a, 'b> {$/;"	s
Compiler	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^pub struct Compiler {$/;"	s
ComplGen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs	/^pub struct ComplGen<'a, 'b>$/;"	s
Compound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub enum Compound<'a, W: 'a, F: 'a> {$/;"	g
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^struct Config {$/;"	s
Config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^struct Config {$/;"	s
Container	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub struct Container<'a> {$/;"	s
Container	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Container {$/;"	s
Content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g
Content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub enum Content {$/;"	g
ContentDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s
ContentRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s
ContentSerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s
ContentVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s
CopyUntilResult	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^enum CopyUntilResult {$/;"	g
Count	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        struct Count(usize);$/;"	s
CowBytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^pub struct CowBytes<'a>(Imp<'a>);$/;"	s
CowBytesVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s
CowStrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s
Ctxt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^pub struct Ctxt {$/;"	s
DEFAULT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DEFAULT: Symbol = Symbol("default");$/;"	c
DEFAULT_TYPES	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/default_types.rs	/^pub const DEFAULT_TYPES: &[(&str, &[&str])] = &[$/;"	c
DELIM_NOT_SET	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const DELIM_NOT_SET    = 1 << 10;$/;"	c
DENY_UNKNOWN_FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DENY_UNKNOWN_FIELDS: Symbol = Symbol("deny_unknown_fields");$/;"	c
DERIVE_DISP_ORDER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const DERIVE_DISP_ORDER    = 1 << 21;$/;"	c
DESERIALIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DESERIALIZE: Symbol = Symbol("deserialize");$/;"	c
DESERIALIZE_WITH	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const DESERIALIZE_WITH: Symbol = Symbol("deserialize_with");$/;"	c
DISABLE_HELP_FLAGS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const DISABLE_HELP_FLAGS   = 1 << 41;$/;"	c
DISABLE_HELP_SC	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const DISABLE_HELP_SC      = 1 << 29;$/;"	c
DISABLE_VERSION	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const DISABLE_VERSION      = 1 << 11;$/;"	c
DONT_COLLAPSE_ARGS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const DONT_COLLAPSE_ARGS   = 1 << 30;$/;"	c
DONT_DELIM_TRAIL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const DONT_DELIM_TRAIL     = 1 << 26;$/;"	c
Data	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub enum Data<'a> {$/;"	g
DeImplGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct DeImplGenerics<'a>(&'a Parameters);$/;"	s
DeTypeGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct DeTypeGenerics<'a>(&'a Parameters);$/;"	s
Default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub enum Default {$/;"	g
Derive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/mod.rs	/^pub enum Derive {$/;"	g
Deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	t
Deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        trait Deserialize<'de>: Sized {$/;"	t
DeserializeOwned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	t
DeserializeSeed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	t
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	t
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            type Deserializer = $name<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Deserializer = Self;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer = <u32 as IntoDeserializer<'de, E>>::Deserializer;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub struct Deserializer<R> {$/;"	s
Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Deserializer = Self;$/;"	T
Dir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub struct Dir {$/;"	s
DirEntry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^pub struct DirEntry {$/;"	s
DirEntry	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^pub struct DirEntry {$/;"	s
DirEntryExt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^pub trait DirEntryExt {$/;"	t
DirEntryInner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^enum DirEntryInner {$/;"	g
DirEntryRaw	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^struct DirEntryRaw {$/;"	s
DirList	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^enum DirList {$/;"	g
DispOrder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^pub trait DispOrder {$/;"	t
DrainBytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub struct DrainBytes<'a> {$/;"	s
DurationVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s
EMPTY	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^        static EMPTY: [OsString; 0] = [];$/;"	c
EMPTY	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^        static EMPTY: [usize; 0] = [];$/;"	c
EMPTY_VALS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const EMPTY_VALS       = 1 << 2;$/;"	c
ERRORED	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^static ERRORED: AtomicBool = AtomicBool::new(false);$/;"	c
ESCAPE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^static ESCAPE: [bool; 256] = {$/;"	c
ESCAPE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^static ESCAPE: [u8; 256] = [$/;"	c
ElvishGen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^pub struct ElvishGen<'a, 'b>$/;"	s
EmptyFlags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct EmptyFlags {$/;"	s
EmptyLook	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub enum EmptyLook {$/;"	g
Encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^pub struct Encode {$/;"	s
EncodingMode	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^enum EncodingMode {$/;"	g
Entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^    pub type Entry<'a, V> = btree_map::Entry<'a, usize, V>;$/;"	T
Entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub enum Entry<'a> {$/;"	g
EnumAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	t
EnumDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s
EnumDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct EnumDeserializer {$/;"	s
EnumRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s
EnumRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct EnumRefDeserializer<'de> {$/;"	s
EnumVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct EnumVisitor;$/;"	s
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    type Err = String;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^    type Err = String;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs	/^    type Err = String;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^            type Err = String;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    type Err = ParseLevelError;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    type Err = Error;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    type Err = Error;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    type Err = ();$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Err = Error;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Err = Error;$/;"	T
Err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    type Err = ParseColorError;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/error.rs	/^pub enum Error {$/;"	g
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Error = A::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Error: Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Error = A::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Error = A::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Error = E;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Error = M::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Error = M::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Error = S::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct Error;$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type Error: Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	t
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub struct Error;$/;"	s
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type Error = Error;$/;"	T
Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^pub struct Error {$/;"	s
Error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^pub enum Error {$/;"	g
ErrorImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^type ErrorImpl = ();$/;"	T
ErrorImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	T
ErrorImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^struct ErrorImpl {$/;"	s
ErrorInner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^enum ErrorInner {$/;"	g
ErrorKind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^pub enum ErrorKind {$/;"	g
ErrorKind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub enum ErrorKind {$/;"	g
Exec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^pub struct Exec {$/;"	s
ExecBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^pub struct ExecBuilder {$/;"	s
ExecNoSync	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^pub struct ExecNoSync<'c> {$/;"	s
ExecNoSyncStr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^pub struct ExecNoSyncStr<'c>(ExecNoSync<'c>);$/;"	s
ExecReadOnly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^struct ExecReadOnly {$/;"	s
Expected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Expected {$/;"	t
ExpectedInMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
Expr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub struct Expr(pub Fragment);$/;"	s
FALLBACK_LOOP_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const FALLBACK_LOOP_SIZE: usize = 2 * USIZE_BYTES;$/;"	c
FF	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const FF: u8 = b'f'; \/\/ \\x0C$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#field_names),* ];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
FIELDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        const FIELDS: &'static [&'static str] = &[#tag, #content];$/;"	c
FIELD_IDENTIFIER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const FIELD_IDENTIFIER: Symbol = Symbol("field_identifier");$/;"	c
FIXTURES_CGROUPS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    static FIXTURES_CGROUPS: &'static str = "fixtures\/cgroups\/cgroups";$/;"	c
FIXTURES_PROC	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    static FIXTURES_PROC: &'static str = "fixtures\/cgroups\/proc\/cgroups";$/;"	c
FLATTEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const FLATTEN: Symbol = Symbol("flatten");$/;"	c
FNV_PRIME	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^        const FNV_PRIME: u64 = 1099511628211;$/;"	c
FROM	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const FROM: Symbol = Symbol("from");$/;"	c
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        enum Field {$/;"	g
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    enum Field {$/;"	g
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub struct Field<'a> {$/;"	s
Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Field {$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        struct FieldVisitor;$/;"	s
FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^        struct FieldVisitor;$/;"	s
Fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Fields<'a> {$/;"	s
FieldsWith	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct FieldsWith<'a, F> {$/;"	s
FileTypeDef	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^pub struct FileTypeDef {$/;"	s
Fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub trait Fill {$/;"	t
Filter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^struct Filter(Arc<dyn Fn(&DirEntry) -> bool + Send + Sync + 'static>);$/;"	s
FilterEntry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub struct FilterEntry<I, P> {$/;"	s
Find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Find<'a> {$/;"	s
FindReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct FindReverse<'a> {$/;"	s
FindTyParams	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^    struct FindTyParams<'ast> {$/;"	s
Finder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Finder<'a> {$/;"	s
FinderReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct FinderReverse<'a> {$/;"	s
First	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type First = A;$/;"	T
First	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type First;$/;"	T
First	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	T
FishGen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/fish.rs	/^pub struct FishGen<'a, 'b>$/;"	s
FlagBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^pub struct FlagBuilder<'n, 'e>$/;"	s
Flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    struct Flags: u64 {$/;"	s
Flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^    struct Flags: u32 {$/;"	s
FlatInternallyTaggedAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
FmtVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    struct FmtVisitor<'a, 'b: 'a>(&'a mut fmt::Formatter<'b>);$/;"	s
FnBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^struct FnBuilder<F> {$/;"	s
FnVisitor	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^type FnVisitor<'s> =$/;"	T
FnVisitorImp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^struct FnVisitorImp<'s> {$/;"	s
FollowEpsilon	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^enum FollowEpsilon {$/;"	g
Format	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^pub enum Format<T> {$/;"	g
Formatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub trait Formatter {$/;"	t
Fragment	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub enum Fragment {$/;"	g
Freqy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^pub struct Freqy {$/;"	s
FreqyPacked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^pub struct FreqyPacked {$/;"	s
FromArgMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^    pub trait FromArgMatches: Sized {$/;"	t
FromPrimitive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^pub trait FromPrimitive: Sized {$/;"	t
FromUtf8Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub struct FromUtf8Error {$/;"	s
Fsm	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^pub struct Fsm<'a> {$/;"	s
Fsm	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^pub struct Fsm<'r, I> {$/;"	s
Fused	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub trait Fused: private::Sealed {}$/;"	t
GETTER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const GETTER: Symbol = Symbol("getter");$/;"	c
GLOBAL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const GLOBAL           = 1 << 3;$/;"	c
GLOBAL_VERSION	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const GLOBAL_VERSION       = 1 << 3;$/;"	c
Get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        struct Get<'k, 'v> {$/;"	s
GetLogicalProcessorInformation	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^        fn GetLogicalProcessorInformation($/;"	f
GetSystemInfo	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^        fn GetSystemInfo(lpSystemInfo: *mut SYSTEM_INFO);$/;"	f
Gitignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^pub struct Gitignore {$/;"	s
GitignoreBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^pub struct GitignoreBuilder {$/;"	s
Glob	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^pub struct Glob {$/;"	s
Glob	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^pub struct Glob<'a>(GlobInner<'a>);$/;"	s
Glob	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^pub struct Glob<'a>(GlobInner<'a>);$/;"	s
GlobInner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^enum GlobInner<'a> {$/;"	g
GlobInner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^enum GlobInner<'a> {$/;"	g
GraphemeIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^pub struct GraphemeIndices<'a> {$/;"	s
Graphemes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^pub struct Graphemes<'a> {$/;"	s
HEX	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^static HEX: [u8; 256] = {$/;"	c
HEX_DIGITS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^                static HEX_DIGITS: [u8; 16] = *b"0123456789abcdef";$/;"	c
HIDDEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const HIDDEN               = 1 << 12;$/;"	c
HIDDEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const HIDDEN           = 1 << 4;$/;"	c
HIDDEN_LONG_H	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const HIDDEN_LONG_H    = 1 << 19;$/;"	c
HIDDEN_SHORT_H	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const HIDDEN_SHORT_H   = 1 << 18;$/;"	c
HIDE_DEFAULT_VAL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const HIDE_DEFAULT_VAL = 1 << 15;$/;"	c
HIDE_ENV_VALS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const HIDE_ENV_VALS    = 1 << 17;$/;"	c
HIDE_POS_VALS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const HIDE_POS_VALS    = 1 << 11;$/;"	c
Help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^pub struct Help<'a> {$/;"	s
Hole	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^enum Hole {$/;"	g
IGNORE_MESSAGES	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^static IGNORE_MESSAGES: AtomicBool = AtomicBool::new(false);$/;"	c
INFER_SUBCOMMANDS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const INFER_SUBCOMMANDS    = 1 << 38;$/;"	c
INIT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^    pub const INIT: Self = Lazy(Once::INIT);$/;"	c
INIT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^    pub const INIT: Self = Lazy(Cell::new(None), ONCE_INIT);$/;"	c
INITIALIZED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^const INITIALIZED: usize = 2;$/;"	c
INITIALIZING	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^const INITIALIZING: usize = 1;$/;"	c
INTERNAL_ERROR_MSG	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^const INTERNAL_ERROR_MSG: &'static str = "Fatal internal error. Please consider filing a bug \\$/;"	c
INTO	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const INTO: Symbol = Symbol("into");$/;"	c
INVALID	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^        const INVALID: &'static str = "\\u{FFFD}";$/;"	c
INVALID	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^        const INVALID: &'static str = "\\u{FFFD}";$/;"	c
INVALID	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^        const INVALID: &'static str = "\\u{FFFD}";$/;"	c
INVALID_UTF8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^const INVALID_UTF8: &'static str = "unexpected invalid UTF-8 code point";$/;"	c
Identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub enum Identifier {$/;"	g
IdentifierDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	t
Ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^pub struct Ignore(Arc<IgnoreInner>);$/;"	s
IgnoreBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^pub struct IgnoreBuilder {$/;"	s
IgnoreInner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^struct IgnoreInner {$/;"	s
IgnoreMatch	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^pub struct IgnoreMatch<'a>(IgnoreMatchInner<'a>);$/;"	s
IgnoreMatchInner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^enum IgnoreMatchInner<'a> {$/;"	g
IgnoreOptions	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^struct IgnoreOptions {$/;"	s
IgnoredAny	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^struct Imp<'a>(&'a [u8]);$/;"	s
Imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^struct Imp<'a>(Cow<'a, [u8]>);$/;"	s
Impossible	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InPlaceImplGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct InPlaceImplGenerics<'a>(&'a Parameters);$/;"	s
InPlaceSeed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
InPlaceTypeGenerics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct InPlaceTypeGenerics<'a>(&'a Parameters);$/;"	s
Index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^pub trait Index: private::Sealed {$/;"	t
Indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^pub struct Indices<'a> {$/;"	s
Inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^enum Inner {$/;"	g
Input	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^pub trait Input: fmt::Debug {$/;"	t
InputAt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^pub struct InputAt {$/;"	s
Inst	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub enum Inst {$/;"	g
InstBytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub struct InstBytes {$/;"	s
InstChar	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub struct InstChar {$/;"	s
InstEmptyLook	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub struct InstEmptyLook {$/;"	s
InstHole	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^enum InstHole {$/;"	g
InstPtr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^type InstPtr = u32;$/;"	T
InstPtr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub type InstPtr = usize;$/;"	T
InstPtrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct InstPtrs<'a> {$/;"	s
InstRanges	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub struct InstRanges {$/;"	s
InstSave	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub struct InstSave {$/;"	s
InstSplit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub struct InstSplit {$/;"	s
InternallyTaggedUnitVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s
IntoApp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^    pub trait IntoApp {$/;"	t
IntoDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	t
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    type IntoIter = slice::Iter<'a, Inst>;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    type IntoIter = SetMatchesIntoIter;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    type IntoIter = SetMatchesIter<'a>;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    type IntoIter = slice::Iter<'a, usize>;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type IntoIter = IntoIter;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type IntoIter = Iter<'a>;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type IntoIter = IterMut<'a>;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct IntoIter {$/;"	s
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    type IntoIter = IntoIter;$/;"	T
IntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub struct IntoIter {$/;"	s
IntoIterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IntoIterImpl = btree_map::IntoIter<String, Value>;$/;"	T
IntoIterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IntoIterImpl = indexmap::map::IntoIter<String, Value>;$/;"	T
IoRead	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct IoRead<R>$/;"	s
IoStandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum IoStandardStream {$/;"	g
IoStandardStreamLock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum IoStandardStreamLock<'a> {$/;"	g
IpAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct IpAddrVisitor;$/;"	s
IpAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct IpAddrVisitor;$/;"	s
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    type Item = &'a [u8];$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    type Item = u8;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    type Item = usize;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    type Item = u8;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    type Item = io::Result<Vec<u8>>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    type Item = &'a str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    type Item = (usize, usize, &'a str);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    type Item = &'a str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    type Item = (usize, usize, &'a str);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    type Item = &'a str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    type Item = (usize, usize, &'a str);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    type Item = (usize, usize, char);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    type Item = Utf8Chunk<'a>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    type Item = char;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    type Item = &'a str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    type Item = usize;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        type Item = (usize, &'a V);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    type Item = &'a OsStr;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    type Item = usize;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    type Item = &'a [u8];$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    type Item = &'a Inst;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    type Item = &'t [u8];$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    type Item = Captures<'t>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    type Item = Match<'t>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    type Item = Option<&'r str>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    type Item = Option<Match<'t>>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    type Item = usize;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    type Item = (usize, usize);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    type Item = Locations;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    type Item = Option<(usize, usize)>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    type Item = &'t str;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    type Item = Captures<'t>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    type Item = Match<'t>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    type Item = Option<&'r str>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    type Item = Option<Match<'t>>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    type Item = &'a usize;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Item = Result<T>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    type Item = io::Result<u8>;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            type Item = $item;$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Item = (&'a String, &'a Value);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Item = (&'a String, &'a mut Value);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Item = (String, Value);$/;"	T
Item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    type Item = Result<DirEntry>;$/;"	T
Item	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    type Item = &'a Ignore;$/;"	T
Item	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    type Item = Result<DirEntry, Error>;$/;"	T
Item	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    type Item = walkdir::Result<WalkEvent>;$/;"	T
Iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^    pub struct Iter<'a, V: 'a> {$/;"	s
Iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Iter<'a> {$/;"	s
IterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterImpl<'a> = btree_map::Iter<'a, String, Value>;$/;"	T
IterImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterImpl<'a> = indexmap::map::Iter<'a, String, Value>;$/;"	T
IterMut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct IterMut<'a> {$/;"	s
IterMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterMutImpl<'a> = btree_map::IterMut<'a, String, Value>;$/;"	T
IterMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type IterMutImpl<'a> = indexmap::map::IterMut<'a, String, Value>;$/;"	T
Jemalloc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^pub struct Jemalloc;$/;"	s
Job	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^enum Job {$/;"	g
Key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^pub struct Key<'k> {$/;"	s
KeyClass	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^enum KeyClass {$/;"	g
KeyClassifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct KeyClassifier;$/;"	s
KeyValues	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^struct KeyValues<'a>(&'a kv::Source);$/;"	s
Keys	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Keys<'a> {$/;"	s
KeysImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type KeysImpl<'a> = btree_map::Keys<'a, String, Value>;$/;"	T
KeysImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type KeysImpl<'a> = indexmap::map::Keys<'a, String, Value>;$/;"	T
KindVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct KindVisitor;$/;"	s
LAST	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const LAST             = 1 << 14;$/;"	c
LEADING_HYPHEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const LEADING_HYPHEN       = 1 << 18;$/;"	c
LEN_CUTOFF_PROPORTION	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        const LEN_CUTOFF_PROPORTION: usize = 4;$/;"	c
LEVEL_PARSE_ERROR	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static LEVEL_PARSE_ERROR: &'static str =$/;"	c
LOGGER	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/logger.rs	/^const LOGGER: &'static Logger = &Logger(());$/;"	c
LOG_LEVEL_NAMES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static LOG_LEVEL_NAMES: [&'static str; 6] = ["OFF", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"];$/;"	c
LONG	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const LONG: &str = long!($/;"	c
LOOP_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^const LOOP_SIZE: usize = 2 * USIZE_BYTES;$/;"	c
LOSSY_TESTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/tests.rs	/^pub const LOSSY_TESTS: &[(&str, &[u8])] = &[$/;"	c
LOW_INDEX_MUL_POS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const LOW_INDEX_MUL_POS    = 1 << 28;$/;"	c
Lazy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^pub struct Lazy<T: Sync>(Once<T>);$/;"	s
Lazy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^pub struct Lazy<T: Sync>(Cell<Option<T>>, Once);$/;"	s
LazyStatic	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^pub trait LazyStatic {$/;"	t
LenHint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^trait LenHint: Iterator {$/;"	t
Level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub enum Level {$/;"	g
LevelEnum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelEnum;$/;"	s
LevelFilter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub enum LevelFilter {$/;"	g
LevelFilterEnum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelFilterEnum;$/;"	s
LevelFilterIdentifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelFilterIdentifier;$/;"	s
LevelIdentifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelIdentifier;$/;"	s
LineColIterator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^pub struct LineColIterator<I> {$/;"	s
Lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Lines<'a> {$/;"	s
LinesWithTerminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct LinesWithTerminator<'a> {$/;"	s
LiteralIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^pub enum LiteralIter<'a> {$/;"	g
LiteralSearcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^pub struct LiteralSearcher {$/;"	s
LiteralSearcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^    pub struct LiteralSearcher(());$/;"	s
Locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub type Locations = CaptureLocations;$/;"	T
Locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^pub struct Locations(Vec<Slot>);$/;"	s
Locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub type Locations = CaptureLocations;$/;"	T
Log	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub trait Log: Sync + Send {$/;"	t
Logger	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/logger.rs	/^pub struct Logger(());$/;"	s
LossyStandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^struct LossyStandardStream<W> {$/;"	s
MAX_CUTOFF	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        const MAX_CUTOFF: usize = 255;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 15;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 21;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 39;$/;"	c
MAX_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            const MAX_LEN: usize = 47;$/;"	c
MAX_LEVEL_INNER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Debug;$/;"	c
MAX_LEVEL_INNER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Error;$/;"	c
MAX_LEVEL_INNER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Info;$/;"	c
MAX_LEVEL_INNER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Off;$/;"	c
MAX_LEVEL_INNER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Trace;$/;"	c
MAX_LEVEL_INNER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Warn;$/;"	c
MAX_LOG_LEVEL_FILTER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static MAX_LOG_LEVEL_FILTER: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
MAX_ONE_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const MAX_ONE_B: u32 = 0x80;$/;"	c
MAX_RANK	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    const MAX_RANK: usize = 200;$/;"	c
MAX_SIZE_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^const MAX_SIZE_BYTES: usize = 256 * (1 << 10); \/\/ 256 KB$/;"	c
MAX_THREE_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const MAX_THREE_B: u32 = 0x10000;$/;"	c
MAX_TWO_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const MAX_TWO_B: u32 = 0x800;$/;"	c
MESSAGES	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^static MESSAGES: AtomicBool = AtomicBool::new(false);$/;"	c
MIN_ALIGN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^const MIN_ALIGN: usize = 16;$/;"	c
MIN_ALIGN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^const MIN_ALIGN: usize = 8;$/;"	c
MIN_CUTOFF	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        const MIN_CUTOFF: usize = 150;$/;"	c
MIN_LEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        const MIN_LEN: usize = 9;$/;"	c
MIN_SKIPS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    const MIN_SKIPS: usize = 50;$/;"	c
MIN_SKIP_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    const MIN_SKIP_BYTES: usize = 8;$/;"	c
MSG	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^        static MSG: &'static str = "adding a default type should never fail";$/;"	c
MULTIPLE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const MULTIPLE         = 1 << 1;$/;"	c
Map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Map<K, V> {$/;"	s
MapAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	t
MapAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct MapAccess<'a, R: 'a> {$/;"	s
MapAccessDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s
MapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s
MapDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct MapDeserializer {$/;"	s
MapImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type MapImpl<K, V> = BTreeMap<K, V>;$/;"	T
MapImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type MapImpl<K, V> = IndexMap<K, V>;$/;"	T
MapKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct MapKey<'a, R: 'a> {$/;"	s
MapKeyDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct MapKeyDeserializer<'de> {$/;"	s
MapKeySerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^struct MapKeySerializer<'a, W: 'a, F: 'a> {$/;"	s
MapKeySerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^struct MapKeySerializer;$/;"	s
MapRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s
MapRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct MapRefDeserializer<'de> {$/;"	s
MapVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct MapVisitor<K, V $(, $typaram)*> {$/;"	s
Match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct Match<'t> {$/;"	s
Match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct Match<'t> {$/;"	s
Match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub struct Match(pub Fragment);$/;"	s
Match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^pub enum Match<T> {$/;"	g
MatchLiteralType	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^enum MatchLiteralType {$/;"	g
MatchNfaType	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^enum MatchNfaType {$/;"	g
MatchType	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^enum MatchType {$/;"	g
MatchedArg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs	/^pub struct MatchedArg {$/;"	s
Matcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^enum Matcher {$/;"	g
Matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct Matches<'r, 't>(re_trait::Matches<'t, ExecNoSync<'r>>);$/;"	s
Matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^pub struct Matches<'t, R>$/;"	s
Matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct Matches<'r, 't>(re_trait::Matches<'t, ExecNoSyncStr<'r>>);$/;"	s
MaybeInst	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^enum MaybeInst {$/;"	g
MaybeStaticStr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^enum MaybeStaticStr<'a> {$/;"	g
Message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^enum Message {$/;"	g
Metadata	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct Metadata<'a> {$/;"	s
MetadataBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct MetadataBuilder<'a> {$/;"	s
MissingFieldDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s
MountInfo	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^struct MountInfo {$/;"	s
N	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^enum N {$/;"	g
N	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^type N = String;$/;"	T
NEEDS_LONG_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const NEEDS_LONG_HELP      = 1 << 8;$/;"	c
NEEDS_LONG_VERSION	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const NEEDS_LONG_VERSION   = 1 << 9;$/;"	c
NEEDS_SC_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const NEEDS_SC_HELP        = 1 << 10;$/;"	c
NEXT_LINE_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const NEXT_LINE_HELP       = 1 << 20;$/;"	c
NEXT_LINE_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const NEXT_LINE_HELP   = 1 << 7;$/;"	c
NN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const NN: u8 = b'n'; \/\/ \\x0A$/;"	c
NOP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^            static NOP: NopLogger = NopLogger;$/;"	c
NO_BIN_NAME	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const NO_BIN_NAME          = 1 << 14;$/;"	c
NO_LONG	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const NO_LONG: &str = long!($/;"	c
NO_POS_VALUES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const NO_POS_VALUES        = 1 << 19;$/;"	c
NO_SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const NO_SHORT: &str = "Don't group matches by each file.";$/;"	c
NO_SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const NO_SHORT: &str = "Never print the file path with the matched lines.";$/;"	c
NO_SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const NO_SHORT: &str = "Never use memory maps.";$/;"	c
NO_SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const NO_SHORT: &str = "Suppress line numbers.";$/;"	c
NULL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^        static NULL: Value = Value::Null;$/;"	c
NUM_UNROLL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        const NUM_UNROLL: usize = 10;$/;"	c
Name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Name {$/;"	s
NeverDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
NoColor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct NoColor<W>(W);$/;"	s
NoExpand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct NoExpand<'t>(pub &'t [u8]);$/;"	s
NoExpand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct NoExpand<'t>(pub &'t str);$/;"	s
NopLogger	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^struct NopLogger;$/;"	s
Number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^pub struct Number {$/;"	s
NumberFieldDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^struct NumberFieldDeserializer;$/;"	s
NumberFromString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^pub struct NumberFromString {$/;"	s
NumberKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^struct NumberKey;$/;"	s
NumberStrEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^struct NumberStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
NumberValueEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^struct NumberValueEmitter;$/;"	s
NumberVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        struct NumberVisitor;$/;"	s
ONCE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^                static ONCE: Once = ONCE_INIT;$/;"	c
ONCE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    static ONCE: Once = ::std::sync::ONCE_INIT;$/;"	c
OTHER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const OTHER: Symbol = Symbol("other");$/;"	c
OccupiedEntry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct OccupiedEntry<'a> {$/;"	s
OccupiedEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type OccupiedEntryImpl<'a> = btree_map::OccupiedEntry<'a, String, Value>;$/;"	T
OccupiedEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type OccupiedEntryImpl<'a> = indexmap::map::OccupiedEntry<'a, String, Value>;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Ok = Content;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Ok = ();$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type Ok = ();$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type Ok;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type Ok = ();$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type Ok = String;$/;"	T
Ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type Ok = Value;$/;"	T
OneOf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^struct OneOf {$/;"	s
OnePair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        struct OnePair {$/;"	s
OptBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^pub struct OptBuilder<'n, 'e>$/;"	s
OptionVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
OsSplit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^pub struct OsSplit<'a> {$/;"	s
OsStrExt2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^pub trait OsStrExt2 {$/;"	t
OsStrExt3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^pub trait OsStrExt3 {$/;"	t
OsStringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
OsValues	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^pub struct OsValues<'a> {$/;"	s
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Output = BStr;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Output = u8;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    type Output = Self;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    type Output = [u8];$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    type Output = str;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    type Output = Value;$/;"	T
Output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    type Output = Value;$/;"	T
OutputKind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^enum OutputKind {$/;"	g
Override	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^pub struct Override(Gitignore);$/;"	s
OverrideBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^pub struct OverrideBuilder {$/;"	s
Owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Owned = BString;$/;"	T
Owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Owned = Box<RawValue>;$/;"	T
OwnedRawDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct OwnedRawDeserializer {$/;"	s
POW10	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^static POW10: [f64; 309] = [$/;"	c
PROPAGATED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const PROPAGATED           = 1 << 36;$/;"	c
PROPAGATE_VALS_DOWN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const PROPAGATE_VALS_DOWN  = 1 << 32;$/;"	c
Pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub trait Pair {$/;"	t
PairDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
ParallelVisitor	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^pub trait ParallelVisitor: Send {$/;"	t
ParallelVisitorBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^pub trait ParallelVisitorBuilder<'s> {$/;"	t
Parameters	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^struct Parameters {$/;"	s
Parameters	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^struct Parameters {$/;"	s
Parents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^pub struct Parents<'a>(Option<&'a Ignore>);$/;"	s
ParseColorError	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct ParseColorError {$/;"	s
ParseColorErrorKind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum ParseColorErrorKind {$/;"	g
ParseLevelError	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct ParseLevelError(());$/;"	s
ParseResult	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^pub enum ParseResult<'a> {$/;"	g
Parsed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^struct Parsed {$/;"	s
Parser	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^pub struct Parser<'a, 'b>$/;"	s
PartialErrorBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^struct PartialErrorBuilder(Vec<Error>);$/;"	s
Patch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^struct Patch {$/;"	s
PathBufVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathPrinter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^pub struct PathPrinter<W> {$/;"	s
PathPrinterBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^pub struct PathPrinterBuilder {$/;"	s
PathVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct PathVisitor;$/;"	s
PatternMatcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^pub enum PatternMatcher {$/;"	g
PhantomDataVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
PosBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^pub struct PosBuilder<'n, 'e>$/;"	s
Position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct Position {$/;"	s
PowerShellGen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs	/^pub struct PowerShellGen<'a, 'b>$/;"	s
PrefilterState	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^pub struct PrefilterState {$/;"	s
PrettyFormatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub struct PrettyFormatter<'a> {$/;"	s
PrimitiveVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct PrimitiveVisitor;$/;"	s
PrimitiveVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct PrimitiveVisitor;$/;"	s
Printer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^pub enum Printer<W> {$/;"	g
Program	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^pub struct Program {$/;"	s
ProgramCache	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^pub type ProgramCache = RefCell<ProgramCacheInner>;$/;"	T
ProgramCacheInner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^pub struct ProgramCacheInner {$/;"	s
QU	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const QU: bool = true; \/\/ quote \\x22$/;"	c
QU	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const QU: u8 = b'"'; \/\/ \\x22$/;"	c
REJECT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const REJECT: usize = 0;$/;"	c
REMOTE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const REMOTE: Symbol = Symbol("remote");$/;"	c
RENAME	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const RENAME: Symbol = Symbol("rename");$/;"	c
RENAME_ALL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const RENAME_ALL: Symbol = Symbol("rename_all");$/;"	c
REQUIRED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const REQUIRED         = 1;$/;"	c
REQUIRE_EQUALS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const REQUIRE_EQUALS   = 1 << 13;$/;"	c
REQ_DELIM	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const REQ_DELIM        = 1 << 9;$/;"	c
RGArg	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^pub struct RGArg {$/;"	s
RGArgKind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^pub enum RGArgKind {$/;"	g
ROOT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    const ROOT: &'static str = "\/home\/foobar\/rust\/rg";$/;"	c
ROOT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    const ROOT: &'static str = "\/home\/andrew\/foo";$/;"	c
RR	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const RR: u8 = b'r'; \/\/ \\x0D$/;"	c
R_UNLESS_ALL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const R_UNLESS_ALL     = 1 << 8;$/;"	c
RangeVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s
RawKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^struct RawKey;$/;"	s
RawKeyDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^struct RawKeyDeserializer;$/;"	s
RawValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct RawValue {$/;"	s
RawValueEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^struct RawValueEmitter;$/;"	s
RawValueStrEmitter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^struct RawValueStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
Read	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub trait Read<'de>: private::Sealed {$/;"	t
Record	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct Record<'a> {$/;"	s
RecordBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct RecordBuilder<'a> {$/;"	s
RecursiveResults	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub struct RecursiveResults {$/;"	s
Ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^enum Ref<'a> {$/;"	g
Reference	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub enum Reference<'b, 'c, T>$/;"	g
ReferenceFromString	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub struct ReferenceFromString;$/;"	s
ReferenceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^        struct ReferenceVisitor;$/;"	s
Regex	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct Regex(Exec);$/;"	s
Regex	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct Regex(Exec);$/;"	s
RegexBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^            pub struct RegexBuilder(RegexOptions);$/;"	s
RegexOptions	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^pub struct RegexOptions {$/;"	s
RegexSearcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pattern.rs	/^pub struct RegexSearcher<'r, 't> {$/;"	s
RegexSet	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^pub struct RegexSet(Exec);$/;"	s
RegexSetBuilder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^            pub struct RegexSetBuilder(RegexOptions);$/;"	s
RegularExpression	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^pub trait RegularExpression: Sized {$/;"	t
RelationProcessorCore	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    const RelationProcessorCore: u32 = 0;$/;"	c
RenameAllRules	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct RenameAllRules {$/;"	s
RenameRule	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^pub enum RenameRule {$/;"	g
Replacer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub trait Replacer {$/;"	t
Replacer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub trait Replacer {$/;"	t
ReplacerRef	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct ReplacerRef<'a, R: ?Sized + 'a>(&'a mut R);$/;"	s
ReplacerRef	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct ReplacerRef<'a, R: ?Sized + 'a>(&'a mut R);$/;"	s
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	T
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^type Result = result::Result<Patch, Error>;$/;"	T
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^pub enum Result<T> {$/;"	g
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	T
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	T
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	T
Result	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub type Result<T> = result::Result<T, Box<dyn error::Error + Send + Sync>>;$/;"	T
Result	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^type Result<T> = ::std::result::Result<T, Box<dyn error::Error>>;$/;"	T
Result	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub type Result<T> =$/;"	T
ResultOrEmpty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^type ResultOrEmpty = result::Result<Option<Patch>, Error>;$/;"	T
ResultVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s
SC_NEGATE_REQS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const SC_NEGATE_REQS       = 1;$/;"	c
SC_REQUIRED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const SC_REQUIRED          = 1 << 1;$/;"	c
SC_REQUIRED_ELSE_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const SC_REQUIRED_ELSE_HELP= 1 << 7;$/;"	c
SEARCH_TESTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^const SEARCH_TESTS: &'static [SearchTest] = &[$/;"	c
SERDE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SERDE: Symbol = Symbol("serde");$/;"	c
SERIALIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SERIALIZE: Symbol = Symbol("serialize");$/;"	c
SERIALIZE_WITH	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SERIALIZE_WITH: Symbol = Symbol("serialize_with");$/;"	c
SET_LOGGER_ERROR	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static SET_LOGGER_ERROR: &'static str = "attempted to set a logger after the logging system \\$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "A file or directory to search.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "A pattern to search for.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "A regular expression used for searching.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Add a new glob for a file type.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Alias for --color always --heading --line-number.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Case insensitive search.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Clear globs for a file type.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Configure color settings and styles.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Controls when to use color.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "DEPRECATED";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Descend at most NUM directories.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Disable Unicode mode for PCRE2 matching.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Disable Unicode mode.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Do not print anything to stdout.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Do not require a git repository to use gitignores.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Do not search files matching TYPE.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't print lines longer than this limit.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't respect --ignore-file arguments.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't respect .ignore files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't respect VCS ignore files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't respect global ignore files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't respect ignore files in parent directories.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't respect ignore files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Don't respect local exclusion files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Dynamically use PCRE2 if necessary.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Enable PCRE2 matching.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Enable matching across multiple lines.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Follow symbolic links.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Force block buffering.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Force line buffering.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Ignore files larger than NUM in size.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Include files with zero matches in summary";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Include or exclude files case insensitively.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Include or exclude files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Invert matching.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Limit the number of matches.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Make '.' match new lines when multiline is enabled.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Never read configuration files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Only print the paths that contain zero matches.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Only print the paths with at least one match.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Only search files matching TYPE.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Only show matches surrounded by line boundaries.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Only show matches surrounded by word boundaries.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Only show the count of matching lines for each file.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print a NUL byte after file paths.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print a preview for lines exceeding the limit.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print both matching and non-matching lines.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print each file that would be searched.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print matches grouped by each file.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print only matched parts of a line.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print statistics about this ripgrep search.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print the file path with the matched lines.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Print the version of PCRE2 that ripgrep uses.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Process all glob patterns case insensitively.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Process ignore files case insensitively.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Reduce the level of \\"smart\\" searching.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Replace matches with the given text.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Search binary files as if they were text.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Search binary files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Search case sensitively (default).";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Search for patterns from the given file.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Search hidden files and directories.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Search in compressed files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Search using memory maps when possible.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Set the context separator string.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Set the path separator.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show NUM lines after each match.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show NUM lines before and after each match.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show NUM lines before each match.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show all supported file types.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show column numbers.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show debug messages.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show line numbers.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show results in vim compatible format.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Show search results in a JSON Lines format.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Smart case search.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Specify additional ignore files.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Specify the text encoding of files to search.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Specify which regexp engine to use.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Support CRLF line terminators (useful on Windows).";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Suppress gitignore parse error messages.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Suppress some error messages.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "The approximate number of threads to use.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "The upper size limit of the compiled regex.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "The upper size limit of the regex DFA.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Treat the pattern as a literal string.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Trim prefixed whitespace from matches.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "Use NUL as a line terminator instead of \\\\n.";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str = "search outputs of COMMAND FILE for each FILE";$/;"	c
SHORT	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    const SHORT: &str =$/;"	c
SKIP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP: Symbol = Symbol("skip");$/;"	c
SKIP_DESERIALIZING	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP_DESERIALIZING: Symbol = Symbol("skip_deserializing");$/;"	c
SKIP_SERIALIZING	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP_SERIALIZING: Symbol = Symbol("skip_serializing");$/;"	c
SKIP_SERIALIZING_IF	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const SKIP_SERIALIZING_IF: Symbol = Symbol("skip_serializing_if");$/;"	c
STATE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static STATE: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
STATES_FORWARD	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^const STATES_FORWARD: &'static [u8] = &[$/;"	c
STATE_DEAD	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^const STATE_DEAD: StatePtr = STATE_UNKNOWN + 1;$/;"	c
STATE_MATCH	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^const STATE_MATCH: StatePtr = 1 << 29;$/;"	c
STATE_MAX	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^const STATE_MAX: StatePtr = STATE_MATCH - 1;$/;"	c
STATE_QUIT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^const STATE_QUIT: StatePtr = STATE_DEAD + 1;$/;"	c
STATE_START	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^const STATE_START: StatePtr = 1 << 30;$/;"	c
STATE_UNKNOWN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^const STATE_UNKNOWN: StatePtr = 1 << 31;$/;"	c
STATIC_MAX_LEVEL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub const STATIC_MAX_LEVEL: LevelFilter = MAX_LEVEL_INNER;$/;"	c
SYSTEM_INFO	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    struct SYSTEM_INFO {$/;"	s
SYSTEM_LOGICAL_PROCESSOR_INFORMATION	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    struct SYSTEM_LOGICAL_PROCESSOR_INFORMATION {$/;"	s
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub trait Sealed {}$/;"	t
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub trait Sealed {}$/;"	t
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub trait Sealed {}$/;"	t
Sealed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    pub trait Sealed {}$/;"	t
SearchResult	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^pub struct SearchResult {$/;"	s
SearchTest	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^type SearchTest = (&'static str, &'static str, Option<usize>, Option<usize>);$/;"	T
SearchWorker	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^pub struct SearchWorker<W> {$/;"	s
SearchWorkerBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^pub struct SearchWorkerBuilder {$/;"	s
Searcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pattern.rs	/^    type Searcher = RegexSearcher<'r, 't>;$/;"	T
Second	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Second = B;$/;"	T
Second	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Second;$/;"	T
Second	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	T
SeedStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s
SeedTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s
Selection	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^enum Selection<T> {$/;"	g
SentenceIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^pub struct SentenceIndices<'a> {$/;"	s
Sentences	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^pub struct Sentences<'a> {$/;"	s
SeqAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	t
SeqAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct SeqAccess<'a, R: 'a> {$/;"	s
SeqAccessDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s
SeqDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct SeqDeserializer {$/;"	s
SeqInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct SeqInPlaceVisitor<'a, T: 'a $(, $typaram: 'a)*>(&'a mut $ty<T $(, $typaram)*>);$/;"	s
SeqRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s
SeqRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct SeqRefDeserializer<'de> {$/;"	s
SeqVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                struct SeqVisitor<T $(, $typaram)*> {$/;"	s
SerAndDe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^type SerAndDe<T> = (Option<T>, Option<T>);$/;"	T
Serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        trait Serialize {$/;"	t
Serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait Serialize {$/;"	t
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeMap = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	t
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeMap = Compound<'a, W, F>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeMap = Impossible<String, Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeMap = Impossible<Value, Error>;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeMap = SerializeMap;$/;"	T
SerializeMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub enum SerializeMap {$/;"	g
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeSeq = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	t
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeSeq = Compound<'a, W, F>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeSeq = Impossible<String, Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeSeq = Impossible<Value, Error>;$/;"	T
SerializeSeq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeSeq = SerializeVec;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	t
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStruct = Compound<'a, W, F>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStruct = Impossible<String, Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStruct = Impossible<Value, Error>;$/;"	T
SerializeStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStruct = SerializeMap;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeStructVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	t
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStructVariant = Compound<'a, W, F>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<String, Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<Value, Error>;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeStructVariant = SerializeStructVariant;$/;"	T
SerializeStructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct SerializeStructVariant {$/;"	s
SerializeStructVariantAsMapValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeTuple = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	t
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTuple = Compound<'a, W, F>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTuple = Impossible<String, Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTuple = Impossible<Value, Error>;$/;"	T
SerializeTuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTuple = SerializeVec;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeTupleStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	t
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleStruct = Compound<'a, W, F>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<String, Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<Value, Error>;$/;"	T
SerializeTupleStruct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleStruct = SerializeVec;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^        type SerializeTupleVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	t
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleVariant = Compound<'a, W, F>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<String, Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<Value, Error>;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariant;$/;"	T
SerializeTupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct SerializeTupleVariant {$/;"	s
SerializeTupleVariantAsMapValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s
SerializeVec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct SerializeVec {$/;"	s
Serializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	t
Serializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub struct Serializer<W, F = CompactFormatter> {$/;"	s
Serializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^pub struct Serializer;$/;"	s
SetLoggerError	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct SetLoggerError(());$/;"	s
SetMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^pub struct SetMatches {$/;"	s
SetMatchesIntoIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^pub struct SetMatchesIntoIter(iter::Enumerate<vec::IntoIter<bool>>);$/;"	s
SetMatchesIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^pub struct SetMatchesIter<'a>(iter::Enumerate<slice::Iter<'a, bool>>);$/;"	s
Shell	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs	/^pub enum Shell {$/;"	g
Shift	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^enum Shift {$/;"	g
SingleByteSet	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^struct SingleByteSet {$/;"	s
SliceRead	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct SliceRead<'a> {$/;"	s
Slot	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub struct Slot<'a> {$/;"	s
Slot	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^pub type Slot = Option<usize>;$/;"	T
SocketAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct SocketAddrVisitor;$/;"	s
SocketAddrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            struct SocketAddrVisitor;$/;"	s
SortBy	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^struct SortBy {$/;"	s
SortByKind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^enum SortByKind {$/;"	g
Sorter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^enum Sorter {$/;"	g
Source	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^pub trait Source {$/;"	t
SparseSet	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^pub struct SparseSet {$/;"	s
Split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct Split<'a> {$/;"	s
Split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct Split<'r, 't> {$/;"	s
Split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct Split<'r, 't> {$/;"	s
SplitN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct SplitN<'a> {$/;"	s
SplitN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct SplitN<'r, 't> {$/;"	s
SplitN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct SplitN<'r, 't> {$/;"	s
SplitNReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct SplitNReverse<'a> {$/;"	s
SplitReverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^pub struct SplitReverse<'a> {$/;"	s
StandardStream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct StandardStream {$/;"	s
StandardStreamLock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub struct StandardStreamLock<'a> {$/;"	s
StandardStreamType	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum StandardStreamType {$/;"	g
State	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct State {$/;"	s
State	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub enum State {$/;"	g
StateFlags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct StateFlags(u8);$/;"	s
StateMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct StateMap {$/;"	s
StatePtr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^type StatePtr = u32;$/;"	T
Stmts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^pub struct Stmts(pub Fragment);$/;"	s
StrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrRead	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^pub struct StrRead<'a> {$/;"	s
StrVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StreamDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub struct StreamDeserializer<'de, R, T> {$/;"	s
StringDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct StringVisitor;$/;"	s
StructTrait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum StructTrait {$/;"	g
StructVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum StructVariant<'a> {$/;"	g
Style	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub enum Style {$/;"	g
SubCaptureMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCaptureMatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCapturesPosIter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^pub struct SubCapturesPosIter<'c> {$/;"	s
SubCommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs	/^pub struct SubCommand<'a> {$/;"	s
Subject	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^pub struct Subject {$/;"	s
SubjectBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^pub struct SubjectBuilder {$/;"	s
Subsys	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^struct Subsys {$/;"	s
Suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^struct Suffix {$/;"	s
SuffixCache	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^struct SuffixCache {$/;"	s
SuffixCacheEntry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^struct SuffixCacheEntry {$/;"	s
SuffixCacheKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^struct SuffixCacheKey {$/;"	s
SuffixKind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^enum SuffixKind {$/;"	g
SuffixOrdering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^enum SuffixOrdering {$/;"	g
SvalVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    struct SvalVisitor<'a, 'b: 'a>(&'a mut sval::value::Stream<'b>);$/;"	s
Switched	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs	/^pub struct Switched<'b> {$/;"	s
Symbol	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub struct Symbol(&'static str);$/;"	s
TAB	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^const TAB: &'static str = "    ";$/;"	c
TAG	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const TAG: Symbol = Symbol("tag");$/;"	c
TAG_CONT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^const TAG_CONT: u8 = 0b1000_0000;$/;"	c
TAG_CONT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_CONT: u8 = 0b1000_0000;$/;"	c
TAG_FOUR	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^const TAG_FOUR: u8 = 0b1111_0000;$/;"	c
TAG_FOUR_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_FOUR_B: u8 = 0b1111_0000;$/;"	c
TAG_THREE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^const TAG_THREE: u8 = 0b1110_0000;$/;"	c
TAG_THREE_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_THREE_B: u8 = 0b1110_0000;$/;"	c
TAG_TWO	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^const TAG_TWO: u8 = 0b1100_0000;$/;"	c
TAG_TWO_B	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^const TAG_TWO_B: u8 = 0b1100_0000;$/;"	c
TAKES_VAL	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const TAKES_VAL        = 1 << 5;$/;"	c
TEMPLATE	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^const TEMPLATE: &str = "\\$/;"	c
TESTDATA	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^        const TESTDATA: &'static str =$/;"	c
TESTDATA	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^        const TESTDATA: &'static str =$/;"	c
TESTDATA	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^        const TESTDATA: &'static str = include_str!("data\/WordBreakTest.txt");$/;"	c
TESTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    const TESTS: &[(&[u8], u8, usize, usize)] = &[$/;"	c
TOKEN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub const TOKEN: &str = "$serde_json::private::RawValue";$/;"	c
TRAILING_VALUES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const TRAILING_VALUES      = 1 << 34;$/;"	c
TRAILING_VARARG	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const TRAILING_VARARG      = 1 << 13;$/;"	c
TRANSPARENT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const TRANSPARENT: Symbol = Symbol("transparent");$/;"	c
TRIES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^        static TRIES: usize = 100;$/;"	c
TRIES	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^            static TRIES: usize = 100;$/;"	c
TRY_FROM	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const TRY_FROM: Symbol = Symbol("try_from");$/;"	c
TT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const TT: u8 = b't'; \/\/ \\x09$/;"	c
TagContentOtherField	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g
TagContentOtherFieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s
TagOrContent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g
TagOrContentField	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g
TagOrContentFieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s
TagOrContentVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s
TagType	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub enum TagType {$/;"	g
TaggedContent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s
TaggedContentVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s
TaggedSerializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    type Target = [u8];$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Target = Vec<u8>;$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        type Target = [u8];$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^            type Target = str;$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^            type Target = $T;$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    type Target = [u8];$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    type Target = [Inst];$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    type Target = [usize];$/;"	T
Target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    type Target = T;$/;"	T
TempDir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub struct TempDir(PathBuf);$/;"	s
TempDir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub struct TempDir(PathBuf);$/;"	s
TestCase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    type TestCase = (Vec<u8>, u8, Option<(usize, usize)>);$/;"	T
TestFill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^        struct TestFill;$/;"	s
TestVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^        struct TestVisitor(Option<Token>);$/;"	s
TestVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        struct TestVisitor {$/;"	s
Text	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    type Text = [u8];$/;"	T
Text	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    type Text = str;$/;"	T
Text	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    type Text: ?Sized;$/;"	T
Threads	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^struct Threads {$/;"	s
ToKey	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^pub trait ToKey {$/;"	t
ToValue	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub trait ToValue {$/;"	t
Transitions	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct Transitions {$/;"	s
TransitionsRow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^struct TransitionsRow<'a>(&'a [StatePtr]);$/;"	s
TupleInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct TupleInPlaceVisitor<'a, $($name: 'a,)+>(&'a mut ($($name,)+));$/;"	s
TupleTrait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum TupleTrait {$/;"	g
TupleVariant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^enum TupleVariant {$/;"	g
TupleVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    struct TupleVisitor<$($name,)+> {$/;"	s
TwoWay	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^pub struct TwoWay<'b> {$/;"	s
Type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^struct Type<'a>(&'a Value);$/;"	s
Types	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^pub struct Types {$/;"	s
TypesBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^pub struct TypesBuilder {$/;"	s
U32Deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
UNIFIED_HELP	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const UNIFIED_HELP         = 1 << 5;$/;"	c
UNINITIALIZED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^const UNINITIALIZED: usize = 0;$/;"	c
UNTAGGED	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const UNTAGGED: Symbol = Symbol("untagged");$/;"	c
USAGE	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^const USAGE: &str = "$/;"	c
USE_DELIM	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^        const USE_DELIM        = 1 << 6;$/;"	c
USIZE_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^const USIZE_BYTES: usize = mem::size_of::<usize>();$/;"	c
USIZE_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^const USIZE_BYTES: usize = 4;$/;"	c
USIZE_BYTES	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^const USIZE_BYTES: usize = 8;$/;"	c
UTF8_NONE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const UTF8_NONE            = 1 << 17;$/;"	c
UTF8_STRICT	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const UTF8_STRICT          = 1 << 16;$/;"	c
UU	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const UU: u8 = b'u'; \/\/ \\x00...\\x1F except the ones above$/;"	c
Unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
UnitDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s
UnitOnly	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct UnitOnly;$/;"	s
UnitVariantAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct UnitVariantAccess<'a, R: 'a> {$/;"	s
UnitVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
Unsupported	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^enum Unsupported {$/;"	g
Untagged	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^enum Untagged {$/;"	g
UntaggedUnitVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s
UsageParser	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^pub struct UsageParser<'a> {$/;"	s
UsageToken	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^enum UsageToken {$/;"	g
Utf8Chunk	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Utf8Chunk<'a> {$/;"	s
Utf8Chunks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Utf8Chunks<'a> {$/;"	s
Utf8Error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub struct Utf8Error {$/;"	s
VALID_ARG_FOUND	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const VALID_ARG_FOUND      = 1 << 37;$/;"	c
VALID_NEG_NUM_FOUND	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const VALID_NEG_NUM_FOUND  = 1 << 35;$/;"	c
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	c
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	c
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
VARIANTS	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#variant_names),* ];$/;"	c
VARIANT_IDENTIFIER	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const VARIANT_IDENTIFIER: Symbol = Symbol("variant_identifier");$/;"	c
VECTOR_ALIGN	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    const VECTOR_ALIGN: usize = VECTOR_SIZE - 1;$/;"	c
VECTOR_LOOP_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    const VECTOR_LOOP_SIZE: usize = 4 * VECTOR_SIZE;$/;"	c
VECTOR_SIZE	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    const VECTOR_SIZE: usize = mem::size_of::<__m128i>();$/;"	c
VERSIONLESS_SC	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const VERSIONLESS_SC       = 1 << 4;$/;"	c
VacantEntry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct VacantEntry<'a> {$/;"	s
VacantEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type VacantEntryImpl<'a> = btree_map::VacantEntry<'a, String, Value>;$/;"	T
VacantEntryImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type VacantEntryImpl<'a> = indexmap::map::VacantEntry<'a, String, Value>;$/;"	T
Validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^pub struct Validator<'a, 'b, 'z>(&'z mut Parser<'a, 'b>)$/;"	s
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                type Value = &'de BStr;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                type Value = BString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub struct Value<'v> {$/;"	s
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            type Value = Level;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            type Value = LevelFilter;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        type Value = $ty;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        type Value = ($($name,)+);$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $name_kind;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $ty;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $ty<K, V $(, $typaram)*>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = $ty<T $(, $typaram)*>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    type Value = Field;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = Field;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = [T; $len];$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = i128;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = net::IpAddr;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = net::SocketAddr;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                type Value = u128;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = $name;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Duration;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = &'a Path;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = &'a str;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = CString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = Option<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = OsString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = PathBuf;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = String;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = [T; 0];$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = bool;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    type Value = char;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Value = T;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Value;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        type Value = V::Value;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = Content<'de>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^                type Value = #this #ty_generics;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = #this #ty_generics;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = #this;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            type Value = __Field #lifetime;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            type Value = Map<String, Value>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            type Value = Number;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            type Value = NumberFromString;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            type Value = &'de RawValue;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            type Value = ();$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            type Value = Box<RawValue>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Value = &'de RawValue;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    type Value = Box<RawValue>;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            type Value = Value;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Value = KeyClass;$/;"	T
Value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^pub enum Value {$/;"	g
ValueVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^        struct ValueVisitor;$/;"	s
Valued	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs	/^pub struct Valued<'a, 'b>$/;"	s
Values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^pub struct Values<'a> {$/;"	s
Values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^    pub type Values<'a, V> = btree_map::Values<'a, usize, V>;$/;"	T
Values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct Values<'a> {$/;"	s
ValuesImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesImpl<'a> = btree_map::Values<'a, String, Value>;$/;"	T
ValuesImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesImpl<'a> = indexmap::map::Values<'a, String, Value>;$/;"	T
ValuesMut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^pub struct ValuesMut<'a> {$/;"	s
ValuesMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesMutImpl<'a> = btree_map::ValuesMut<'a, String, Value>;$/;"	T
ValuesMutImpl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^type ValuesMutImpl<'a> = indexmap::map::ValuesMut<'a, String, Value>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^pub struct Variant<'a> {$/;"	s
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub struct Variant {$/;"	s
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    type Variant = Self;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Variant = UnitOnly;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Variant = VariantDeserializer;$/;"	T
Variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    type Variant = VariantRefDeserializer<'de>;$/;"	T
VariantAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	t
VariantAccess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^struct VariantAccess<'a, R: 'a> {$/;"	s
VariantDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s
VariantDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct VariantDeserializer {$/;"	s
VariantRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s
VariantRefDeserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^struct VariantRefDeserializer<'de> {$/;"	s
VecAttr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^struct VecAttr<'c, T> {$/;"	s
VecInPlaceVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s
VecMap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^    pub struct VecMap<V> {$/;"	s
VecVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s
Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^pub trait Visitor<'kvs> {$/;"	t
Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	t
Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^        struct Visitor;$/;"	s
Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        struct Visitor;$/;"	s
Void	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^enum Void {}$/;"	g
WAIT_ON_ERROR	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^        const WAIT_ON_ERROR        = 1 << 6;$/;"	c
WITH	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^pub const WITH: Symbol = Symbol("with");$/;"	c
Walk	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^pub struct Walk {$/;"	s
WalkBuilder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^pub struct WalkBuilder {$/;"	s
WalkDir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub struct WalkDir {$/;"	s
WalkDirOptions	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^struct WalkDirOptions {$/;"	s
WalkEvent	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^enum WalkEvent {$/;"	g
WalkEventIter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^struct WalkEventIter {$/;"	s
WalkParallel	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^pub struct WalkParallel {$/;"	s
WalkState	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^pub enum WalkState {$/;"	g
WindowsBuffer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^struct WindowsBuffer {$/;"	s
WordIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct WordIndices<'a>(WordsWithBreakIndices<'a>);$/;"	s
Words	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct Words<'a>(WordsWithBreaks<'a>);$/;"	s
WordsWithBreakIndices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct WordsWithBreakIndices<'a> {$/;"	s
WordsWithBreaks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^pub struct WordsWithBreaks<'a> {$/;"	s
Work	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^struct Work {$/;"	s
Worker	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^struct Worker<'s> {$/;"	s
Write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^pub trait Write {$/;"	t
WriteColor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^pub trait WriteColor: io::Write {$/;"	t
WriterFormatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^struct WriterFormatter<'a, 'b: 'a> {$/;"	s
WriterInner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum WriterInner<W> {$/;"	g
WriterInnerLock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^enum WriterInnerLock<'a, W> {$/;"	g
ZshGen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^pub struct ZshGen<'a, 'b>$/;"	s
_StrExt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/strext.rs	/^pub trait _StrExt {$/;"	t
__	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const __: bool = false; \/\/ allow unescaped$/;"	c
__	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const __: u8 = 255; \/\/ not a hex digit$/;"	c
__	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^const __: u8 = 0;$/;"	c
__AdjacentlyTagged	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^        struct __AdjacentlyTagged #wrapper_generics #where_clause {$/;"	s
__DeserializeWith	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __DeserializeWith #de_impl_generics #where_clause {$/;"	s
__EnumFlatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^                struct __EnumFlatten #wrapper_generics #where_clause {$/;"	s
__Field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        enum __Field #lifetime {$/;"	g
__FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __FieldVisitor #de_impl_generics #where_clause {$/;"	s
__FieldVisitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __FieldVisitor;$/;"	s
__Seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Seed #de_impl_generics #where_clause {$/;"	s
__SerializeWith	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^        struct __SerializeWith #wrapper_impl_generics #where_clause {$/;"	s
__Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Visitor #de_impl_generics #where_clause {$/;"	s
__Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Visitor #in_place_impl_generics #where_clause {$/;"	s
__Visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        struct __Visitor;$/;"	s
__lazy_static_create	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_create	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_internal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^macro_rules! __lazy_static_internal {$/;"	d
__log_file	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_file {$/;"	d
__log_format_args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_format_args {$/;"	d
__log_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_line {$/;"	d
__log_module_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_module_path {$/;"	d
__private_api_enabled	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn __private_api_enabled(level: Level, target: &str) -> bool {$/;"	f
__private_api_log	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn __private_api_log($/;"	f
__private_deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __private_deserialize {$/;"	d
__private_serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __private_serialize {$/;"	d
__private_visit_untagged_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	f
__serialize_unimplemented	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __serialize_unimplemented {$/;"	d
__serialize_unimplemented_helper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	d
__serialize_unimplemented_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	d
__stability	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^                fn __stability() -> &'static $T {$/;"	f
__static_ref_initialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^                fn __static_ref_initialize() -> $T { $e }$/;"	f
_check	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn _check(_: &Source) {}$/;"	f
_check	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn _check(_: &Visitor) {}$/;"	f
_clap_count_exprs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! _clap_count_exprs {$/;"	d
_find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn _find(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
_find_by_long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! _find_by_long {$/;"	d
_find_by_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! _find_by_short {$/;"	d
_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn _help(&self, mut use_long: bool) -> Error {$/;"	f
_is_char_boundary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool {$/;"	f
_is_char_boundary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool;$/;"	f
_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! _names {$/;"	d
_shorts_longs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! _shorts_longs {$/;"	d
_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn _version(&self, use_long: bool) -> Error {$/;"	f
_write_parser_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn _write_parser_help($/;"	f
about	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	f
absolute_base	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn absolute_base(&self) -> Option<&Path> {$/;"	f
absolute_parent	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn absolute_parent() {$/;"	f
absolute_parent_anchored	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn absolute_parent_anchored() {$/;"	f
absolute_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn absolute_path() {$/;"	f
actual	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn actual(&self) -> &str {$/;"	f
add	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn add(&mut self) -> Option<StatePtr> {$/;"	f
add	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    fn add($/;"	f
add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn add<P: AsRef<Path>>(&mut self, path: P) -> Option<Error> {$/;"	f
add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn add(&mut self, glob: &str) -> Result<&mut OverrideBuilder, Error> {$/;"	f
add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn add(&mut self, name: &str, glob: &str) -> Result<(), Error> {$/;"	f
add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn add<P: AsRef<Path>>(&mut self, path: P) -> &mut WalkBuilder {$/;"	f
add_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn add_arg(&mut self, a: Arg<'a, 'b>) {$/;"	f
add_arg_groups	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn add_arg_groups(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_arg_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn add_arg_ref(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_child	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn add_child<P: AsRef<Path>>($/;"	f
add_child_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn add_child_path(&self, dir: &Path) -> (IgnoreInner, Option<Error>) {$/;"	f
add_conditional_reqs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn add_conditional_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_custom_ignore_filename	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn add_custom_ignore_filename<S: AsRef<OsStr>>($/;"	f
add_custom_ignore_filename	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn add_custom_ignore_filename<S: AsRef<OsStr>>($/;"	f
add_def	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn add_def(&mut self, def: &str) -> Result<(), Error> {$/;"	f
add_defaults	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn add_defaults(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_defaults	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn add_defaults(&mut self) -> &mut TypesBuilder {$/;"	f
add_env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn add_env(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_group	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn add_group(&mut self, group: ArgGroup<'a>) {$/;"	f
add_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn add_ignore(&mut self, ig: Gitignore) -> &mut IgnoreBuilder {$/;"	f
add_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn add_ignore<P: AsRef<Path>>(&mut self, path: P) -> Option<Error> {$/;"	f
add_index_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn add_index_to(&mut self, arg: &'a str, idx: usize) {$/;"	f
add_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn add_line($/;"	f
add_parents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn add_parents<P: AsRef<Path>>($/;"	f
add_parents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn add_parents(&mut self) -> Option<Error> {$/;"	f
add_reqs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn add_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_sc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^    fn add_sc(sc: &App, n: &str, ret: &mut Vec<String>) {$/;"	f
add_single_val_to_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn add_single_val_to_arg<A>($/;"	f
add_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn add_state(&mut self, state: State) -> Option<StatePtr> {$/;"	f
add_step	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    fn add_step($/;"	f
add_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn add_str($/;"	f
add_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn add_subcommand(&mut self, mut subcmd: App<'a, 'b>) {$/;"	f
add_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^        macro_rules! add_val {$/;"	d
add_val_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn add_val_to(&mut self, arg: &'a str, val: &OsStr) {$/;"	f
add_val_to_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn add_val_to_arg<A>($/;"	f
adjust_rev_for_regional_indicator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^fn adjust_rev_for_regional_indicator(mut bs: &[u8], i: usize) -> usize {$/;"	f
after_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn after_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	f
alias	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
alias	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
alias	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn alias(mut self, name: &'static str) -> RGArg {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>>;$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	f
all_args_and_flags	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^pub fn all_args_and_flags() -> Vec<RGArg> {$/;"	f
all_attributes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn all_attributes() -> Vec<ColorSpec> {$/;"	f
all_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^    pub fn all_fields(&'a self) -> Box<Iterator<Item = &'a Field<'a>> + 'a> {$/;"	f
all_options_for_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^    fn all_options_for_path(&self, path: &str) -> String {$/;"	f
all_subcommand_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs	/^pub fn all_subcommand_names(p: &Parser) -> Vec<String> {$/;"	f
all_subcommands	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^    fn all_subcommands(&self) -> String {$/;"	f
all_subcommands	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs	/^pub fn all_subcommands(p: &Parser) -> Vec<(String, String)> {$/;"	f
alloc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr> {$/;"	f
alloc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn alloc(&self, layout: Layout) -> *mut u8 {$/;"	f
alloc_excess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn alloc_excess(&mut self, layout: Layout) -> Result<Excess, AllocErr> {$/;"	f
alloc_zeroed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn alloc_zeroed(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr> {$/;"	f
alloc_zeroed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn alloc_zeroed(&self, layout: Layout) -> *mut u8 {$/;"	f
allow_directories	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn allow_directories() {$/;"	f
allow_hyphen_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn allow_hyphen_values(self, a: bool) -> Self {$/;"	f
allow_leading_hyphen	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn allow_leading_hyphen(mut self) -> RGArg {$/;"	f
allow_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn allow_transparent(field: &Field, derive: Derive) -> bool {$/;"	f
alternation_literals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^fn alternation_literals(expr: &Hir) -> Option<Vec<Vec<u8>>> {$/;"	f
ansi	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn ansi() -> Buffer {$/;"	f
apitests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^mod apitests {$/;"	m
app	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^pub fn app() -> App<'static, 'static> {$/;"	f
app_debug_asserts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn app_debug_asserts(&self) -> bool {$/;"	f
app_from_crate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! app_from_crate {$/;"	d
app_settings_fromstr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    fn app_settings_fromstr() {$/;"	f
append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn append(&mut self, other: &mut Self) {$/;"	f
apply_to_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    pub fn apply_to_field(&self, field: &str) -> String {$/;"	f
apply_to_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    pub fn apply_to_variant(&self, variant: &str) -> String {$/;"	f
approximate_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn approximate_size(&self) -> usize {$/;"	f
approximate_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	f
arbitrary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn arbitrary<G: Gen>(g: &mut G) -> BString {$/;"	f
arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn arg<A: Into<Arg<'a, 'b>>>(mut self, a: A) -> Self {$/;"	f
arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn arg(mut self, n: &'a str) -> Self {$/;"	f
arg_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! arg_enum {$/;"	d
arg_from_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn arg_from_usage(mut self, usage: &'a str) -> Self {$/;"	f
arg_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn arg_names(&'a self) -> Vec<&'a str> {$/;"	f
arg_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! arg_names {$/;"	d
arg_names_in_group	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn arg_names_in_group(&self, group: &str) -> Vec<&'a str> {$/;"	f
arg_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn arg_path(args: &mut Vec<RGArg>) {$/;"	f
arg_pattern	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn arg_pattern(args: &mut Vec<RGArg>) {$/;"	f
arg_settings_fromstr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^    fn arg_settings_fromstr() {$/;"	f
args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn args(mut self, args: &[Arg<'a, 'b>]) -> Self {$/;"	f
args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn args(mut self, ns: &[&'a str]) -> Self {$/;"	f
args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn args(&mut self, args: fmt::Arguments<'a>) -> &mut RecordBuilder<'a> {$/;"	f
args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn args(&self) -> &fmt::Arguments<'a> {$/;"	f
args	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/config.rs	/^pub fn args() -> Vec<OsString> {$/;"	f
args_from_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn args_from_usage(mut self, usage: &'a str) -> Self {$/;"	f
args_in_group	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn args_in_group(&self, group: &str) -> Vec<String> {$/;"	f
argument_conflict	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn argument_conflict<O, U>($/;"	f
argument_not_found_auto	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn argument_not_found_auto<A>(arg: A) -> Self$/;"	f
array_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! array_impls {$/;"	d
array_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	d
as_arg_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^fn as_arg_trait<'a, 'b, T: ArgWithOrder<'a, 'b>>(x: &T) -> &ArgWithOrder<'a, 'b> {$/;"	f
as_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_array(&self) -> Option<&Vec<Value>> {$/;"	f
as_array_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_array_mut(&mut self) -> Option<&mut Vec<Value>> {$/;"	f
as_base	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c> {$/;"	f
as_base	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c>;$/;"	f
as_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_bool(&self) -> Option<bool> {$/;"	f
as_bstr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bstr(&self) -> &BStr {$/;"	f
as_bstr_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bstr_mut(&mut self) -> &mut BStr {$/;"	f
as_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn as_byte(&self) -> Option<u8> {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn as_bytes(&self) -> &'a [u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	f
as_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn as_bytes(&self) -> &'t [u8] {$/;"	f
as_bytes_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes_mut(&mut self) -> &mut [u8] {$/;"	f
as_bytes_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn as_bytes_mut(&mut self) -> &mut [u8];$/;"	f
as_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	f
as_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	f
as_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	f
as_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	f
as_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_mut(&mut self) -> &mut BStr {$/;"	f
as_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_mut_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn as_mut_slice(&mut self) -> &mut [u8] {$/;"	f
as_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_null(&self) -> Option<()> {$/;"	f
as_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_object(&self) -> Option<&Map<String, Value>> {$/;"	f
as_object_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_object_mut(&mut self) -> Option<&mut Map<String, Value>> {$/;"	f
as_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_ref(&self) -> &BStr {$/;"	f
as_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn as_ref(&self) -> &str {$/;"	f
as_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^    fn as_ref(&self) -> &TokenStream {$/;"	f
as_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	f
as_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn as_str(&self) -> &'t str {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn as_str<'de, 's, R: Read<'de>>(read: &R, slice: &'s [u8]) -> Result<&'s str> {$/;"	f
as_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_str(&self) -> Option<&str> {$/;"	f
as_trait_obj	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^        fn as_trait_obj<'a, 'b, T: AnyArg<'a, 'b>>(x: &T) -> &AnyArg<'a, 'b> {$/;"	f
as_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	f
as_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	f
as_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec(&self) -> &Vec<u8> {$/;"	f
as_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec(&self) -> &Vec<u8>;$/;"	f
as_vec_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec_mut(&mut self) -> &mut Vec<u8> {$/;"	f
as_vec_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn as_vec_mut(&mut self) -> &mut Vec<u8>;$/;"	f
asc	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn asc(kind: SortByKind) -> SortBy {$/;"	f
assert_is_send	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn assert_is_send<T: Send>() {}$/;"	f
assert_no_errors	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn assert_no_errors(&self) {$/;"	f
assert_paths	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn assert_paths(prefix: &Path, builder: &WalkBuilder, expected: &[&str]) {$/;"	f
assert_send	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^        fn assert_send<T: Send>() {}$/;"	f
assert_send	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^    fn assert_send<T: Send>() {}$/;"	f
assert_suffix_max	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        macro_rules! assert_suffix_max {$/;"	d
assert_suffix_min	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        macro_rules! assert_suffix_min {$/;"	d
assert_sync	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^        fn assert_sync<T: Sync>() {}$/;"	f
assert_sync	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^    fn assert_sync<T: Sync>() {}$/;"	f
assert_unwind_safe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^        fn assert_unwind_safe<T: RefUnwindSafe + UnwindSafe>() {}$/;"	f
at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn at(&self, i: usize) -> InputAt {$/;"	f
at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn at(&self, i: usize) -> InputAt;$/;"	f
at_most_one	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn at_most_one(mut self) -> Result<Option<T>, ()> {$/;"	f
atomic_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	d
atomic_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	d
author	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn author<S: Into<&'b str>>(mut self, author: S) -> Self {$/;"	f
automatic	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn automatic(mut self) -> Self {$/;"	f
backtrack	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^    fn backtrack(&mut self, start: InputAt) -> bool {$/;"	f
bad_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
basic	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/config.rs	/^    fn basic() {$/;"	f
before_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn before_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	f
begin_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_array<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_array_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_array_value<W>(&mut self, writer: &mut W, first: bool) -> io::Result<()>$/;"	f
begin_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_object<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_object_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_object_key<W>(&mut self, writer: &mut W, first: bool) -> io::Result<()>$/;"	f
begin_object_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_object_value<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_raw_buffering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	f
begin_raw_buffering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn begin_raw_buffering(&mut self);$/;"	f
begin_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn begin_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
bg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn bg(&self) -> Option<&Color> {$/;"	f
bigtime_t	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    type bigtime_t = i64;$/;"	T
bin_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn bin_name<S: Into<String>>(mut self, name: S) -> Self {$/;"	f
binary_detection_explicit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn binary_detection_explicit(&self) -> BinaryDetection {$/;"	f
binary_detection_explicit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn binary_detection_explicit($/;"	f
binary_detection_implicit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn binary_detection_implicit(&self) -> BinaryDetection {$/;"	f
binary_detection_implicit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn binary_detection_implicit($/;"	f
bitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    fn bitor(self, rhs: Self) -> Self {$/;"	f
blacklist	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	f
blacklist	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	f
blacklist	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]>;$/;"	f
blacklist	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	f
blacklist	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	f
blacklist	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	f
bm_backstop_boundary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_backstop_boundary() {$/;"	f
bm_backstop_underflow_bug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_backstop_underflow_bug() {$/;"	f
bm_find_no_subs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_find_no_subs() {$/;"	f
bm_find_subs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_find_subs() {$/;"	f
bm_memchr_fallback_indexing_bug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_memchr_fallback_indexing_bug() {$/;"	f
bm_naive_off_by_one_bug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_naive_off_by_one_bug() {$/;"	f
bm_skip_reset_bug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_skip_reset_bug() {$/;"	f
bm_win_gnu_indexing_bug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn bm_win_gnu_indexing_bug() {$/;"	f
bold	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn bold(&self) -> bool {$/;"	f
bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	f
bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn bool(&mut self, v: bool) -> Result<(), Error>;$/;"	f
bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	f
borrow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn borrow(&self) -> &BStr {$/;"	f
borrow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn borrow(&self) -> &str {$/;"	f
borrow_cow_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrowable_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn borrowable_lifetimes($/;"	f
borrowed_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn borrowed_lifetimes(cont: &Container) -> BorrowedLifetimes {$/;"	f
borrowed_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn borrowed_lifetimes(&self) -> &BTreeSet<syn::Lifetime> {$/;"	f
bounded_backtracking	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn bounded_backtracking(mut self) -> Self {$/;"	f
box_forwarded_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	d
boxed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        pub fn boxed<E>(err: E) -> Self$/;"	f
bstr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstr {$/;"	m
bstr_serde	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstr_serde {$/;"	m
bstring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstring {$/;"	m
bstring_arbitrary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstring_arbitrary {$/;"	m
bstring_serde	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^mod bstring_serde {$/;"	m
btree_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn btree_map() {$/;"	f
buffer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn buffer(&self) -> Buffer {$/;"	f
buffer_writer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn buffer_writer(&self) -> Result<BufferWriter> {$/;"	f
build	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn build(&self) -> Metadata<'a> {$/;"	f
build	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn build(&self) -> Record<'a> {$/;"	f
build	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn build(self) -> Result<Exec, Error> {$/;"	f
build	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn build(&self) -> Result<Regex, Error> {$/;"	f
build	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn build(&self) -> Result<RegexSet, Error> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^    pub fn build<W: WriteColor>(&self, wtr: W) -> PathPrinter<W> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn build<W: WriteColor>($/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    pub fn build(&self, dent: DirEntry) -> Option<Subject> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn build(&self) -> Ignore {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn build(&self) -> Result<Gitignore, Error> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn build(&self) -> Result<Override, Error> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn build(&self) -> Result<Types, Error> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn build(&mut self) -> Box<dyn ParallelVisitor + 's> {$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn build(&mut self) -> Box<dyn ParallelVisitor + 's>;$/;"	f
build	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn build(&self) -> Walk {$/;"	f
build_aho_corasick	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn build_aho_corasick(&self, parsed: &Parsed) -> Option<AhoCorasick<u32>> {$/;"	f
build_bin_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn build_bin_names(&mut self) {$/;"	f
build_err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn build_err(&self, name: &str, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	f
build_from_result	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    pub fn build_from_result($/;"	f
build_generics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn build_generics(cont: &Container, borrowed: &BorrowedLifetimes) -> syn::Generics {$/;"	f
build_generics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn build_generics(cont: &Container) -> syn::Generics {$/;"	f
build_global	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn build_global(mut self) -> (Gitignore, Option<Error>) {$/;"	f
build_parallel	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn build_parallel(&self) -> WalkParallel {$/;"	f
build_table	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^fn build_table(byteset: &[u8]) -> [u8; 256] {$/;"	f
build_tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    fn build_tests() -> Vec<TestCase> {$/;"	f
builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn builder() -> MetadataBuilder<'a> {$/;"	f
builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn builder() -> RecordBuilder<'a> {$/;"	f
by_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn by_ref<'r>(&'r mut self) -> ReplacerRef<'r, Self> {$/;"	f
by_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn by_ref<'r>(&'r mut self) -> ReplacerRef<'r, Self> {$/;"	f
byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn byte(b: u8) -> Self {$/;"	f
byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn byte(&self) -> Option<u8> {$/;"	f
byte_class	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn byte_class(&self, b: Byte) -> usize {$/;"	f
byte_classes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn byte_classes(&self) -> Vec<u8> {$/;"	f
byte_classes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn byte_classes() {$/;"	f
byte_lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn byte_lines(self) -> ByteLines<Self>$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn byte_offset(&self) -> usize;$/;"	f
byte_records	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn byte_records(self, terminator: u8) -> ByteRecords<Self>$/;"	f
bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn bytes(&self) -> Bytes {$/;"	f
bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	f
bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	f
bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/lib.rs	/^pub mod bytes {$/;"	m
bytes	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn bytes(s: &str) -> Vec<u8> {$/;"	f
c	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c(&mut self, expr: &Hir) -> ResultOrEmpty {$/;"	f
c	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^    macro_rules! c {$/;"	d
c_alternate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_alternate(&mut self, exprs: &[Hir]) -> ResultOrEmpty {$/;"	f
c_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_byte(&mut self, b: u8) -> ResultOrEmpty {$/;"	f
c_capture	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_capture(&mut self, first_slot: usize, expr: &Hir) -> ResultOrEmpty {$/;"	f
c_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_char(&mut self, c: char) -> ResultOrEmpty {$/;"	f
c_class	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_class(&mut self, ranges: &[hir::ClassUnicodeRange]) -> ResultOrEmpty {$/;"	f
c_class_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_class_bytes($/;"	f
c_concat	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_concat<'a, I>(&mut self, exprs: I) -> ResultOrEmpty$/;"	f
c_dotstar	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_dotstar(&mut self) -> Result {$/;"	f
c_empty_look	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_empty_look(&mut self, look: EmptyLook) -> ResultOrEmpty {$/;"	f
c_repeat	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_repeat(&mut self, rep: &hir::Repetition) -> ResultOrEmpty {$/;"	f
c_repeat_one_or_more	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_repeat_one_or_more($/;"	f
c_repeat_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_repeat_range($/;"	f
c_repeat_range_min_or_more	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_repeat_range_min_or_more($/;"	f
c_repeat_zero_or_more	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_repeat_zero_or_more($/;"	f
c_repeat_zero_or_one	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_repeat_zero_or_one($/;"	f
c_utf8_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_utf8_seq(&mut self, seq: &Utf8Sequence) -> Result {$/;"	f
c_utf8_seq_	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn c_utf8_seq_<'r, I>(&mut self, seq: I) -> Result$/;"	f
cached_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn cached_state($/;"	f
cached_state_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn cached_state_key($/;"	f
called	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^type called src that matches C++, Python and Markdown files, one can use:$/;"	T
can_exec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^pub fn can_exec(insts: &Program) -> bool {$/;"	f
can_never_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn can_never_match(&self, patterns: &[String]) -> bool {$/;"	f
cand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^    fn cand [text desc]{{$/;"	f
capacity	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
caps	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    fn caps(&mut self, pc: usize) -> &mut [Option<usize>] {$/;"	f
capture_locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn capture_locations(&self) -> CaptureLocations {$/;"	f
capture_locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn capture_locations(&self) -> CaptureLocations {$/;"	f
capture_name_idx	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	f
capture_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn capture_names(&self) -> &[Option<String>] {$/;"	f
capture_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	f
capture_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	f
captures	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn captures<'t>(&self, text: &'t [u8]) -> Option<Captures<'t>> {$/;"	f
captures	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn captures<'t>(&self, text: &'t str) -> Option<Captures<'t>> {$/;"	f
captures_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn captures_iter<'r, 't>($/;"	f
captures_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn captures_iter(self, text: &Self::Text) -> CaptureMatches<Self> {$/;"	f
captures_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn captures_iter<'r, 't>($/;"	f
captures_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn captures_len(&self) -> usize {$/;"	f
captures_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn captures_len(&self) -> usize {$/;"	f
captures_nfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn captures_nfa($/;"	f
captures_nfa_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn captures_nfa_type($/;"	f
captures_read	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn captures_read<'t>($/;"	f
captures_read	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn captures_read<'t>($/;"	f
captures_read_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn captures_read_at($/;"	f
captures_read_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn captures_read_at<'t>($/;"	f
captures_read_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn captures_read_at($/;"	f
captures_read_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn captures_read_at<'t>($/;"	f
case_insensitive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn case_insensitive(self, ci: bool) -> Self {$/;"	f
case_insensitive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn case_insensitive($/;"	f
case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn case_insensitive(&self) -> bool {$/;"	f
case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn case_insensitive() {$/;"	f
case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn case_insensitive($/;"	f
case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn case_insensitive() {$/;"	f
case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn case_insensitive($/;"	f
case_smart	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn case_smart(&self) -> bool {$/;"	f
cause	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn cause(&self) -> Option<&dyn error::Error> {$/;"	f
cautious	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub fn cautious(hint: Option<usize>) -> usize {$/;"	f
cgroups_num_cpus	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^fn cgroups_num_cpus() -> Option<usize> {$/;"	f
char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn char(&mut self, v: char) -> Result<(), Error> {$/;"	f
char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn char(&mut self, v: char) -> Result<(), Error>;$/;"	f
char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn char(&mut self, v: char) -> Result<(), Error> {$/;"	f
char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn char(&self) -> Char {$/;"	f
char_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn char_indices(&self) -> CharIndices {$/;"	f
char_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn char_len(&self) -> usize {$/;"	f
char_len_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^fn char_len_lossy(bytes: &[u8]) -> usize {$/;"	f
chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn chars(&self) -> Chars {$/;"	f
chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn chars() {$/;"	f
check	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^        macro_rules! check {$/;"	d
check	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^pub fn check(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn check(self) -> Result<(), Vec<syn::Error>> {$/;"	f
check	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn check(&self) -> Result<()> {$/;"	f
check_adjacent_tag_conflict	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_adjacent_tag_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_flatten(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {$/;"	f
check_for_help_and_version_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn check_for_help_and_version_char(&self, arg: char) -> ClapResult<()> {$/;"	f
check_for_help_and_version_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn check_for_help_and_version_str(&self, arg: &OsStr) -> ClapResult<()> {$/;"	f
check_from_and_try_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_from_and_try_from(cx: &Ctxt, cont: &mut Container) {$/;"	f
check_getter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_getter(cx: &Ctxt, cont: &Container) {$/;"	f
check_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_identifier(cx: &Ctxt, cont: &Container) {$/;"	f
check_internal_tag_field_name_conflict	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_internal_tag_field_name_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_loop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn check_loop<P: AsRef<Path>>(&self, child: P) -> Result<()> {$/;"	f
check_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn check_match(&self, haystack: &[u8], window_end: usize) -> bool {$/;"	f
check_recursion	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! check_recursion {$/;"	d
check_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn check_size(&self) -> result::Result<(), Error> {$/;"	f
check_symlink_loop	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn check_symlink_loop($/;"	f
check_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_transparent(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check_variant_skip_attrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn check_variant_skip_attrs(cx: &Ctxt, cont: &Container) {$/;"	f
choose_dfa_match_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn choose_dfa_match_type(&self) -> Option<MatchType> {$/;"	f
choose_literal_match_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn choose_literal_match_type(&self) -> Option<MatchType> {$/;"	f
choose_match_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn choose_match_type(&self, hint: Option<MatchType>) -> MatchType {$/;"	f
clap_app	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! clap_app {$/;"	d
clap_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^fn clap_matches<I, T>(args: I) -> Result<clap::ArgMatches<'static>>$/;"	f
classify	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn classify(&self) -> Category {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^    fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn clear(&mut self, name: &str) -> &mut TypesBuilder {$/;"	f
clear_cache	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn clear_cache(&mut self) -> bool {$/;"	f
clear_cache_and_save	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn clear_cache_and_save($/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn clone(&self) -> Level {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn clone(&self) -> LevelFilter {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn clone(&self) -> Exec {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn clone(&self) -> DirEntry {$/;"	f
clone	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn clone(&self) -> Error {$/;"	f
close	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn close(&mut self) {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn cmp(&self, other: &BStr) -> Ordering {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn cmp(&self, other: &BString) -> Ordering {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn cmp(self, current: u8, candidate: u8) -> SuffixOrdering {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn cmp(&self, other: &Self) -> cmp::Ordering {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn cmp(&self, other: &Level) -> cmp::Ordering {$/;"	f
cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn cmp(&self, other: &LevelFilter) -> cmp::Ordering {$/;"	f
col	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn col(&self) -> usize {$/;"	f
collect_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn collect_lifetimes(ty: &syn::Type, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn collect_lines<B: AsRef<[u8]>>(slice: B) -> Vec<BString> {$/;"	f
collect_lines_term	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn collect_lines_term<B: AsRef<[u8]>>(slice: B) -> Vec<BString> {$/;"	f
collect_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<()>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<String>$/;"	f
collect_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Value>$/;"	f
color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^macro_rules! color {$/;"	d
color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn color(&self) -> ColorWhen {$/;"	f
color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^macro_rules! color {$/;"	d
color_choice	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn color_choice(&self) -> ColorChoice {$/;"	f
color_specs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn color_specs(&self) -> Result<ColorSpecs> {$/;"	f
color_specs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^    pub fn color_specs($/;"	f
colored_output	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    fn colored_output() {$/;"	f
column	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn column(&self) -> usize {$/;"	f
column	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn column(&self) -> bool {$/;"	f
command	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn command(&self) -> Result<Command> {$/;"	f
compile	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn compile(mut self) -> Result {$/;"	f
compile	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    pub fn compile(mut self, exprs: &[Hir]) -> result::Result<Program, Error> {$/;"	f
compile_cpu_features	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn compile_cpu_features() -> Vec<&'static str> {$/;"	f
compile_finish	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn compile_finish(mut self) -> result::Result<Program, Error> {$/;"	f
compile_many	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn compile_many($/;"	f
compile_md2_shift	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn compile_md2_shift(pattern: &[u8]) -> usize {$/;"	f
compile_one	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn compile_one(mut self, expr: &Hir) -> result::Result<Program, Error> {$/;"	f
compile_skip_table	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn compile_skip_table(pattern: &[u8]) -> Vec<usize> {$/;"	f
complete	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn complete(&self) -> bool {$/;"	f
complete	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn complete(&self) -> bool {$/;"	f
concat	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub fn concat<T, I>(elements: I) -> Vec<u8>$/;"	f
configure_walk_builder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn configure_walk_builder(self, builder: &mut WalkBuilder) {$/;"	f
conflicts	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn conflicts(mut self, names: &[&'static str]) -> RGArg {$/;"	f
conflicts_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn conflicts_with(mut self, name: &'a str) -> Self {$/;"	f
conflicts_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn conflicts_with(mut self, n: &'a str) -> Self {$/;"	f
conflicts_with_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn conflicts_with_all(mut self, names: &[&'a str]) -> Self {$/;"	f
conflicts_with_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn conflicts_with_all(mut self, ns: &[&'a str]) -> Self {$/;"	f
console	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn console() -> Buffer {$/;"	f
constrain	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
contains	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn contains(&self, arg: &str) -> bool {$/;"	f
contains	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    pub fn contains(&self, value: usize) -> bool {$/;"	f
contains_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn contains_byte(&self, b: u8) -> bool;$/;"	f
contains_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn contains_byte(&self, byte: u8) -> bool {$/;"	f
contains_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn contains_key(&self, key: usize) -> bool {$/;"	f
contains_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn contains_key<Q>(&self, key: &Q) -> bool$/;"	f
contains_long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn contains_long(&self, l: &str) -> bool {$/;"	f
contains_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn contains_short(&self, s: char) -> bool {$/;"	f
contains_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn contains_str<B: AsRef<[u8]>>(&self, needle: B) -> bool {$/;"	f
content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^mod content {$/;"	m
content	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^mod content {$/;"	m
contents_first	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn contents_first(mut self, yes: bool) -> Self {$/;"	f
contents_first	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn contents_first() {$/;"	f
context_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn context_separator(&self) -> Option<Vec<u8>> {$/;"	f
contexts	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn contexts(&self) -> Result<(usize, usize)> {$/;"	f
continue_past_first_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn continue_past_first_match(&self) -> bool {$/;"	f
copy_and_capture	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^fn copy_and_capture<R: Read, W: Write>($/;"	f
copy_until	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^fn copy_until<R: Read, W: Write>(r: &mut R, w: &mut W, delimiter_byte: u8) -> CopyUntilResult {$/;"	f
copy_within_fail1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail1() {$/;"	f
copy_within_fail2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail2() {$/;"	f
copy_within_fail3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail3() {$/;"	f
copy_within_fail4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_fail4() {$/;"	f
copy_within_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn copy_within_str<R>(&mut self, src: R, dest: usize)$/;"	f
core	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/lib.rs	/^    mod core {$/;"	m
core	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/lib.rs	/^    mod core {$/;"	m
count	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn count(&self) -> usize {$/;"	f
count	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn count() {$/;"	f
count	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn count(&self) -> usize {$/;"	f
count	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn count() {$/;"	f
counts	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn counts(&self) -> (bool, bool) {$/;"	f
cpu_quota	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn cpu_quota(&self) -> Option<usize> {$/;"	f
crate_authors	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! crate_authors {$/;"	d
crate_description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! crate_description {$/;"	d
crate_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! crate_name {$/;"	d
crate_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! crate_version {$/;"	d
create	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn create($/;"	f
create	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn create(sty: StandardStreamType, choice: ColorChoice) -> BufferWriter {$/;"	f
create_error_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^pub fn create_error_usage<'a, 'b>($/;"	f
create_flag_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_flag_usage() {$/;"	f
create_gitignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^pub fn create_gitignore<T: AsRef<OsStr>>($/;"	f
create_help_and_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn create_help_and_version(&mut self) {$/;"	f
create_help_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^pub fn create_help_usage(p: &Parser, incl_reqs: bool) -> String {$/;"	f
create_option_usage0	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage0() {$/;"	f
create_option_usage1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage1() {$/;"	f
create_option_usage2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage2() {$/;"	f
create_option_usage3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage3() {$/;"	f
create_option_usage4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage4() {$/;"	f
create_option_usage5	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage5() {$/;"	f
create_option_usage6	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage6() {$/;"	f
create_option_usage7	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage7() {$/;"	f
create_option_usage8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage8() {$/;"	f
create_option_usage9	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage9() {$/;"	f
create_option_usage_both1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both1() {$/;"	f
create_option_usage_both2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both2() {$/;"	f
create_option_usage_both3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both3() {$/;"	f
create_option_usage_both4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both4() {$/;"	f
create_option_usage_both5	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both5() {$/;"	f
create_option_usage_both6	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both6() {$/;"	f
create_option_usage_both7	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both7() {$/;"	f
create_option_usage_both8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both8() {$/;"	f
create_option_usage_both_equals1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals1() {$/;"	f
create_option_usage_both_equals2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals2() {$/;"	f
create_option_usage_both_equals3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals3() {$/;"	f
create_option_usage_both_equals4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals4() {$/;"	f
create_option_usage_both_equals5	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals5() {$/;"	f
create_option_usage_both_equals6	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals6() {$/;"	f
create_option_usage_both_equals7	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals7() {$/;"	f
create_option_usage_both_equals8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_both_equals8() {$/;"	f
create_option_usage_long1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long1() {$/;"	f
create_option_usage_long10	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long10() {$/;"	f
create_option_usage_long2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long2() {$/;"	f
create_option_usage_long3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long3() {$/;"	f
create_option_usage_long4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long4() {$/;"	f
create_option_usage_long5	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long5() {$/;"	f
create_option_usage_long6	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long6() {$/;"	f
create_option_usage_long7	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long7() {$/;"	f
create_option_usage_long8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long8() {$/;"	f
create_option_usage_long9	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long9() {$/;"	f
create_option_usage_long_equals1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals1() {$/;"	f
create_option_usage_long_equals10	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals10() {$/;"	f
create_option_usage_long_equals2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals2() {$/;"	f
create_option_usage_long_equals3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals3() {$/;"	f
create_option_usage_long_equals4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals4() {$/;"	f
create_option_usage_long_equals5	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals5() {$/;"	f
create_option_usage_long_equals6	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals6() {$/;"	f
create_option_usage_long_equals7	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals7() {$/;"	f
create_option_usage_long_equals8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals8() {$/;"	f
create_option_usage_long_equals9	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_usage_long_equals9() {$/;"	f
create_option_with_vals1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_with_vals1() {$/;"	f
create_option_with_vals2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_with_vals2() {$/;"	f
create_option_with_vals3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_with_vals3() {$/;"	f
create_option_with_vals4	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_with_vals4() {$/;"	f
create_option_with_vals5	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_option_with_vals5() {$/;"	f
create_positional_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_positional_usage() {$/;"	f
create_positional_usage0	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn create_positional_usage0() {$/;"	f
create_smart_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^fn create_smart_usage(p: &Parser, used: &[&str]) -> String {$/;"	f
create_usage_no_title	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^pub fn create_usage_no_title(p: &Parser, used: &[&str]) -> String {$/;"	f
create_usage_with_title	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^pub fn create_usage_with_title(p: &Parser, used: &[&str]) -> String {$/;"	f
current_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^fn current_dir() -> Result<PathBuf> {$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn custom<T>(_: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn custom<T: Display>(msg: T) -> Error {$/;"	f
custom_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn custom_ignore() {$/;"	f
custom_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn custom_ignore() {$/;"	f
custom_ignore_exclusive_use	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn custom_ignore_exclusive_use() {$/;"	f
custom_ignore_over_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn custom_ignore_over_ignore() {$/;"	f
custom_ignore_precedence	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn custom_ignore_precedence() {$/;"	f
custom_serde_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn custom_serde_path(&self) -> Option<&syn::Path> {$/;"	f
d	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^        fn d(mut s: &str) -> Vec<char> {$/;"	f
de_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
de_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn de_lifetime(&self) -> syn::Lifetime {$/;"	f
de_lifetime_def	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn de_lifetime_def(&self) -> Option<syn::LifetimeDef> {$/;"	f
dealloc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout) {$/;"	f
dealloc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {$/;"	f
debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^    macro_rules! debug {$/;"	d
debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn debug(&mut self, v: &fmt::Debug) -> Result<(), Error> {$/;"	f
debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn debug(&mut self, v: &fmt::Debug) -> Result<(), Error>;$/;"	f
debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn debug(&mut self, v: &fmt::Debug) -> Result<(), Error> {$/;"	f
debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! debug {$/;"	d
debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^macro_rules! debug {$/;"	d
debug_asserts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn debug_asserts(&self, a: &Arg) -> bool {$/;"	f
debug_macros	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^mod debug_macros {$/;"	m
debugln	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^    macro_rules! debugln {$/;"	d
decide_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn decide_identifier($/;"	f
decide_tag	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn decide_tag($/;"	f
declare_error_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
declare_error_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
decode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode<B: AsRef<[u8]>>(slice: B) -> (Option<char>, usize) {$/;"	f
decode_grapheme	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^pub fn decode_grapheme(bs: &[u8]) -> (&str, usize) {$/;"	f
decode_hex_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	f
decode_hex_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16>;$/;"	f
decode_hex_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn decode_hex_val(val: u8) -> Option<u16> {$/;"	f
decode_invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_invalid() {$/;"	f
decode_last	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_last<B: AsRef<[u8]>>(slice: B) -> (Option<char>, usize) {$/;"	f
decode_last_grapheme	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^fn decode_last_grapheme(bs: &[u8]) -> (&str, usize) {$/;"	f
decode_last_invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_last_invalid() {$/;"	f
decode_last_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_last_lossy() {$/;"	f
decode_last_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_last_lossy<B: AsRef<[u8]>>(slice: B) -> (char, usize) {$/;"	f
decode_last_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^pub fn decode_last_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
decode_last_valid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_last_valid() {$/;"	f
decode_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_lossy() {$/;"	f
decode_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_lossy<B: AsRef<[u8]>>(slice: B) -> (char, usize) {$/;"	f
decode_sentence	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^fn decode_sentence(bs: &[u8]) -> (&str, usize) {$/;"	f
decode_step	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn decode_step(state: &mut usize, cp: &mut u32, b: u8) {$/;"	f
decode_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^pub fn decode_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
decode_valid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn decode_valid() {$/;"	f
decode_word	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^fn decode_word(bs: &[u8]) -> (&str, usize) {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn default() -> &'a BStr {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn default() -> &'a mut BStr {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn default() -> BString {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn default() -> Self {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn default() -> Value {$/;"	f
default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn default() -> ColorSpec {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn default() -> Config {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn default() -> SearchWorkerBuilder {$/;"	f
default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    fn default() -> Config {$/;"	f
default_case_sensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn default_case_sensitive() {$/;"	f
default_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	f
default_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	f
default_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr>;$/;"	f
default_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	f
default_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	f
default_val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	f
default_vals_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>>;$/;"	f
default_vals_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn default_value(self, val: &'a str) -> Self {$/;"	f
default_value	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn default_value(mut self, value: &'static str) -> RGArg {$/;"	f
default_value_if	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn default_value_if(self, arg: &'a str, val: Option<&'b str>, default: &'b str) -> Self {$/;"	f
default_value_if	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn default_value_if($/;"	f
default_value_if_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn default_value_if_os($/;"	f
default_value_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn default_value_ifs(mut self, ifs: &[(&'a str, Option<&'b str>, &'b str)]) -> Self {$/;"	f
default_value_ifs_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn default_value_ifs_os(mut self, ifs: &[(&'a str, Option<&'b OsStr>, &'b OsStr)]) -> Self {$/;"	f
default_value_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn default_value_os(mut self, val: &'a OsStr) -> Self {$/;"	f
define_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^macro_rules! define_builder {$/;"	d
define_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^macro_rules! define_set {$/;"	d
define_set_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^macro_rules! define_set_builder {$/;"	d
definitions	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn definitions(&self) -> &[FileTypeDef] {$/;"	f
definitions	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn definitions(&self) -> Vec<FileTypeDef> {$/;"	f
delegate_iterator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^macro_rules! delegate_iterator {$/;"	d
deny_unknown_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn deny_unknown_fields(&self) -> bool {$/;"	f
depth	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn depth(&self) -> usize {$/;"	f
depth	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn depth(&self) -> usize {$/;"	f
depth	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn depth(&self) -> Option<usize> {$/;"	f
depth	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn depth(&self) -> usize {$/;"	f
depth	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn depth(&self) -> usize {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref(&self) -> &Vec<u8> {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref(&self) -> &[u8] {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^            fn deref(&self) -> &'static str {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^            fn deref(&self) -> &$T {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	d
deref_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref_mut(&mut self) -> &mut Vec<u8> {$/;"	f
deref_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deref_mut(&mut self) -> &mut [u8] {$/;"	f
derive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^mod derive {$/;"	m
derive_deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/lib.rs	/^pub fn derive_deserialize(input: TokenStream) -> TokenStream {$/;"	f
derive_display_order	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn derive_display_order(&mut self) {$/;"	f
derive_serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/lib.rs	/^pub fn derive_serialize(input: TokenStream) -> TokenStream {$/;"	f
desc	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn desc(kind: SortByKind) -> SortBy {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<&'a BStr, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<BString, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^                fn deserialize<__D>(__deserializer: __D) -> #serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^                fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn deserialize<__D>(__deserializer: __D) -> _serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Number, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberFromString, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberKey, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<RawKey, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Value, D::Error>$/;"	f
deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize_adjacently_tagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_adjacently_tagged_enum($/;"	f
deserialize_aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn deserialize_aliases(&self) -> Vec<String> {$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! deserialize_any {$/;"	d
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_custom_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_custom_identifier($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	d
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_enum($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_externally_tagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_externally_tagged_enum($/;"	f
deserialize_externally_tagged_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_externally_tagged_newtype_variant($/;"	f
deserialize_externally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_externally_tagged_variant($/;"	f
deserialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_from(type_from: &syn::Type) -> Fragment {$/;"	f
deserialize_generated_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_generated_identifier($/;"	f
deserialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_identifier($/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_ignored_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn deserialize_in_place<__D>(__deserializer: __D, __place: &mut Self) -> _serde::export::Result<(), __D::Error>$/;"	f
deserialize_in_place_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_in_place_body(_cont: &Container, _params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_in_place_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_in_place_body(cont: &Container, params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_integer_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! deserialize_integer_key {$/;"	d
deserialize_integer_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^macro_rules! deserialize_integer_key {$/;"	d
deserialize_internally_tagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_internally_tagged_enum($/;"	f
deserialize_internally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_internally_tagged_variant($/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_map($/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_map_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_map_in_place($/;"	f
deserialize_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn deserialize_name(&self) -> String {$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_newtype_struct($/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, name: &str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_newtype_struct_in_place(params: &Parameters, field: &Field) -> TokenStream {$/;"	f
deserialize_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! deserialize_number {$/;"	d
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_other	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_prim_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_prim_number<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_prim_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! deserialize_prim_number {$/;"	d
deserialize_prim_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^macro_rules! deserialize_prim_number {$/;"	d
deserialize_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_raw_value<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_seq($/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_seq_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_seq_in_place($/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct_as_map_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_as_map_visitor($/;"	f
deserialize_struct_as_struct_in_place_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_as_struct_in_place_visitor($/;"	f
deserialize_struct_as_struct_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_as_struct_visitor($/;"	f
deserialize_struct_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_struct_in_place($/;"	f
deserialize_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_try_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_try_from(type_try_from: &syn::Type) -> Fragment {$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_tuple($/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	f
deserialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_tuple_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_tuple_in_place($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_unit_struct(params: &Parameters, cattrs: &attr::Container) -> Fragment {$/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_untagged_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_untagged_enum($/;"	f
deserialize_untagged_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_untagged_newtype_variant($/;"	f
deserialize_untagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn deserialize_untagged_variant($/;"	f
deserialize_value_ref_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^macro_rules! deserialize_value_ref_number {$/;"	d
deserialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
device_num	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/util.rs	/^pub fn device_num<P: AsRef<Path>>(_: P) -> io::Result<u64> {$/;"	f
device_num	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/util.rs	/^pub fn device_num<P: AsRef<Path>>(path: P) -> io::Result<u64> {$/;"	f
device_num	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn device_num<P: AsRef<Path>>(_: P) -> io::Result<u64> {$/;"	f
device_num	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn device_num<P: AsRef<Path>>(path: P) -> io::Result<u64> {$/;"	f
dfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    pub fn dfa(mut self, yes: bool) -> Self {$/;"	f
dfa_size_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn dfa_size_limit($/;"	f
dfa_size_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn dfa_size_limit(&self) -> Result<Option<usize>> {$/;"	f
did_you_mean	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(_: &str, _: I) -> Option<&'a str>$/;"	f
did_you_mean	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(v: &str, possible_values: I) -> Option<&'a str>$/;"	f
did_you_mean_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn did_you_mean_error($/;"	f
did_you_mean_flag_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^pub fn did_you_mean_flag_suffix<'z, T, I>($/;"	f
did_you_mean_value_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^pub fn did_you_mean_value_suffix<'z, T, I>(arg: &str, values: I) -> (String, Option<&'z str>)$/;"	f
dimensions	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn dimensions() -> Option<(usize, usize)> {$/;"	f
disable_recursion_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn disable_recursion_limit(&mut self) {$/;"	f
discard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn discard(&mut self) {$/;"	f
discard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn discard(&mut self);$/;"	f
disp_ord	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn disp_ord(&self) -> usize {$/;"	f
disp_ord	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn disp_ord(&self) -> usize;$/;"	f
disp_ord	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn disp_ord(&self) -> usize {$/;"	f
disp_ord	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn disp_ord(&self) -> usize {$/;"	f
disp_ord	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn disp_ord(&self) -> usize {$/;"	f
display	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn display(&mut self, v: &fmt::Display) -> Result<(), Error> {$/;"	f
display_mult	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn display_mult() {$/;"	f
display_order	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	f
display_order	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	f
display_required	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn display_required() {$/;"	f
display_val_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn display_val_names() {$/;"	f
display_val_names_req	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn display_val_names_req() {$/;"	f
dot_matches_new_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn dot_matches_new_line($/;"	f
drain_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn drain_bytes<R>(&mut self, range: R) -> DrainBytes$/;"	f
drop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^        fn drop(&mut self) {$/;"	f
drop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    fn drop(&mut self) {$/;"	f
drop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    fn drop(&mut self) {$/;"	f
drop	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^        fn drop(&mut self) {$/;"	f
dup_one	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn dup_one(self) -> (Self, Self) {$/;"	f
duplicate_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn duplicate_field(field: &'static str) -> Self {$/;"	f
eat_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn eat_char(&mut self) {$/;"	f
effective_style	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
effective_style	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn empty() -> FreqyPacked {$/;"	f
empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn empty() -> Self {$/;"	f
empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn empty() -> Self {$/;"	f
empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty() {$/;"	f
empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn empty() -> Gitignore {$/;"	f
empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn empty() {$/;"	f
empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn empty() -> Override {$/;"	f
empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn empty() -> Types {$/;"	f
empty_file	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty_file() {$/;"	f
empty_file_follow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty_file_follow() {$/;"	f
empty_follow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty_follow() {$/;"	f
empty_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn empty_value<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	f
empty_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn empty_values(mut self, ev: bool) -> Self {$/;"	f
enabled	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn enabled(&self, _: &Metadata) -> bool {$/;"	f
enabled	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool;$/;"	f
enabled	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/logger.rs	/^    fn enabled(&self, _: &log::Metadata) -> bool {$/;"	f
encode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
encoding	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn encoding(&self) -> Result<EncodingMode> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn end(&self) -> usize {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn end(&self) -> usize {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn end(&mut self) -> Result<()> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end(self) -> Result<()> {$/;"	f
end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	f
end_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_array<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
end_array_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_array_value<W>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn end_map(&mut self) -> Result<()> {$/;"	f
end_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_object<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
end_object_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_object_key<W>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_object_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_object_value<W>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_raw_buffering	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
end_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn end_seq(&mut self) -> Result<()> {$/;"	f
end_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn end_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
ends_with_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn ends_with_str<B: AsRef<[u8]>>(&self, suffix: B) -> bool {$/;"	f
entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn entry(&mut self, arg: &'a str) -> Entry<&'a str, MatchedArg> {$/;"	f
entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn entry(&mut self, key: usize) -> Entry<V> {$/;"	f
entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn entry<S>(&mut self, key: S) -> Entry$/;"	f
ents	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn ents(&self) -> &[DirEntry] {$/;"	f
enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        struct enum identifier ignored_any$/;"	s
enum_from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^fn enum_from_ast<'a>($/;"	f
env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)>;$/;"	f
env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn env(self, name: &'a str) -> Self {$/;"	f
env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env_allows_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn env_allows_color(&self) -> bool {$/;"	f
env_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn env_os(mut self, name: &'a OsStr) -> Self {$/;"	f
env_var	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    fn env_var(name: &'static str) -> Option<usize> {$/;"	f
eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn eof() -> Self {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn eq(&self, other: &$lhs) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn eq(&self, other: &$rhs) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn eq(&self, other: &BStr) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn eq(&self, other: &BString) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    fn eq(&self, other: &Arg<'n, 'e>) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs	/^    fn eq(&self, other: &Base<'n, 'e>) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn eq(&self, other: &FlagBuilder<'n, 'e>) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn eq(&self, other: &OptBuilder<'n, 'e>) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn eq(&self, other: &PosBuilder<'n, 'e>) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn eq(&self, other: &Key<'ko>) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn eq(&self, other: &Level) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn eq(&self, other: &LevelFilter) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn eq(&self, other: &Char) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn eq(&self, other: &char) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^                fn eq(&self, other: &$ty) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^                fn eq(&self, other: &Value) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &Value) -> bool {$/;"	f
eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	f
eq_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_bool(value: &Value, other: bool) -> bool {$/;"	f
eq_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_f64(value: &Value, other: f64) -> bool {$/;"	f
eq_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_i64(value: &Value, other: i64) -> bool {$/;"	f
eq_ignore_ascii_case	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^fn eq_ignore_ascii_case(a: &str, b: &str) -> bool {$/;"	f
eq_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_str(value: &Value, other: &str) -> bool {$/;"	f
eq_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^fn eq_u64(value: &Value, other: u64) -> bool {$/;"	f
err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^macro_rules! err {$/;"	d
err	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    macro_rules! err {$/;"	d
err_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^macro_rules! err_message {$/;"	d
error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    pub fn error<T>(&self, msg: T) -> Format<T>$/;"	f
error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! error {$/;"	d
error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn error(&self, reason: ErrorCode) -> Error {$/;"	f
error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn error<'de, R, T>(read: &R, reason: ErrorCode) -> Result<T>$/;"	f
error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/config.rs	/^    fn error() {$/;"	f
error	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn error(&self) -> Option<&Error> {$/;"	f
error_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn error_len(&self) -> Option<usize> {$/;"	f
error_spanned_by	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {$/;"	f
errored	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^pub fn errored() -> bool {$/;"	f
errored	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn errored() {$/;"	f
errored_both	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn errored_both() {$/;"	f
errored_partial	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn errored_partial() {$/;"	f
errored_partial_and_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn errored_partial_and_ignore() {$/;"	f
errs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn errs(&self) -> &[Error] {$/;"	f
escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^pub fn escape(text: &str) -> String {$/;"	f
escape_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^        fn escape_byte(byte: u8) -> String {$/;"	f
escape_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^        fn escape_bytes(bytes: &[u8]) -> String {$/;"	f
escape_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn escape_help(string: &str) -> String {$/;"	f
escape_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/fish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn escape_value(string: &str) -> String {$/;"	f
exclude_lowest	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn exclude_lowest() {$/;"	f
excludes_file_default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^fn excludes_file_default() -> Option<PathBuf> {$/;"	f
exec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^    pub fn exec($/;"	f
exec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    pub fn exec($/;"	f
exec_	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^    fn exec_(&mut self, mut at: InputAt, end: usize) -> bool {$/;"	f
exec_	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    fn exec_($/;"	f
exec_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn exec_at($/;"	f
exec_at_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn exec_at_reverse($/;"	f
exec_backtrack	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn exec_backtrack($/;"	f
exec_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn exec_byte($/;"	f
exec_dfa_reverse_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn exec_dfa_reverse_suffix($/;"	f
exec_nfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn exec_nfa($/;"	f
exec_pikevm	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn exec_pikevm($/;"	f
exit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn exit(&self) -> ! {$/;"	f
expand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn expand(&self, replacement: &[u8], dst: &mut Vec<u8>) {$/;"	f
expand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn expand(&self, replacement: &str, dst: &mut String) {$/;"	f
expand_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^pub fn expand_bytes($/;"	f
expand_derive_deserialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^pub fn expand_derive_deserialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expand_derive_serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^pub fn expand_derive_serialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expand_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^pub fn expand_str($/;"	f
expand_tilde	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^fn expand_tilde(path: &str) -> String {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
explicit_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn explicit_ignore() {$/;"	f
explicit_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn explicit_ignore() {$/;"	f
explicit_ignore_exclusive_use	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn explicit_ignore_exclusive_use() {$/;"	f
expr_is_missing	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn expr_is_missing(field: &Field, cattrs: &attr::Container) -> Fragment {$/;"	f
extend	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	f
f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn f64(&mut self, v: f64) -> Result<(), Error>;$/;"	f
f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	f
f64_from_parts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn f64_from_parts($/;"	f
fast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn fast(slice: &[u8]) -> Result<(), Utf8Error> {$/;"	f
ffi	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^mod ffi {$/;"	m
fg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn fg(&self) -> Option<&Color> {$/;"	f
field_i	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn field_i(i: usize) -> Ident {$/;"	f
fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn fields(&self) -> Fields {$/;"	f
fields_from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^fn fields_from_ast<'a>($/;"	f
fields_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn fields_with<F: FnMut(char) -> bool>(&self, f: F) -> FieldsWith<F> {$/;"	f
file	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file(&mut self, file: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	f
file	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file(&self) -> Option<&'a str> {$/;"	f
file_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn file_name(&self) -> &OsStr {$/;"	f
file_name	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/pathutil.rs	/^pub fn file_name<'a, P: AsRef<Path> + ?Sized>($/;"	f
file_name	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn file_name(&self) -> &OsStr {$/;"	f
file_name	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn file_name(&self) -> &OsStr {$/;"	f
file_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn file_separator(&self) -> Result<Option<Vec<u8>>> {$/;"	f
file_static	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file_static(&mut self, file: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	f
file_static	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file_static(&self) -> Option<&'static str> {$/;"	f
file_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn file_type(&self) -> fs::FileType {$/;"	f
file_type	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn file_type(&self) -> FileType {$/;"	f
file_type	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn file_type(&self) -> Option<FileType> {$/;"	f
file_type	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn file_type(&self) -> Option<FileType> {$/;"	f
file_type_def	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn file_type_def(&self) -> Option<&FileTypeDef> {$/;"	f
files	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn files(args: &Args) -> Result<bool> {$/;"	f
files_parallel	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn files_parallel(args: &Args) -> Result<bool> {$/;"	f
fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^            fn fill(&self, slot: &mut Slot) -> Result<(), Error> {$/;"	f
fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill(&self, slot: &mut Slot) -> Result<(), Error> {$/;"	f
fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill(&self, slot: &mut Slot) -> Result<(), Error>;$/;"	f
fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    pub fn fill(&mut self, value: Value) -> Result<(), Error> {$/;"	f
fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn fill(&mut self, goto: InstPtr) {$/;"	f
fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn fill(&mut self, hole: Hole, goto: InstPtr) {$/;"	f
fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn fill(&self, goto: InstPtr) -> Inst {$/;"	f
fill_in	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs	/^    pub fn fill_in(&mut self) {$/;"	f
fill_in_global_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    fn fill_in_global_values($/;"	f
fill_multiple_times_panics	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill_multiple_times_panics() {$/;"	f
fill_split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn fill_split($/;"	f
fill_split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn fill_split(&mut self, goto1: InstPtr, goto2: InstPtr) {$/;"	f
fill_to_next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn fill_to_next(&mut self, hole: Hole) {$/;"	f
fill_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill_value() {$/;"	f
filter	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn filter() {$/;"	f
filter_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn filter_entry(self, predicate: P) -> FilterEntry<Self, P> {$/;"	f
filter_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn filter_entry<P>(self, predicate: P) -> FilterEntry<Self, P>$/;"	f
filter_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn filter_entry() {$/;"	f
filter_entry	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn filter_entry<P>(&mut self, filter: P) -> &mut WalkBuilder$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find<B: AsRef<[u8]>>(&self, needle: B) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn find<B: AsRef<[u8]>>(&self, haystack: B) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^    macro_rules! find {$/;"	d
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn find(&self, text: &[u8]) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn find(&self, _: &[u8]) -> Option<(usize, usize)> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn find<'t>(&self, text: &'t [u8]) -> Option<Match<'t>> {$/;"	f
find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn find<'t>(&self, text: &'t str) -> Option<Match<'t>> {$/;"	f
find_any_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn find_any_arg(&self, name: &str) -> Option<&AnyArg<'a, 'b>> {$/;"	f
find_any_by_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_any_by_name {$/;"	d
find_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn find_at(&self, text: &[u8], start: usize) -> Option<(usize, usize)> {$/;"	f
find_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn find_at(&self, text: &str, start: usize) -> Option<(usize, usize)> {$/;"	f
find_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn find_at<'t>($/;"	f
find_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn find_at($/;"	f
find_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn find_at<'t>($/;"	f
find_by_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_by_name {$/;"	d
find_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_byte(&self, byte: u8) -> Option<usize> {$/;"	f
find_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/find_byte.rs	/^pub fn find_byte(needle: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
find_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
find_candidate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn find_candidate($/;"	f
find_cap_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^fn find_cap_ref<T: ?Sized + AsRef<[u8]>>($/;"	f
find_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_char(&self, ch: char) -> Option<usize> {$/;"	f
find_dfa_anchored_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn find_dfa_anchored_reverse($/;"	f
find_dfa_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn find_dfa_forward($/;"	f
find_dfa_reverse_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn find_dfa_reverse_suffix($/;"	f
find_end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn find_end(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	f
find_end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn find_end(&self, _: &[u8]) -> Option<(usize, usize)> {$/;"	f
find_flag_by_long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_flag_by_long {$/;"	d
find_flag_by_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_flag_by_short {$/;"	d
find_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_from {$/;"	d
find_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_iter<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
find_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t [u8]) -> Matches<'r, 't> {$/;"	f
find_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn find_iter(self, text: &Self::Text) -> Matches<Self> {$/;"	f
find_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t str) -> Matches<'r, 't> {$/;"	f
find_large	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_large($/;"	f
find_large_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_large_imp($/;"	f
find_literals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn find_literals($/;"	f
find_nfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn find_nfa($/;"	f
find_non_ascii_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_non_ascii_byte(&self) -> Option<usize> {$/;"	f
find_not_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn find_not_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
find_opt_by_long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_opt_by_long {$/;"	d
find_opt_by_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_opt_by_short {$/;"	d
find_small	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_small($/;"	f
find_small_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn find_small_imp($/;"	f
find_start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn find_start(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	f
find_start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn find_start(&self, _: &[u8]) -> Option<(usize, usize)> {$/;"	f
find_subcmd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! find_subcmd {$/;"	d
find_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn find_subcommand(&'b self, sc: &str) -> Option<&'b App<'a, 'b>> {$/;"	f
find_valid_up_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn find_valid_up_to(slice: &[u8], rejected_at: usize) -> Utf8Error {$/;"	f
find_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn find_with($/;"	f
findpos	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^                    unsafe fn findpos($/;"	f
first_non_ascii_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^pub fn first_non_ascii_byte(slice: &[u8]) -> usize {$/;"	f
first_non_ascii_byte_fallback	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn first_non_ascii_byte_fallback(slice: &[u8]) -> usize {$/;"	f
first_non_ascii_byte_mask	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn first_non_ascii_byte_mask(mask: usize) -> usize {$/;"	f
first_non_ascii_byte_slow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn first_non_ascii_byte_slow($/;"	f
first_non_ascii_byte_sse2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn first_non_ascii_byte_sse2(slice: &[u8]) -> usize {$/;"	f
first_path_not_symlink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn first_path_not_symlink() {$/;"	f
fix_position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn fix_position(&self, err: Error) -> Error {$/;"	f
flag	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn flag(long_name: &'static str, value_name: &'static str) -> RGArg {$/;"	f
flag_after_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_after_context(args: &mut Vec<RGArg>) {$/;"	f
flag_auto_hybrid_regex	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_auto_hybrid_regex(args: &mut Vec<RGArg>) {$/;"	f
flag_before_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_before_context(args: &mut Vec<RGArg>) {$/;"	f
flag_binary	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_binary(args: &mut Vec<RGArg>) {$/;"	f
flag_block_buffered	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_block_buffered(args: &mut Vec<RGArg>) {$/;"	f
flag_byte_offset	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_byte_offset(args: &mut Vec<RGArg>) {$/;"	f
flag_case_sensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_case_sensitive(args: &mut Vec<RGArg>) {$/;"	f
flag_color	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_color(args: &mut Vec<RGArg>) {$/;"	f
flag_colors	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_colors(args: &mut Vec<RGArg>) {$/;"	f
flag_column	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_column(args: &mut Vec<RGArg>) {$/;"	f
flag_context	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_context(args: &mut Vec<RGArg>) {$/;"	f
flag_context_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_context_separator(args: &mut Vec<RGArg>) {$/;"	f
flag_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_count(args: &mut Vec<RGArg>) {$/;"	f
flag_count_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_count_matches(args: &mut Vec<RGArg>) {$/;"	f
flag_crlf	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_crlf(args: &mut Vec<RGArg>) {$/;"	f
flag_debug	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_debug(args: &mut Vec<RGArg>) {$/;"	f
flag_dfa_size_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_dfa_size_limit(args: &mut Vec<RGArg>) {$/;"	f
flag_encoding	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_encoding(args: &mut Vec<RGArg>) {$/;"	f
flag_engine	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_engine(args: &mut Vec<RGArg>) {$/;"	f
flag_file	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_file(args: &mut Vec<RGArg>) {$/;"	f
flag_files	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_files(args: &mut Vec<RGArg>) {$/;"	f
flag_files_with_matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_files_with_matches(args: &mut Vec<RGArg>) {$/;"	f
flag_files_without_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_files_without_match(args: &mut Vec<RGArg>) {$/;"	f
flag_fixed_strings	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_fixed_strings(args: &mut Vec<RGArg>) {$/;"	f
flag_follow	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_follow(args: &mut Vec<RGArg>) {$/;"	f
flag_glob	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_glob(args: &mut Vec<RGArg>) {$/;"	f
flag_glob_case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_glob_case_insensitive(args: &mut Vec<RGArg>) {$/;"	f
flag_heading	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_heading(args: &mut Vec<RGArg>) {$/;"	f
flag_hidden	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_hidden(args: &mut Vec<RGArg>) {$/;"	f
flag_iglob	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_iglob(args: &mut Vec<RGArg>) {$/;"	f
flag_ignore_case	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_ignore_case(args: &mut Vec<RGArg>) {$/;"	f
flag_ignore_file	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_ignore_file(args: &mut Vec<RGArg>) {$/;"	f
flag_ignore_file_case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_ignore_file_case_insensitive(args: &mut Vec<RGArg>) {$/;"	f
flag_include_zero	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_include_zero(args: &mut Vec<RGArg>) {$/;"	f
flag_invert_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_invert_match(args: &mut Vec<RGArg>) {$/;"	f
flag_json	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_json(args: &mut Vec<RGArg>) {$/;"	f
flag_line_buffered	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_line_buffered(args: &mut Vec<RGArg>) {$/;"	f
flag_line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_line_number(args: &mut Vec<RGArg>) {$/;"	f
flag_line_regexp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_line_regexp(args: &mut Vec<RGArg>) {$/;"	f
flag_max_columns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_max_columns(args: &mut Vec<RGArg>) {$/;"	f
flag_max_columns_preview	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_max_columns_preview(args: &mut Vec<RGArg>) {$/;"	f
flag_max_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_max_count(args: &mut Vec<RGArg>) {$/;"	f
flag_max_depth	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_max_depth(args: &mut Vec<RGArg>) {$/;"	f
flag_max_filesize	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_max_filesize(args: &mut Vec<RGArg>) {$/;"	f
flag_mmap	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_mmap(args: &mut Vec<RGArg>) {$/;"	f
flag_multiline	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_multiline(args: &mut Vec<RGArg>) {$/;"	f
flag_multiline_dotall	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_multiline_dotall(args: &mut Vec<RGArg>) {$/;"	f
flag_no_config	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_config(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore_dot	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore_dot(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore_exclude	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore_exclude(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore_files	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore_files(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore_global	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore_global(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore_messages	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore_messages(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore_parent	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore_parent(args: &mut Vec<RGArg>) {$/;"	f
flag_no_ignore_vcs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_ignore_vcs(args: &mut Vec<RGArg>) {$/;"	f
flag_no_messages	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_messages(args: &mut Vec<RGArg>) {$/;"	f
flag_no_pcre2_unicode	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_pcre2_unicode(args: &mut Vec<RGArg>) {$/;"	f
flag_no_require_git	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_require_git(args: &mut Vec<RGArg>) {$/;"	f
flag_no_unicode	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_no_unicode(args: &mut Vec<RGArg>) {$/;"	f
flag_null	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_null(args: &mut Vec<RGArg>) {$/;"	f
flag_null_data	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_null_data(args: &mut Vec<RGArg>) {$/;"	f
flag_one_file_system	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_one_file_system(args: &mut Vec<RGArg>) {$/;"	f
flag_only_matching	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_only_matching(args: &mut Vec<RGArg>) {$/;"	f
flag_passthru	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_passthru(args: &mut Vec<RGArg>) {$/;"	f
flag_path_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_path_separator(args: &mut Vec<RGArg>) {$/;"	f
flag_pcre2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_pcre2(args: &mut Vec<RGArg>) {$/;"	f
flag_pcre2_version	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_pcre2_version(args: &mut Vec<RGArg>) {$/;"	f
flag_pre	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_pre(args: &mut Vec<RGArg>) {$/;"	f
flag_pre_glob	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_pre_glob(args: &mut Vec<RGArg>) {$/;"	f
flag_pretty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_pretty(args: &mut Vec<RGArg>) {$/;"	f
flag_quiet	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_quiet(args: &mut Vec<RGArg>) {$/;"	f
flag_regex_size_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_regex_size_limit(args: &mut Vec<RGArg>) {$/;"	f
flag_regexp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_regexp(args: &mut Vec<RGArg>) {$/;"	f
flag_replace	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_replace(args: &mut Vec<RGArg>) {$/;"	f
flag_search_zip	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_search_zip(args: &mut Vec<RGArg>) {$/;"	f
flag_smart_case	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_smart_case(args: &mut Vec<RGArg>) {$/;"	f
flag_sort	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_sort(args: &mut Vec<RGArg>) {$/;"	f
flag_sort_files	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_sort_files(args: &mut Vec<RGArg>) {$/;"	f
flag_sortr	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_sortr(args: &mut Vec<RGArg>) {$/;"	f
flag_stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_stats(args: &mut Vec<RGArg>) {$/;"	f
flag_text	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_text(args: &mut Vec<RGArg>) {$/;"	f
flag_threads	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_threads(args: &mut Vec<RGArg>) {$/;"	f
flag_trim	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_trim(args: &mut Vec<RGArg>) {$/;"	f
flag_type	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_type(args: &mut Vec<RGArg>) {$/;"	f
flag_type_add	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_type_add(args: &mut Vec<RGArg>) {$/;"	f
flag_type_clear	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_type_clear(args: &mut Vec<RGArg>) {$/;"	f
flag_type_list	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_type_list(args: &mut Vec<RGArg>) {$/;"	f
flag_type_not	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_type_not(args: &mut Vec<RGArg>) {$/;"	f
flag_unrestricted	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_unrestricted(args: &mut Vec<RGArg>) {$/;"	f
flag_vimgrep	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_vimgrep(args: &mut Vec<RGArg>) {$/;"	f
flag_with_filename	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_with_filename(args: &mut Vec<RGArg>) {$/;"	f
flag_word_regexp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn flag_word_regexp(args: &mut Vec<RGArg>) {$/;"	f
flagbuilder_display	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display() {$/;"	f
flagbuilder_display_multiple_aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_multiple_aliases() {$/;"	f
flagbuilder_display_single_alias	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_single_alias() {$/;"	f
flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn flags(&self) -> Iter<FlagBuilder<'a, 'b>> {$/;"	f
flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn flags(&self) -> StateFlags {$/;"	f
flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn flatten(&self) -> bool {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn flush(&self) {}$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn flush(&self);$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn flush(&mut self) -> Result<()>;$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/logger.rs	/^    fn flush(&self) {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    fn fmt(&self, f: &mut std_fmt::Formatter) -> std_fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^            fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/symbol.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn fmt(&self, _formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn fmt($/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt_primitives	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	d
fmt_support	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^mod fmt_support {$/;"	m
follow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn follow(&self, mut dent: DirEntry) -> Result<DirEntry> {$/;"	f
follow_epsilons	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn follow_epsilons($/;"	f
follow_links	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn follow_links(mut self, yes: bool) -> Self {$/;"	f
follow_links	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn follow_links(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
for_byte_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_line<F>(self, mut for_each_line: F) -> io::Result<()>$/;"	f
for_byte_line_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_line_with_terminator<F>($/;"	f
for_byte_record	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_record<F>($/;"	f
for_byte_record_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn for_byte_record_with_terminator<F>($/;"	f
format	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    fn format(&self) -> &T {$/;"	f
format	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    fn format(&self) -> ANSIString {$/;"	f
format_escaped_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn format_escaped_str<W, F>(writer: &mut W, formatter: &mut F, value: &str) -> io::Result<()>$/;"	f
format_escaped_str_contents	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn format_escaped_str_contents<W, F>($/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn forward(needle: &[u8]) -> Freqy {$/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn forward($/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn forward(needle: &[u8], kind: SuffixKind) -> Suffix {$/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn forward(needle: &'b [u8]) -> TwoWay<'b> {$/;"	f
forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    pub fn forward($/;"	f
forward_additional	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn forward_additional() {$/;"	f
forward_additional	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn forward_additional() {$/;"	f
forward_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn forward_lossy() {$/;"	f
forward_many	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    pub fn forward_many($/;"	f
forward_search	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^unsafe fn forward_search<F: Fn(u8) -> bool>($/;"	f
forward_to_deserialize_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	d
forward_to_deserialize_any_helper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	d
forward_to_deserialize_any_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	d
forward_to_deserialize_other	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	d
forward_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn forward_ucd() {$/;"	f
forward_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn forward_ucd() {$/;"	f
forward_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn forward_ucd() {$/;"	f
forwarded_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	d
fractional_seconds	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^fn fractional_seconds(duration: Duration) -> f64 {$/;"	f
freq_rank	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^fn freq_rank(b: u8) -> usize {$/;"	f
freqy_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn freqy_forward() {$/;"	f
freqy_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn freqy_reverse() {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a BStr) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a BStr) -> Cow<'a, BStr> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a [u8]) -> &'a BStr {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a [u8]) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a str) -> &'a BStr {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: &'a str) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: BString) -> Cow<'a, BStr> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: BString) -> Vec<u8> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: String) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from(s: Vec<u8>) -> BString {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn from(mut yaml: &'a Yaml) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn from(mut a: Arg<'a, 'b>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn from(mut a: Arg<'n, 'e>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn from(b: &'a BTreeMap<Yaml, Yaml>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn from(g: &'z ArgGroup<'a>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    fn from(e: io::Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    fn from(e: std_fmt::Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        fn from(err: Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        fn from(err: io::Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    fn from(_: Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    fn from(_: fmt::Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn from(s: &'k str) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: &'v str) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: bool) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: char) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: f32) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: f64) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i16) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i32) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i64) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i8) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: isize) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u16) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u32) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u64) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u8) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: usize) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^    fn from(x: &'a str) -> Ref<'a> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^    fn from(x: usize) -> Ref<'static> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn from(c: Option<char>) -> Char {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn from(c: char) -> Char {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn from(exec: Exec) -> Regex {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn from(m: Match<'t>) -> Range<usize> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    fn from(exec: Exec) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn from(exec: Exec) -> Regex {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn from(m: Match<'t>) -> &'t str {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn from(m: Match<'t>) -> Range<usize> {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn from(j: Error) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^                fn from(i: $ty) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^                fn from(u: $ty) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        fn from(i: i128) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^        fn from(u: u128) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn from(value: ParserNumber) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^                fn from(n: $ty) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from((): ()) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: &'a [T]) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: &str) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: Cow<'a, str>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: Map<String, Value>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: String) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: Vec<T>) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: bool) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: f32) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from(f: f64) -> Self {$/;"	f
from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn from(walk_err: Error) -> io::Error {$/;"	f
from	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn from(&self) -> Option<&Path> {$/;"	f
from	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn from(err: io::Error) -> Error {$/;"	f
from	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn from(it: WalkDir) -> WalkEventIter {$/;"	f
from_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    pub fn from_arg(mut a: Arg<'n, 'e>, idx: u64) -> Self {$/;"	f
from_arg_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    pub fn from_arg_ref(a: &Arg<'n, 'e>, idx: u64) -> Self {$/;"	f
from_argmatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^        fn from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Self;$/;"	f
from_ascii	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn from_ascii(ascii: &[u8]) -> OsString {$/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^    pub fn from_ast($/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn from_ast($/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, item: &syn::DeriveInput) -> Self {$/;"	f
from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, variant: &syn::Variant) -> Self {$/;"	f
from_attrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn from_attrs($/;"	f
from_borrowed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn from_borrowed(json: &str) -> &Self {$/;"	f
from_bounds	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f
from_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self {$/;"	f
from_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self;$/;"	f
from_debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        pub fn from_debug<T>(value: &'v T) -> Self$/;"	f
from_display	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        pub fn from_display<T>(value: &'v T) -> Self$/;"	f
from_entry	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn from_entry($/;"	f
from_entry_os	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn from_entry_os($/;"	f
from_escape_table	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn from_escape_table(escape: u8, byte: u8) -> CharEscape {$/;"	f
from_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn from_f64(f: f64) -> Option<Number> {$/;"	f
from_fill	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    pub fn from_fill<T>(value: &'v T) -> Self$/;"	f
from_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i16(n: i16) -> Option<Self>;$/;"	f
from_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i32(n: i32) -> Option<Self>;$/;"	f
from_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	f
from_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_i8(n: i8) -> Option<Self>;$/;"	f
from_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^macro_rules! from_integer {$/;"	d
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = &'a BStr>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = &'a [u8]>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = &'a str>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = BString>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = char>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn from_iter<T: IntoIterator<Item = u8>>(iter: T) -> BString {$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn from_iter<T>(iter: T) -> Self$/;"	f
from_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/from.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {$/;"	f
from_os_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn from_os_str(os_str: &OsStr) -> Option<&[u8]> {$/;"	f
from_os_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_os_str_lossy<'a>(os_str: &'a OsStr) -> Cow<'a, [u8]> {$/;"	f
from_os_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_os_string(os_str: OsString) -> Result<Vec<u8>, OsString> {$/;"	f
from_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn from_owned(json: Box<str>) -> Box<Self> {$/;"	f
from_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn from_path(path: &Path) -> Option<&[u8]> {$/;"	f
from_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn from_path($/;"	f
from_path_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_path_buf(path: PathBuf) -> Result<Vec<u8>, PathBuf> {$/;"	f
from_path_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_path_lossy<'a>(path: &'a Path) -> Cow<'a, [u8]> {$/;"	f
from_primitive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn from_primitive(value: Primitive<'v>) -> Self {$/;"	f
from_reader	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn from_reader(reader: R) -> Self {$/;"	f
from_reader	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub fn from_reader<R, T>(rdr: R) -> Result<T>$/;"	f
from_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn from_slice<B: AsRef<[u8]>>(bytes: B) -> Vec<u8> {$/;"	f
from_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn from_slice(bytes: &'a [u8]) -> Self {$/;"	f
from_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub fn from_slice<'a, T>(v: &'a [u8]) -> Result<T>$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^            fn from_str(s: &str) -> ::std::result::Result<Self,Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    pub fn from_str(key: &'k str) -> Self {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_str(level: &str) -> Result<Level, Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_str(level: &str) -> Result<LevelFilter, Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^    fn from_str(rename_all_str: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn from_str(s: &str) -> result::Result<Self, Self::Err> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn from_str(s: &'a str) -> Self {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^pub fn from_str<'a, T>(s: &'a str) -> Result<T>$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn from_str(s: &str) -> Result<Value, Error> {$/;"	f
from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_str(s: &str) -> Result<Color, ParseColorError> {$/;"	f
from_str_numeric	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_str_numeric(s: &str) -> Result<Color, ParseColorError> {$/;"	f
from_stream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_stream(stream: &StandardStream) -> StandardStreamLock {$/;"	f
from_stream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn from_stream(stream: &StandardStream) -> StandardStreamLock<'_> {$/;"	f
from_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    pub fn from_string(json: String) -> Result<Box<Self>, Error> {$/;"	f
from_string_unchecked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn from_string_unchecked(n: String) -> Self {$/;"	f
from_sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn from_sval(_: sval::value::Error) -> Self {$/;"	f
from_sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        pub fn from_sval<T>(value: &'v T) -> Self$/;"	f
from_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^fn from_trait<'de, R, T>(read: R) -> Result<T>$/;"	f
from_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u16(n: u16) -> Option<Self>;$/;"	f
from_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u32(n: u32) -> Option<Self>;$/;"	f
from_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	f
from_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^            fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^        fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^    fn from_u8(n: u8) -> Option<Self>;$/;"	f
from_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn from_usage(u: &'a str) -> Self {$/;"	f
from_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    pub fn from_usage(usage: &'a str) -> Self {$/;"	f
from_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_usize(u: usize) -> Option<Level> {$/;"	f
from_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_usize(u: usize) -> Option<LevelFilter> {$/;"	f
from_utf8_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f
from_utf8_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f
from_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^pub fn from_value<T>(value: Value) -> Result<T, Error>$/;"	f
from_walkdir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn from_walkdir(err: walkdir::Error) -> Error {$/;"	f
from_yaml	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn from_yaml(yaml: &'a Yaml) -> App<'a, 'a> {$/;"	f
from_yaml	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn from_yaml(y: &BTreeMap<Yaml, Yaml>) -> Arg {$/;"	f
from_yaml	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn from_yaml(y: &'a Yaml) -> ArgGroup<'a> {$/;"	f
from_yaml	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs	/^    pub fn from_yaml(yaml: &Yaml) -> App {$/;"	f
full_byte_classes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn full_byte_classes() {$/;"	f
ge	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn ge(&self, other: &Level) -> bool {$/;"	f
ge	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn ge(&self, other: &LevelFilter) -> bool {$/;"	f
gen_completions	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn gen_completions<T: Into<OsString>, S: Into<String>>($/;"	f
gen_completions	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn gen_completions(&mut self, for_shell: Shell, od: OsString) {$/;"	f
gen_completions_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn gen_completions_to<W: Write, S: Into<String>>($/;"	f
gen_completions_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn gen_completions_to<W: Write>(&mut self, for_shell: Shell, buf: &mut W) {$/;"	f
gen_fish_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/fish.rs	/^fn gen_fish_inner(root_command: &str, comp_gen: &FishGen, subcommand: &str, buffer: &mut String) {$/;"	f
generate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs	/^    pub fn generate<W: Write>(&self, for_shell: Shell, buf: &mut W) {$/;"	f
generate_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/fish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_work	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn generate_work($/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn get(&self, arg: &str) -> Option<&MatchedArg> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn get(&self, key: usize) -> Option<&V> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^    pub fn get<F>(&'static self, builder: F) -> &T$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^    pub fn get<F>(&'static self, f: F) -> &T$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn get() {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn get() {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn get(&self) -> &'a str {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^pub fn get() -> usize {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn get(&mut self, key: SuffixCacheKey, pc: InstPtr) -> Option<InstPtr> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn get(&self, i: usize) -> Option<(usize, usize)> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn get(&self, i: usize) -> Option<(usize, usize)> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get(&self) -> bool {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get(self) -> Option<T> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get(self) -> Vec<T> {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get(&self) -> &Value {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get<Q>(&self, key: &Q) -> Option<&Value>$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    pub fn get(&self) -> &str {$/;"	f
get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn get<I: Index>(&self, index: I) -> Option<&Value> {$/;"	f
get_all_subcommand_paths	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs	/^pub fn get_all_subcommand_paths(p: &Parser, first: bool) -> Vec<String> {$/;"	f
get_args_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn get_args_of(p: &Parser) -> String {$/;"	f
get_args_tag	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^fn get_args_tag(p: &Parser, incl_reqs: bool) -> Option<String> {$/;"	f
get_bin_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn get_bin_name(&self) -> Option<&str> {$/;"	f
get_deferred_dir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn get_deferred_dir(&mut self) -> Option<DirEntry> {$/;"	f
get_lit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_lit_str<'a>(cx: &Ctxt, attr_name: Symbol, lit: &'a syn::Lit) -> Result<&'a syn::LitStr, ()> {$/;"	f
get_lit_str2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_lit_str2<'a>($/;"	f
get_matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn get_matches(self) -> ArgMatches<'a> {$/;"	f
get_matches_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn get_matches_from<I, T>(mut self, itr: I) -> ArgMatches<'a>$/;"	f
get_matches_from_safe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn get_matches_from_safe<I, T>(mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	f
get_matches_from_safe_borrow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn get_matches_from_safe_borrow<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	f
get_matches_safe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn get_matches_safe(self) -> ClapResult<ArgMatches<'a>> {$/;"	f
get_matches_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn get_matches_with<I, T>($/;"	f
get_member	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {$/;"	f
get_multiple_renames	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_multiple_renames<'a>($/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn get_mut(&mut self, arg: &str) -> Option<&mut MatchedArg> {$/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut Value {$/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn get_mut<Q>(&mut self, key: &Q) -> Option<&mut Value>$/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn get_mut<I: Index>(&mut self, index: I) -> Option<&mut Value> {$/;"	f
get_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	f
get_mut	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	f
get_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn get_name(&self) -> &str {$/;"	f
get_num_cpus	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^fn get_num_cpus() -> usize {$/;"	f
get_num_cpus	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^pub fn get_num_cpus() -> usize {$/;"	f
get_num_physical_cpus	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^fn get_num_physical_cpus() -> usize {$/;"	f
get_num_physical_cpus	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^pub fn get_num_physical_cpus() -> usize {$/;"	f
get_num_physical_cpus_windows	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^fn get_num_physical_cpus_windows() -> Option<usize> {$/;"	f
get_or	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^        pub fn get_or(&self, create: impl FnOnce() -> T) -> CachedGuard<T> {$/;"	f
get_physical	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^pub fn get_physical() -> usize {$/;"	f
get_ptr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn get_ptr(&self, state: &State) -> Option<StatePtr> {$/;"	f
get_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn get_ref(&self) -> &W {$/;"	f
get_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn get_ref(&self) -> &W {$/;"	f
get_renames	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_renames<'a>($/;"	f
get_required_usage_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^pub fn get_required_usage_from<'a, 'b>($/;"	f
get_requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^    macro_rules! get_requires {$/;"	d
get_ser_and_de	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_ser_and_de<'a, 'b, T, F>($/;"	f
get_serde_meta_items	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^pub fn get_serde_meta_items(cx: &Ctxt, attr: &syn::Attribute) -> Result<Vec<syn::NestedMeta>, ()> {$/;"	f
get_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn get_state(&self, si: StatePtr) -> Option<&State> {$/;"	f
get_subcommands_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn get_subcommands_of(p: &Parser) -> String {$/;"	f
get_suffix_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn get_suffix_forward(needle: &[u8], kind: SuffixKind) -> (&[u8], usize) {$/;"	f
get_suffix_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn get_suffix_reverse(needle: &[u8], kind: SuffixKind) -> (&[u8], usize) {$/;"	f
get_system_info	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^        fn get_system_info(info: *mut system_info) -> status_t;$/;"	f
get_tooltip	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_tooltip	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_where_predicates	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn get_where_predicates($/;"	f
get_with_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn get_with_tokens(self) -> Option<(TokenStream, T)> {$/;"	f
get_work	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn get_work(&mut self) -> Option<Work> {$/;"	f
get_zsh_arg_conflicts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/macros.rs	/^macro_rules! get_zsh_arg_conflicts {$/;"	d
getter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn getter(&self) -> Option<&syn::ExprPath> {$/;"	f
gi_from_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn gi_from_str<P: AsRef<Path>>(root: P, s: &str) -> Gitignore {$/;"	f
git_exclude	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn git_exclude() {$/;"	f
git_exclude	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn git_exclude(&mut self, yes: bool) -> &mut IgnoreBuilder {$/;"	f
git_exclude	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn git_exclude(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
git_global	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn git_global(&mut self, yes: bool) -> &mut IgnoreBuilder {$/;"	f
git_global	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn git_global(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
git_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn git_ignore(&mut self, yes: bool) -> &mut IgnoreBuilder {$/;"	f
git_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn git_ignore(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
git_info_exclude_in_linked_worktree	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn git_info_exclude_in_linked_worktree() {$/;"	f
gitconfig_excludes_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^fn gitconfig_excludes_path() -> Option<PathBuf> {$/;"	f
gitconfig_home_contents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^fn gitconfig_home_contents() -> Option<Vec<u8>> {$/;"	f
gitconfig_xdg_contents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^fn gitconfig_xdg_contents() -> Option<Vec<u8>> {$/;"	f
gitignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn gitignore() {$/;"	f
gitignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn gitignore(x: &'a gitignore::Glob) -> IgnoreMatch<'a> {$/;"	f
gitignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn gitignore() {$/;"	f
gitignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn gitignore() {$/;"	f
gitignore_allowed_no_git	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn gitignore_allowed_no_git() {$/;"	f
gitignore_no_git	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn gitignore_no_git() {$/;"	f
gitignore_parent	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn gitignore_parent() {$/;"	f
global	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn global(self, g: bool) -> Self {$/;"	f
global	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn global() -> (Gitignore, Option<Error>) {$/;"	f
global_setting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn global_setting(mut self, setting: AppSettings) -> Self {$/;"	f
global_settings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn global_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
globs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn globs(&self) -> &[String] {$/;"	f
good	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    pub fn good<T>(&self, msg: T) -> Format<T>$/;"	f
grapheme_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn grapheme_indices(&self) -> GraphemeIndices {$/;"	f
graphemes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn graphemes(&self) -> Graphemes {$/;"	f
group	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn group(mut self, group: ArgGroup<'a>) -> Self {$/;"	f
group	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn group(mut self, name: &'a str) -> Self {$/;"	f
groups	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn groups(mut self, groups: &[ArgGroup<'a>]) -> Self {$/;"	f
groups	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn groups(mut self, names: &[&'a str]) -> Self {$/;"	f
groups	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn groups() {$/;"	f
groups_for_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn groups_for_arg(&self, name: &str) -> Option<Vec<&'a str>> {$/;"	f
grow_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn grow_in_place($/;"	f
gt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn gt(&self, other: &Level) -> bool {$/;"	f
gt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn gt(&self, other: &LevelFilter) -> bool {$/;"	f
half_fill_split_goto1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn half_fill_split_goto1(&mut self, goto1: InstPtr) {$/;"	f
half_fill_split_goto2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn half_fill_split_goto2(&mut self, goto2: InstPtr) {$/;"	f
handle_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn handle_entry($/;"	f
handle_self_overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn handle_self_overrides<'b>(&mut self, a: Option<&AnyArg<'a, 'b>>) {$/;"	f
has_any_ignore_rules	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn has_any_ignore_rules(&self) -> bool {$/;"	f
has_args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_args(&self) -> bool {$/;"	f
has_doublestar_prefix	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn has_doublestar_prefix(&self) -> bool {$/;"	f
has_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn has_empty(&self) -> bool {$/;"	f
has_explicit_encoding	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn has_explicit_encoding(&self) -> bool {$/;"	f
has_flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_flags(&self) -> bool {$/;"	f
has_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn has_flatten(&self) -> bool {$/;"	f
has_getter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^    pub fn has_getter(&self) -> bool {$/;"	f
has_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn has_match(&self) -> bool {$/;"	f
has_opts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_opts(&self) -> bool {$/;"	f
has_positionals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_positionals(&self) -> bool {$/;"	f
has_prefix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn has_prefix(&self) -> bool {$/;"	f
has_subcommands	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_subcommands(&self) -> bool {$/;"	f
has_switch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn has_switch(&self) -> bool {$/;"	f
has_switch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool {$/;"	f
has_switch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool;$/;"	f
has_switch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn has_switch(&self) -> bool {$/;"	f
has_switch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn has_switch(&self) -> bool {$/;"	f
has_switch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn has_switch(&self) -> bool {$/;"	f
has_visible_flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_visible_flags(&self) -> bool {$/;"	f
has_visible_opts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_visible_opts(&self) -> bool {$/;"	f
has_visible_positionals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_visible_positionals(&self) -> bool {$/;"	f
has_visible_subcommands	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn has_visible_subcommands(&self) -> bool {$/;"	f
has_visited	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^    fn has_visited(&mut self, ip: InstPtr, at: InputAt) -> bool {$/;"	f
hash	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	f
hash	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn hash(&self, suffix: &SuffixCacheKey) -> usize {$/;"	f
hash_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn hash_map() {$/;"	f
haystack	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn haystack(&self) -> &'a [u8] {$/;"	f
haystack	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pattern.rs	/^    fn haystack(&self) -> &'t str {$/;"	f
heading	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn heading(&self) -> bool {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn help<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>, spec_vals: &str) -> io::Result<()> {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str>;$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn help(mut self, h: &'b str) -> Self {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	f
help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn help(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
help	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn help(mut self, text: &'static str) -> RGArg {$/;"	f
help_message	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn help_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	f
help_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn help_short<S: AsRef<str> + 'b>(mut self, s: S) -> Self {$/;"	f
help_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn help_short(&mut self, s: &str) {$/;"	f
help_start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^fn help_start(b: u8) -> bool {$/;"	f
helper	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f
hidden	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn hidden(self, h: bool) -> Self {$/;"	f
hidden	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn hidden(mut self) -> RGArg {$/;"	f
hidden	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn hidden(&self) -> bool {$/;"	f
hidden	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn hidden() -> IgnoreMatch<'static> {$/;"	f
hidden	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn hidden(&mut self, yes: bool) -> &mut IgnoreBuilder {$/;"	f
hidden	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn hidden(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
hidden_long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn hidden_long_help(self, hide: bool) -> Self {$/;"	f
hidden_short_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn hidden_short_help(self, hide: bool) -> Self {$/;"	f
hide_default_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn hide_default_value(self, hide: bool) -> Self {$/;"	f
hide_env_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn hide_env_values(self, hide: bool) -> Self {$/;"	f
hide_from_rustfmt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/features_check/mod.rs	/^macro_rules! hide_from_rustfmt {$/;"	d
hide_possible_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn hide_possible_values(self, hide: bool) -> Self {$/;"	f
home_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^fn home_dir() -> Option<PathBuf> {$/;"	f
i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	f
i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn i64(&mut self, v: i64) -> Result<(), Error>;$/;"	f
i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	f
identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn identifier(&self) -> Identifier {$/;"	f
identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        struct identifier ignored_any$/;"	s
if_checking_recursion_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! if_checking_recursion_limit {$/;"	d
ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn ignore() {$/;"	f
ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn ignore(&mut self, yes: bool) -> &mut IgnoreBuilder {$/;"	f
ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn ignore(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
ignore_case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn ignore_case_insensitive($/;"	f
ignore_case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn ignore_case_insensitive(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
ignore_decimal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_decimal(&mut self) -> Result<()> {$/;"	f
ignore_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn ignore_escape<'de, R>(read: &mut R) -> Result<()>$/;"	f
ignore_exponent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_exponent(&mut self) -> Result<()> {$/;"	f
ignore_file_case_insensitive	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn ignore_file_case_insensitive(&self) -> bool {$/;"	f
ignore_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_integer(&mut self) -> Result<()> {$/;"	f
ignore_message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^macro_rules! ignore_message {$/;"	d
ignore_messages	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^pub fn ignore_messages() -> bool {$/;"	f
ignore_over_gitignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn ignore_over_gitignore() {$/;"	f
ignore_paths	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn ignore_paths(&self) -> Vec<PathBuf> {$/;"	f
ignore_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	f
ignore_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()>;$/;"	f
ignore_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn ignore_value(&mut self) -> Result<()> {$/;"	f
ignore_whitespace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn ignore_whitespace($/;"	f
ignored	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    macro_rules! ignored {$/;"	d
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^        fn imp(bytes: &[u8]) -> Cow<OsStr> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^        fn imp(bytes: &[u8]) -> Result<&OsStr, Utf8Error> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^        fn imp(os_str: &OsStr) -> Option<&[u8]> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp(os_str: OsString) -> Result<Vec<u8>, OsString> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp(v: Vec<u8>) -> OsString {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp(v: Vec<u8>) -> Result<OsString, Vec<u8>> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^        fn imp<'a>(os_str: &'a OsStr) -> Cow<'a, [u8]> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^mod imp {$/;"	m
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^        fn imp(_: &ExecReadOnly) -> Option<MatchType> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^        fn imp(_: &ExecReadOnly, _: &[u8]) -> bool {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^        fn imp(ro: &ExecReadOnly) -> Option<MatchType> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^        fn imp(ro: &ExecReadOnly, text: &[u8]) -> bool {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/find_byte.rs	/^    fn imp(needle: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^mod imp {$/;"	m
imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^        fn imp(src: &Path, link_name: &Path) -> io::Result<()> {$/;"	f
imp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^    fn imp(args: &Args) -> Result<bool> {$/;"	f
impl_copy_clone	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	d
impl_deserialize_num	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	d
impl_from_primitive_for_float	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_float {$/;"	d
impl_from_primitive_for_int	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_int {$/;"	d
impl_from_primitive_for_uint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_uint {$/;"	d
impl_from_signed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! impl_from_signed {$/;"	d
impl_from_unsigned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^macro_rules! impl_from_unsigned {$/;"	d
impl_partial_eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^macro_rules! impl_partial_eq {$/;"	d
impl_partial_eq_cow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^macro_rules! impl_partial_eq_cow {$/;"	d
impl_partial_ord	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^macro_rules! impl_partial_ord {$/;"	d
impl_settings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! impl_settings {$/;"	d
implied_settings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn implied_settings(&mut self, a: &Arg<'a, 'b>) {$/;"	f
in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn in_place(self) -> InPlaceImplGenerics<'a> {$/;"	f
in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn in_place(self) -> InPlaceTypeGenerics<'a> {$/;"	f
inc_occurrence_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn inc_occurrence_of(&mut self, arg: &'a str) {$/;"	f
inc_occurrences_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn inc_occurrences_of(&mut self, args: &[&'a str]) {$/;"	f
indent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn indent<W>(wr: &mut W, n: usize, s: &[u8]) -> io::Result<()>$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, _: ops::RangeFull) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, idx: usize) -> &u8 {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::Range<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeFrom<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeInclusive<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeTo<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index(&self, r: ops::RangeToInclusive<usize>) -> &BStr {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn index(mut self, idx: u64) -> Self {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn index(&self, i: usize) -> &[u8] {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a [u8] {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn index(&self, i: usize) -> &str {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a str {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn index(&self, index: &Q) -> &Value {$/;"	f
index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index(&self, index: I) -> &Value {$/;"	f
index_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	f
index_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value>;$/;"	f
index_into_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	f
index_into_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value>;$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, _: ops::RangeFull) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, idx: usize) -> &mut u8 {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::Range<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeFrom<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeInclusive<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeTo<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn index_mut(&mut self, r: ops::RangeToInclusive<usize>) -> &mut BStr {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn index_mut(&mut self, index: &Q) -> &mut Value {$/;"	f
index_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_mut(&mut self, index: I) -> &mut Value {$/;"	f
index_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn index_of<S: AsRef<str>>(&self, name: S) -> Option<usize> {$/;"	f
index_or_insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	f
index_or_insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value;$/;"	f
indices_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn indices_of<S: AsRef<str>>(&'a self, name: S) -> Option<Indices<'a>> {$/;"	f
inert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn inert() -> Freqy {$/;"	f
inert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn inert() -> PrefilterState {$/;"	f
info	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! info {$/;"	d
init	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/logger.rs	/^    pub fn init() -> Result<(), log::SetLoggerError> {$/;"	f
init_cgroups	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^fn init_cgroups() {$/;"	f
initialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^            fn initialize(lazy: &Self) {$/;"	f
initialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^    fn initialize(lazy: &Self);$/;"	f
initialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^pub fn initialize<T: LazyStatic>(lazy: &T) {$/;"	f
inner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn inner(&self) -> Option<&T> {$/;"	f
inner	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    fn inner(&self) -> &T {$/;"	f
ino	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn ino(&self) -> u64 {$/;"	f
ino	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn ino(&self) -> u64;$/;"	f
ino	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn ino(&self) -> Option<u64> {$/;"	f
ino	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn ino(&self) -> u64 {$/;"	f
ino	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn ino(&self) -> Option<u64> {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert() {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn insert(&mut self, name: &'a str) {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn insert(&mut self, key: usize, value: V) -> Option<V> {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn insert(&mut self, state: State, si: StatePtr) {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    pub fn insert(&mut self, value: usize) {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn insert<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn insert(&mut self, k: String, v: Value) -> Option<Value> {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn insert(&mut self, value: Value) -> Value {$/;"	f
insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn insert(self, value: Value) -> &'a mut Value {$/;"	f
insert_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_char(&mut self, at: usize, ch: char) {$/;"	f
insert_fail1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_fail1() {$/;"	f
insert_fail2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_fail2() {$/;"	f
insert_fail3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_fail3() {$/;"	f
insert_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn insert_str<B: AsRef<[u8]>>(&mut self, at: usize, bytes: B) {$/;"	f
inst_ptrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn inst_ptrs(&self) -> InstPtrs {$/;"	f
int_to_int	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! int_to_int {$/;"	d
int_to_uint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! int_to_uint {$/;"	d
intense	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn intense(&self) -> bool {$/;"	f
internal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/lib.rs	/^pub mod internal {$/;"	m
into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    fn into(self) -> ArgMatches<'a> {$/;"	f
into_app	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^        fn into_app<'a, 'b>() -> clap::App<'a, 'b>;$/;"	f
into_byte_regex	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn into_byte_regex(self) -> re_bytes::Regex {$/;"	f
into_byte_regex_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn into_byte_regex_set(self) -> re_set::bytes::RegexSet {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^            fn into_deserializer(self) -> $name<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f
into_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_error_option	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn into_error_option(mut self) -> Option<Error> {$/;"	f
into_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn into_inner(self) -> Vec<u8> {$/;"	f
into_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_io_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn into_io_error(self) -> Option<io::Error> {$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn into_iter<T>(self) -> StreamDeserializer<'de, R, T>$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn into_iter(self) -> IntoIter {$/;"	f
into_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn into_mut(self) -> &'a mut Value {$/;"	f
into_os_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_os_string(self) -> Result<OsString, Vec<u8>>$/;"	f
into_os_string_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_os_string_lossy(self) -> OsString$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn into_owned(self) -> CowBytes<'static> {$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn into_owned(self) -> Finder<'static> {$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn into_owned(self) -> FinderReverse<'static> {$/;"	f
into_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn into_owned(self) -> TwoWay<'static> {$/;"	f
into_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn into_path(self) -> PathBuf {$/;"	f
into_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn into_path(self) -> PathBuf {$/;"	f
into_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn into_path(self) -> PathBuf {$/;"	f
into_path_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_path_buf(self) -> Result<PathBuf, Vec<u8>>$/;"	f
into_path_buf_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_path_buf_lossy(self) -> PathBuf$/;"	f
into_regex	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn into_regex(self) -> re_unicode::Regex {$/;"	f
into_regex_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn into_regex_set(self) -> re_set::unicode::RegexSet {$/;"	f
into_searcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pattern.rs	/^    fn into_searcher(self, haystack: &'t str) -> RegexSearcher<'r, 't> {$/;"	f
into_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_string(self) -> Result<String, FromUtf8Error>$/;"	f
into_string_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_string_lossy(self) -> String$/;"	f
into_string_unchecked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    unsafe fn into_string_unchecked(self) -> String$/;"	f
into_sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn into_sval(self) -> sval::value::Error {$/;"	f
into_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_vec(self) -> Vec<u8> {$/;"	f
into_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn into_vec(self) -> Vec<u8>$/;"	f
into_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    pub fn into_vec(self) -> Vec<u8> {$/;"	f
inv_memchr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^pub fn inv_memchr(n1: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
inv_memrchr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^pub fn inv_memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn invalid(&self) -> &'a [u8] {$/;"	f
invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn invalid(&self) -> &str {$/;"	f
invalid_length	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn invalid_length(len: usize, exp: &Expected) -> Self {$/;"	f
invalid_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn invalid_subcommand<S, D, N, U>($/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn invalid_type(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn invalid_type(self, exp: &dyn Expected) -> Error {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn invalid_type(unexp: de::Unexpected, exp: &dyn de::Expected) -> Self {$/;"	f
invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn invalid_type<E>(&self, exp: &dyn Expected) -> E$/;"	f
invalid_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn invalid_utf8<U>(usage: U, color: ColorWhen) -> Self$/;"	f
invalid_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn invalid_value<B, G, U>($/;"	f
invalid_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn invalid_value(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
invert	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn invert(self) -> Match<T> {$/;"	f
io	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn io(error: io::Error) -> Self {$/;"	f
io_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn io_error(e: &Error, color: ColorWhen) -> Self {$/;"	f
io_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^        fn io_error<E>(_: E) -> io::Error {$/;"	f
io_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn io_error(&self) -> Option<&io::Error> {$/;"	f
is_a_tty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^pub fn is_a_tty(_: bool) -> bool {$/;"	f
is_a_tty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^pub fn is_a_tty(stderr: bool) -> bool {$/;"	f
is_absolute_parent	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn is_absolute_parent(&self) -> bool {$/;"	f
is_alias	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn is_alias(&self, value: &str) -> bool {$/;"	f
is_anchor_end_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn is_anchor_end_match(&self, text: &[u8]) -> bool {$/;"	f
is_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_array(&self) -> bool {$/;"	f
is_ascii	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn is_ascii(&self) -> bool {$/;"	f
is_ascii_word	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn is_ascii_word(&self) -> bool {$/;"	f
is_bin_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn is_bin_name(&self, value: &str) -> bool {$/;"	f
is_boolean	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_boolean(&self) -> bool {$/;"	f
is_continue	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn is_continue(&self) -> bool {$/;"	f
is_cow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_cow(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_data	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_data(&self) -> bool {$/;"	f
is_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    fn is_dir(&self) -> bool {$/;"	f
is_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn is_dir(&self) -> bool {$/;"	f
is_effective	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn is_effective(&mut self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	f
is_empty_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool;$/;"	f
is_end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn is_end(&self) -> bool {$/;"	f
is_eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn is_eof(&self) -> bool {$/;"	f
is_eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_eof(&self) -> bool {$/;"	f
is_explicit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    pub fn is_explicit(&self) -> bool {$/;"	f
is_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn is_f64(&self) -> bool {$/;"	f
is_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_f64(&self) -> bool {$/;"	f
is_file	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    fn is_file(&self) -> bool {$/;"	f
is_file_name	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/pathutil.rs	/^pub fn is_file_name<P: AsRef<Path>>(path: P) -> bool {$/;"	f
is_hidden	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^fn is_hidden(entry: &DirEntry) -> bool {$/;"	f
is_hidden	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/pathutil.rs	/^pub fn is_hidden(dent: &DirEntry) -> bool {$/;"	f
is_human_readable	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_human_readable	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn is_i64(&self) -> bool {$/;"	f
is_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_i64(&self) -> bool {$/;"	f
is_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn is_ignore(&self) -> bool {$/;"	f
is_implicitly_borrowed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_implicitly_borrowed(ty: &syn::Type) -> bool {$/;"	f
is_implicitly_borrowed_reference	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_implicitly_borrowed_reference(ty: &syn::Type) -> bool {$/;"	f
is_io	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_io(&self) -> bool {$/;"	f
is_io	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn is_io(&self) -> bool {$/;"	f
is_leading_or_invalid_utf8_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^fn is_leading_or_invalid_utf8_byte(b: u8) -> bool {$/;"	f
is_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn is_match(&self) -> bool {$/;"	f
is_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    pub fn is_match(&self) -> bool {$/;"	f
is_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn is_match(&self) -> bool {$/;"	f
is_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn is_match(&self, text: &[u8]) -> bool {$/;"	f
is_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn is_match(&self, text: $text_ty) -> bool {$/;"	f
is_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn is_match(&self, text: &str) -> bool {$/;"	f
is_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	f
is_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	f
is_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	f
is_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn is_match_at(&self, text: $text_ty, start: usize) -> bool {$/;"	f
is_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn is_match_at(&self, text: &Self::Text, start: usize) -> bool;$/;"	f
is_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	f
is_missing_required_ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn is_missing_required_ok(&self, a: &AnyArg, matcher: &ArgMatcher) -> bool {$/;"	f
is_negated	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    fn is_negated(&self) -> bool {$/;"	f
is_new_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn is_new_arg(&mut self, arg_os: &OsStr, needs_val_of: ParseResult) -> bool {$/;"	f
is_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn is_none(self) -> bool {$/;"	f
is_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_none	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_null(&self) -> bool {$/;"	f
is_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_number(&self) -> bool {$/;"	f
is_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_object(&self) -> bool {$/;"	f
is_one_search	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn is_one_search(&self, paths: &[PathBuf]) -> bool {$/;"	f
is_only_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn is_only_dir(&self) -> bool {$/;"	f
is_only_stdin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn is_only_stdin(&self, paths: &[PathBuf]) -> bool {$/;"	f
is_option	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_option(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_packed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn is_packed(&self) -> bool {$/;"	f
is_partial	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn is_partial(&self) -> bool {$/;"	f
is_present	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn is_present(&self, name: &str) -> bool {$/;"	f
is_present	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn is_present<S: AsRef<str>>(&self, name: S) -> bool {$/;"	f
is_present	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn is_present(&self, name: &str) -> bool {$/;"	f
is_primitive_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {$/;"	f
is_primitive_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_primitive_type(ty: &syn::Type, primitive: &str) -> bool {$/;"	f
is_quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn is_quit(&self) -> bool {$/;"	f
is_quit_now	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn is_quit_now(&self) -> bool {$/;"	f
is_reference	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_reference(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_root	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn is_root(&self) -> bool {$/;"	f
is_same	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn is_same(&self, child: &Handle) -> io::Result<bool> {$/;"	f
is_same_file_system	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn is_same_file_system(&mut self, dent: &DirEntry) -> Result<bool> {$/;"	f
is_same_file_system	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn is_same_file_system(root_device: u64, path: &Path) -> Result<bool, Error> {$/;"	f
is_search	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn is_search(&self) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn is_set(&self, _: ArgSettings) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn is_set(&self, s: AS) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn is_set(&self, ArgSettings) -> bool;$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn is_set(&self, a: ArgSettings) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	f
is_set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^        pub fn is_set(&self, s: $n) -> bool {$/;"	f
is_slice_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_slice_u8(ty: &syn::Type) -> bool {$/;"	f
is_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn is_some(self) -> bool {$/;"	f
is_start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn is_start(&self) -> bool {$/;"	f
is_start_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^fn is_start_byte(b: u8) -> bool {$/;"	f
is_stdin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    pub fn is_stdin(&self) -> bool {$/;"	f
is_stdin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn is_stdin(&self) -> bool {$/;"	f
is_stdin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn is_stdin(&self) -> bool {$/;"	f
is_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn is_str(ty: &syn::Type) -> bool {$/;"	f
is_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_string(&self) -> bool {$/;"	f
is_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn is_suffix(&self, text: &[u8]) -> bool {$/;"	f
is_symlink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn is_symlink(&self) -> bool {$/;"	f
is_synchronous	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn is_synchronous(&self) -> bool {$/;"	f
is_syntax	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn is_syntax(&self) -> bool {$/;"	f
is_term_dumb	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^pub fn is_term_dumb() -> bool {$/;"	f
is_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    pub fn is_u64(&self) -> bool {$/;"	f
is_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn is_u64(&self) -> bool {$/;"	f
is_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn is_utf8(&self) -> bool {$/;"	f
is_valid_cap_letter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^fn is_valid_cap_letter(b: &u8) -> bool {$/;"	f
is_whitelist	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn is_whitelist(&self) -> bool {$/;"	f
is_whitelist	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn is_whitelist(&self) -> bool {$/;"	f
is_word	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn is_word(&self) -> bool {$/;"	f
is_word_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn is_word_byte(self) -> bool {$/;"	f
is_word_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn is_word_char(self) -> bool {$/;"	f
italic	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn italic(&self) -> bool {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn iter(&self) -> Iter<&str, MatchedArg> {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn iter(&self) -> Iter<V> {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn iter(&self) -> LiteralIter {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn iter(&self) -> SetMatchesIter {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    pub fn iter(&self) -> SubCapturesPosIter {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	f
iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn iter(&self) -> Iter {$/;"	f
iter_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut {$/;"	f
iterator_len_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
itry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^macro_rules! itry {$/;"	d
join	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^pub fn join<B, T, I>(separator: B, elements: I) -> Vec<u8>$/;"	f
join	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    macro_rules! join {$/;"	d
join	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn join<P: AsRef<Path>>(&self, path: P) -> PathBuf {$/;"	f
json	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json {$/;"	d
json_internal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json_internal {$/;"	d
json_internal_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json_internal_vec {$/;"	d
json_stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn json_stats(&mut self, yes: bool) -> &mut SearchWorkerBuilder {$/;"	f
json_unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/macros.rs	/^macro_rules! json_unexpected {$/;"	d
key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	f
key_from_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn key_from_string() {$/;"	f
key_must_be_a_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
key_must_be_a_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
key_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn key_values(&mut self, kvs: &'a kv::Source) -> &mut RecordBuilder<'a> {$/;"	f
key_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn key_values(&self) -> &kv::Source {$/;"	f
keys	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn keys(&self) -> Keys {$/;"	f
last	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn last(self, l: bool) -> Self {$/;"	f
last_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn last_byte(&self) -> Option<u8> {$/;"	f
layout_to_flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^fn layout_to_flags(align: usize, size: usize) -> c_int {$/;"	f
lazy_static	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^macro_rules! lazy_static {$/;"	d
lcp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn lcp(&self) -> &FreqyPacked {$/;"	f
lcs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn lcs(&self) -> &FreqyPacked {$/;"	f
le	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn le(&self, other: &Level) -> bool {$/;"	f
le	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn le(&self, other: &LevelFilter) -> bool {$/;"	f
leads_to_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn leads_to_match(&self, pc: usize) -> bool {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn len(&self) -> usize;$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn len(&self) -> usize {$/;"	f
len_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn len_hint(&self) -> Option<usize> {$/;"	f
len_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn len_hint(&self) -> Option<usize>;$/;"	f
len_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn len_utf8(self) -> usize {$/;"	f
level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn level(&mut self, arg: Level) -> &mut MetadataBuilder<'a> {$/;"	f
level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn level(&mut self, level: Level) -> &mut RecordBuilder<'a> {$/;"	f
level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	f
level_bytes_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f
level_filter_bytes_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_filter_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f
level_filter_token	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_filter_token(variant: &'static str) -> Token {$/;"	f
level_token	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_token(variant: &'static str) -> Token {$/;"	f
lib	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/lib.rs	/^mod lib {$/;"	m
lib	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/lib.rs	/^mod lib {$/;"	m
line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn line(&mut self, line: Option<u32>) -> &mut RecordBuilder<'a> {$/;"	f
line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn line(&self) -> Option<u32> {$/;"	f
line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    pub fn line(&self) -> usize {$/;"	f
line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn line(&self) -> usize {$/;"	f
line_number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn line_number(&self, paths: &[PathBuf]) -> bool {$/;"	f
lines	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn lines(&self) -> Lines {$/;"	f
lines_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn lines_with_terminator(&self) -> LinesWithTerminator {$/;"	f
lines_with_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn lines_with_terminator() {$/;"	f
lines_without_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn lines_without_terminator() {$/;"	f
load_cgroups	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^fn load_cgroups<P1, P2>(cgroup_proc: P1, mountinfo_proc: P2) -> Option<usize>$/;"	f
load_cpu	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn load_cpu<P: AsRef<Path>>(proc_path: P) -> Option<MountInfo> {$/;"	f
load_cpu	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn load_cpu<P: AsRef<Path>>(proc_path: P) -> Option<Subsys> {$/;"	f
load_yaml	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! load_yaml {$/;"	d
locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn locations(&self) -> CaptureLocations {$/;"	f
locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn locations(&self) -> Locations {$/;"	f
locations	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn locations(&self) -> CaptureLocations {$/;"	f
lock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn lock(&self) -> IoStandardStreamLock<'_> {$/;"	f
lock	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn lock(&self) -> StandardStreamLock<'_> {$/;"	f
log	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn log(&self, _: &Record) {}$/;"	f
log	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn log(&self, record: &Record);$/;"	f
log	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! log {$/;"	d
log	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/logger.rs	/^    fn log(&self, record: &log::Record) {$/;"	f
log_enabled	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! log_enabled {$/;"	d
logger	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn logger() -> &'static Log {$/;"	f
logical_cpus	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^fn logical_cpus() -> usize {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn long<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str>;$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn long(mut self, l: &'b str) -> Self {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	f
long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
long	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^macro_rules! long {$/;"	d
long_about	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn long_about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	f
long_end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^fn long_end(b: u8) -> bool {$/;"	f
long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	f
long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	f
long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str>;$/;"	f
long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn long_help(mut self, h: &'b str) -> Self {$/;"	f
long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	f
long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	f
long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	f
long_help	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn long_help(mut self, text: &'static str) -> RGArg {$/;"	f
long_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn long_version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	f
long_version	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^pub fn long_version(revision_hash: Option<&str>, cpu: bool) -> String {$/;"	f
longest_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn longest_filter(&self) -> bool {$/;"	f
longest_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool {$/;"	f
longest_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool;$/;"	f
longest_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn longest_filter(&self) -> bool {$/;"	f
longest_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn longest_filter(&self) -> bool {$/;"	f
longest_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn longest_filter(&self) -> bool {$/;"	f
longs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! longs {$/;"	d
loop_ancestor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn loop_ancestor(&self) -> Option<&Path> {$/;"	f
lt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn lt(&self, other: &Level) -> bool {$/;"	f
lt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn lt(&self, other: &LevelFilter) -> bool {$/;"	f
main	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^fn main() {$/;"	f
main	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/lib.rs	/^fn main() {}$/;"	f
main	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn main() {$/;"	f
make_ascii_lowercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn make_ascii_lowercase(&mut self) {$/;"	f
make_ascii_uppercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn make_ascii_uppercase(&mut self) {$/;"	f
make_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^fn make_error(mut msg: String) -> Error {$/;"	f
many_dirs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn many_dirs() {$/;"	f
many_files	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn many_files() {$/;"	f
many_matches_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn many_matches_at($/;"	f
many_mixed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn many_mixed() {$/;"	f
map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> Result<U> {$/;"	f
map	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn map<U, F: FnOnce(T) -> U>(self, f: F) -> Match<U> {$/;"	f
map	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    fn map<U, F: FnOnce(T) -> U>(self, f: F) -> Selection<U> {$/;"	f
map_as_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f
map_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! map_impl {$/;"	d
map_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	d
mark_has_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn mark_has_flatten(&mut self) {$/;"	f
mark_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn mark_transparent(&mut self) {$/;"	f
match_nfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn match_nfa(&self, text: &[u8], start: usize) -> bool {$/;"	f
match_nfa_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn match_nfa_type($/;"	f
matched	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn matched(&self, regex_index: usize) -> bool {$/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn matched<'a, P: AsRef<Path>>($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn matched<P: AsRef<Path>>($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn matched<'a, P: AsRef<Path>>($/;"	f
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    macro_rules! matched {$/;"	d
matched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn matched<'a, P: AsRef<Path>>($/;"	f
matched_any	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn matched_any(&self) -> bool {$/;"	f
matched_dir_entry	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn matched_dir_entry<'a>($/;"	f
matched_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn matched_ignore<'a>($/;"	f
matched_path_or_any_parents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn matched_path_or_any_parents<P: AsRef<Path>>($/;"	f
matched_stripped	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn matched_stripped<P: AsRef<Path>>($/;"	f
matcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn matcher(&self) -> &PatternMatcher {$/;"	f
matcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn matcher(&self, patterns: &[String]) -> Result<PatternMatcher> {$/;"	f
matcher_engine	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn matcher_engine($/;"	f
matcher_pcre2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn matcher_pcre2(&self, patterns: &[String]) -> Result<PCRE2RegexMatcher> {$/;"	f
matcher_rust	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn matcher_rust(&self, patterns: &[String]) -> Result<RustRegexMatcher> {$/;"	f
matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn matches(&self, byte: u8) -> bool {$/;"	f
matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn matches(&self, c: Char) -> bool {$/;"	f
matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn matches(&self, text: $text_ty) -> SetMatches {$/;"	f
matches	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn matches(&self) -> &ArgMatches {$/;"	f
max	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn max() -> Level {$/;"	f
max	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn max() -> LevelFilter {$/;"	f
max_columns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn max_columns(&self) -> Result<Option<u64>> {$/;"	f
max_columns_preview	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn max_columns_preview(&self) -> bool {$/;"	f
max_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn max_count(&self) -> Result<Option<u64>> {$/;"	f
max_depth	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn max_depth(mut self, depth: usize) -> Self {$/;"	f
max_depth	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn max_depth() {$/;"	f
max_depth	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn max_depth(&mut self, depth: Option<usize>) -> &mut WalkBuilder {$/;"	f
max_depth_0	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn max_depth_0() {$/;"	f
max_depth_1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn max_depth_1() {$/;"	f
max_depth_2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn max_depth_2() {$/;"	f
max_file_size	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn max_file_size(&self) -> Result<Option<u64>> {$/;"	f
max_filesize	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn max_filesize() {$/;"	f
max_filesize	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn max_filesize(&mut self, filesize: Option<u64>) -> &mut WalkBuilder {$/;"	f
max_level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn max_level() -> LevelFilter {$/;"	f
max_open	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn max_open(mut self, mut n: usize) -> Self {$/;"	f
max_term_width	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn max_term_width(mut self, w: usize) -> Self {$/;"	f
max_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	f
max_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	f
max_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64>;$/;"	f
max_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	f
max_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	f
max_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	f
max_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn max_values(mut self, qty: u64) -> Self {$/;"	f
maybe_push	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn maybe_push(&mut self, err: Option<Error>) {$/;"	f
maybe_push_ignore_io	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn maybe_push_ignore_io(&mut self, err: Option<Error>) {$/;"	f
member_message	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/check.rs	/^fn member_message(member: &Member) -> String {$/;"	f
message	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^macro_rules! message {$/;"	d
messages	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^pub fn messages() -> bool {$/;"	f
metadata	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn metadata(&mut self, metadata: Metadata<'a>) -> &mut RecordBuilder<'a> {$/;"	f
metadata	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn metadata(&self) -> &Metadata<'a> {$/;"	f
metadata	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn metadata(&self) -> Result<fs::Metadata> {$/;"	f
metadata	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn metadata(&self) -> Result<Metadata, Error> {$/;"	f
metadata	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn metadata(&self) -> Result<Metadata, Error> {$/;"	f
metadata_internal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn metadata_internal(&self) -> Result<fs::Metadata> {$/;"	f
metadata_internal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn metadata_internal(&self) -> Result<fs::Metadata, Error> {$/;"	f
min_depth	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn min_depth(mut self, depth: usize) -> Self {$/;"	f
min_depth_1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_depth_1() {$/;"	f
min_depth_2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_depth_2() {$/;"	f
min_max_depth_diff_0	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_max_depth_diff_0() {$/;"	f
min_max_depth_diff_1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_max_depth_diff_1() {$/;"	f
min_max_depth_diff_nada	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_max_depth_diff_nada() {$/;"	f
min_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	f
min_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	f
min_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64>;$/;"	f
min_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	f
min_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	f
min_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	f
min_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn min_values(mut self, qty: u64) -> Self {$/;"	f
missing_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn missing_field(field: &'static str) -> Self {$/;"	f
missing_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
missing_required_argument	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn missing_required_argument<R, U>(required: R, usage: U, color: ColorWhen) -> Self$/;"	f
missing_required_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn missing_required_error(&self, matcher: &ArgMatcher, extra: Option<&str>) -> ClapResult<()> {$/;"	f
missing_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn missing_subcommand<N, U>(name: N, usage: U, color: ColorWhen) -> Self$/;"	f
mkdirp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn mkdirp<P: AsRef<Path>>(&self, path: P) {$/;"	f
mkdirp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn mkdirp<P: AsRef<Path>>(path: P) {$/;"	f
mkdirp	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn mkdirp<P: AsRef<Path>>(path: P) {$/;"	f
mkpaths	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn mkpaths(paths: &[&str]) -> Vec<String> {$/;"	f
mmap_choice	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn mmap_choice(&self, paths: &[PathBuf]) -> MmapChoice {$/;"	f
module_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path(&mut self, path: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	f
module_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path(&self) -> Option<&'a str> {$/;"	f
module_path_static	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path_static(&mut self, path: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	f
module_path_static	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path_static(&self) -> Option<&'static str> {$/;"	f
msg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    pub fn msg(msg: &'static str) -> Self {$/;"	f
multi_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn multi_line($/;"	f
multi_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn multi_line(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
multiple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn multiple(self, multi: bool) -> Self {$/;"	f
multiple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn multiple(mut self, m: bool) -> Self {$/;"	f
multiple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn multiple(&mut self, arg: &mut Arg) {$/;"	f
multiple	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn multiple(mut self) -> RGArg {$/;"	f
multiple_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    pub fn multiple_str(&self) -> &str {$/;"	f
mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^                static mut VALUE: *const String = 0 as *const String;$/;"	c
mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static mut LOGGER: &'static Log = &NopLogger;$/;"	c
mut_if	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn mut_if(is_mut: bool) -> Option<TokenStream> {$/;"	f
naive_find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn naive_find(needle: &[u8], haystack: &[u8]) -> Option<usize> {$/;"	f
naive_find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn naive_find(needle: &[u8], haystack: &[u8]) -> Option<usize> {$/;"	f
naive_maximal_suffix_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn naive_maximal_suffix_forward(needle: &[u8]) -> &[u8] {$/;"	f
naive_maximal_suffix_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn naive_maximal_suffix_reverse(needle: &[u8]) -> Vec<u8> {$/;"	f
naive_rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn naive_rfind(needle: &[u8], haystack: &[u8]) -> Option<usize> {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn name<S: Into<String>>(mut self, name: S) -> Self {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn name(&self) -> &'n str;$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn name(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	f
name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	f
name	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    fn name(&self) -> &str {$/;"	f
name	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn name(&self) -> &str {$/;"	f
name_end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^fn name_end(b: u8) -> bool {$/;"	f
name_no_brackets	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    pub fn name_no_brackets(&self) -> Cow<str> {$/;"	f
names	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^type names (separated by a comma) that have been defined and its rules will$/;"	T
needle	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn needle(&self) -> &[u8] {$/;"	f
needle	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn needle(&self) -> &[u8] {$/;"	f
needle	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn needle(&self) -> &[u8] {$/;"	f
needs_deserialize_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn needs_deserialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
needs_dotstar	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn needs_dotstar(&self) -> bool {$/;"	f
needs_flags_tag	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/usage.rs	/^fn needs_flags_tag(p: &Parser) -> bool {$/;"	f
needs_more_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn needs_more_vals<'b, A>(&self, o: &A) -> bool$/;"	f
needs_serialize_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn needs_serialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
negate	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn negate(&mut self, name: &str) -> &mut TypesBuilder {$/;"	f
negative_fallback_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn negative_fallback_forward() {$/;"	f
negative_sse2_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn negative_sse2_forward() {$/;"	f
nest_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn nest_limit($/;"	f
nest_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn nest_limit(&mut self, limit: u32) -> &mut RegexBuilder {$/;"	f
nested	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn nested() {$/;"	f
nested_small_max_open	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn nested_small_max_open() {$/;"	f
never_equal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn never_equal(_: &DirEntry, _: &Handle) -> bool {$/;"	f
never_equal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn never_equal(dent: &DirEntry, handle: &Handle) -> bool {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn new(bytes: &'a [u8]) -> Imp<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn new<B: ?Sized + AsRef<[u8]>>(bytes: &'a B) -> CowBytes<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new($/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8]) -> Fields<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8]) -> Lines<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8]) -> LinesWithTerminator<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(bytes: &'a [u8], f: F) -> FieldsWith<'a, F> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], needle: &'a [u8]) -> Find<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], needle: &'a [u8]) -> FindReverse<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], splitter: &'a [u8]) -> Split<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn new(haystack: &'a [u8], splitter: &'a [u8]) -> SplitReverse<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn new<B: ?Sized + AsRef<[u8]>>(needle: &'a B) -> Finder<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn new<B: ?Sized + AsRef<[u8]>>(needle: &'a B) -> FinderReverse<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn new(max_match_len: usize) -> PrefilterState {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn new($/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn new<S: Into<String>>(n: S) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    pub fn new(p: &'z mut Parser<'a, 'b>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    pub fn new(name: &'n str, idx: u64) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/fish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    pub fn new(option: ColorizerOption) -> Colorizer {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn new(usage: &'a str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn new(visitor: &'a mut Visitor) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn new() -> MetadataBuilder<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn new() -> RecordBuilder<'a> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn new(dir: PathBuf) -> Cgroup {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^        pub fn new() -> Cached<T> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn new(size: usize) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn new(num_byte_classes: usize) -> StateMap {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn new(num_byte_classes: usize) -> Transitions {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    pub fn new(prog: &Program) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn new(ro: &ExecReadOnly) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn new(re: &str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn new(s: &'t [u8]) -> CharInput<'t> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn new(text: &'t [u8], only_utf8: bool) -> ByteInput<'t> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn new() -> SingleByteSet {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn new(lits: &Literals, sset: SingleByteSet) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn new(lits: Literals, matcher: Matcher) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn new(pat: Vec<u8>) -> FreqyPacked {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn new(pattern: Vec<u8>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn new(pattern: &str) -> RegexBuilder {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn new<I, S>(patterns: I) -> RegexSetBuilder$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn new(haystack: &'t [u8], start: usize, end: usize) -> Match<'t> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn new<I, S>(exprs: I) -> Result<RegexSet, Error>$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn new(haystack: &'t str, start: usize, end: usize) -> Match<'t> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/sparse.rs	/^    pub fn new(size: usize) -> SparseSet {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> BorrowedBytesDeserializer<'de, E> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(name: &'static str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, E> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn new($/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    pub fn new(read: R) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    pub fn new(iter: I) -> LineColIterator<I> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub fn new(reader: R) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub fn new(s: &'a str) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    pub fn new(slice: &'a [u8]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn new() -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn new(writer: W) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(map: &'de Map<String, Value>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(map: Map<String, Value>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(slice: &'de [Value]) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(value: Cow<'de, str>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn new(vec: Vec<Value>) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new() -> WindowsBuffer {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(choice: ColorChoice) -> Buffer {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(choice: ColorChoice, console: bool) -> Buffer {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(sty: StandardStreamType) -> IoStandardStream {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn new(wtr: W) -> LossyStandardStream<W> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn new() -> ColorSpec {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn new(wtr: W) -> Ansi<W> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn new(wtr: W) -> NoColor<W> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn new(dent: &DirEntry) -> io::Result<Ancestor> {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn new<P: AsRef<Path>>(root: P) -> Self {$/;"	f
new	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn new() -> Result<TempDir> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn new(clap_matches: clap::ArgMatches<'static>) -> ArgMatches {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn new(kind: &str) -> SortByKind {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^    pub fn new() -> PathPrinterBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn new() -> SearchWorkerBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    pub fn new() -> SubjectBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn new() -> IgnoreBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn new<P: AsRef<Path>>($/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn new<P: AsRef<Path>>(root: P) -> GitignoreBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^        pub fn new() -> Result<TempDir> {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn new<P: AsRef<Path>>(path: P) -> OverrideBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn new() -> TypesBuilder {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn new<P: AsRef<Path>>(path: P) -> Walk {$/;"	f
new	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn new<P: AsRef<Path>>(path: P) -> WalkBuilder {$/;"	f
new_many	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn new_many<I, S>(res: I) -> Self$/;"	f
new_options	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn new_options(opts: RegexOptions) -> Self {$/;"	f
new_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/cow.rs	/^    pub fn new_owned(bytes: Vec<u8>) -> CowBytes<'static> {$/;"	f
new_raw	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn new_raw(dent: DirEntryRaw, err: Option<Error>) -> DirEntry {$/;"	f
new_stdin	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn new_stdin() -> DirEntry {$/;"	f
new_walkdir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn new_walkdir(dent: walkdir::DirEntry, err: Option<Error>) -> DirEntry {$/;"	f
newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Error>$/;"	f
newtype_variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Error>$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next(&mut self) -> Option<&'a [u8]> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next(&mut self) -> Option<u8> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn next(&mut self) -> Option<u8> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^    fn next(&mut self) -> Option<io::Result<Vec<u8>>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn next(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn next(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next(&mut self) -> Option<(usize, usize, char)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next(&mut self) -> Option<Utf8Chunk<'a>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next(&mut self) -> Option<char> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn next(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pattern.rs	/^    fn next(&mut self) -> SearchStep {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn next(&mut self) -> Option<&'t [u8]> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn next(&mut self) -> Option<(usize, usize)> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn next(&mut self) -> Option<Locations> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn next(&mut self) -> Option<Option<(usize, usize)>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn next(&mut self) -> Option<&'t str> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next(&mut self) -> Option<Result<T>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/iter.rs	/^    fn next(&mut self) -> Option<io::Result<u8>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>>;$/;"	f
next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn next(&mut self) -> Option<Result<DirEntry>> {$/;"	f
next	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn next(&mut self) -> Option<&'a Ignore> {$/;"	f
next	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn next(&mut self) -> Option<Result<DirEntry, Error>> {$/;"	f
next	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn next(&mut self) -> Option<walkdir::Result<WalkEvent>> {$/;"	f
next_after_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn next_after_empty(&self, _text: &[u8], i: usize) -> usize {$/;"	f
next_after_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn next_after_empty(&self, text: &str, i: usize) -> usize {$/;"	f
next_after_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn next_after_empty(&self, text: &Self::Text, i: usize) -> usize;$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn next_back(&mut self) -> Option<u8> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn next_back(&mut self) -> Option<u8> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next_back(&mut self) -> Option<&'a str> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn next_back(&mut self) -> Option<(usize, usize, &'a str)> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next_back(&mut self) -> Option<(usize, usize, char)> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn next_back(&mut self) -> Option<char> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a OsStr> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a str> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	f
next_back	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char {$/;"	f
next_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char;$/;"	f
next_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_char(&mut self) -> Result<Option<u8>> {$/;"	f
next_char_or_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_char_or_null(&mut self) -> Result<u8> {$/;"	f
next_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>>$/;"	f
next_element_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	f
next_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_inst	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn next_inst(&self) -> Patch {$/;"	f
next_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	f
next_key_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	f
next_line_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn next_line_help(mut self, nlh: bool) -> Self {$/;"	f
next_or_eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn next_or_eof<'de, R>(read: &mut R) -> Result<u8>$/;"	f
next_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_pos	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn next_pos(&self) -> usize {$/;"	f
next_si	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    unsafe fn next_si(&self, si: StatePtr, text: &[u8], i: usize) -> StatePtr {$/;"	f
next_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn next_state($/;"	f
next_unchecked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    unsafe fn next_unchecked(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	f
next_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^pub fn next_utf8(text: &[u8], i: usize) -> usize {$/;"	f
next_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	f
next_value_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Error>$/;"	f
nfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn nfa(mut self) -> Self {$/;"	f
no_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn no_color() -> Buffer {$/;"	f
no_expansion	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn no_expansion(&mut self) -> Option<Cow<[u8]>> {$/;"	f
no_expansion	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, [u8]>> {$/;"	f
no_expansion	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn no_expansion(&mut self) -> Option<Cow<str>> {$/;"	f
no_expansion	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, str>> {$/;"	f
no_ignore	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn no_ignore(&self) -> bool {$/;"	f
no_ignore_dot	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn no_ignore_dot(&self) -> bool {$/;"	f
no_ignore_exclude	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn no_ignore_exclude(&self) -> bool {$/;"	f
no_ignore_files	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn no_ignore_files(&self) -> bool {$/;"	f
no_ignore_global	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn no_ignore_global(&self) -> bool {$/;"	f
no_ignore_parent	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn no_ignore_parent(&self) -> bool {$/;"	f
no_ignore_vcs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn no_ignore_vcs(&self) -> bool {$/;"	f
no_ignores	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn no_ignores() {$/;"	f
no_read_permissions	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn no_read_permissions() {$/;"	f
nonascii	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn nonascii() {$/;"	f
none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    pub fn none<T>(&self, msg: T) -> Format<T>$/;"	f
none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn none(&mut self) -> Result<(), Error> {$/;"	f
none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn none(&mut self) -> Result<(), Error>;$/;"	f
none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn none(&mut self) -> Result<(), Error> {$/;"	f
none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	f
none	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn none() -> SortBy {$/;"	f
nonzero_integers	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nonzero_integers	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nop_reserve	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
normal_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn normal_path(unix: &str) -> String {$/;"	f
not_ignored	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    macro_rules! not_ignored {$/;"	d
not_present_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn not_present_empty() {$/;"	f
num_byte_classes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn num_byte_classes(&self) -> usize {$/;"	f
num_chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn num_chars(&self) -> usize {$/;"	f
num_ignores	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn num_ignores(&self) -> u64 {$/;"	f
num_ignores	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn num_ignores(&self) -> u64 {$/;"	f
num_pending	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn num_pending(&self) -> usize {$/;"	f
num_states	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn num_states(&self) -> usize {$/;"	f
num_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	f
num_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	f
num_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64>;$/;"	f
num_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	f
num_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	f
num_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	f
num_whitelists	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn num_whitelists(&self) -> u64 {$/;"	f
num_whitelists	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn num_whitelists(&self) -> u64 {$/;"	f
number	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn number(mut self) -> RGArg {$/;"	f
number_of_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn number_of_values(mut self, qty: u64) -> Self {$/;"	f
occurrences_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn occurrences_of<S: AsRef<str>>(&self, name: S) -> u64 {$/;"	f
occurrences_of	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn occurrences_of(&self, name: &str) -> u64 {$/;"	f
octal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn octal(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
octal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn octal(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
oibits	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/lib.rs	/^    fn oibits() {$/;"	f
ok_or	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^fn ok_or<T, E>(t: Option<T>, e: E) -> Result<T, E> {$/;"	f
one_dir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn one_dir() {$/;"	f
one_dir_one_file	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn one_dir_one_file() {$/;"	f
one_file	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn one_file() {$/;"	f
only_ignores	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn only_ignores() {$/;"	f
only_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	f
only_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	f
only_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn only_utf8(&self) -> bool {$/;"	f
optbuilder_display1	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn optbuilder_display1() {$/;"	f
optbuilder_display2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn optbuilder_display2() {$/;"	f
optbuilder_display3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn optbuilder_display3() {$/;"	f
optbuilder_display_multiple_aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn optbuilder_display_multiple_aliases() {$/;"	f
optbuilder_display_single_alias	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn optbuilder_display_single_alias() {$/;"	f
option_details_for_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^    fn option_details_for_path(&self, path: &str) -> String {$/;"	f
opts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn opts(&self) -> Iter<OptBuilder<'a, 'b>> {$/;"	f
or	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    pub fn or(self, other: Self) -> Self {$/;"	f
or_insert	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn or_insert(self, default: Value) -> &'a mut Value {$/;"	f
or_insert_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn or_insert_with<F>(self, default: F) -> &'a mut Value$/;"	f
original	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn original(&self) -> &str {$/;"	f
other	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn other(&self) -> bool {$/;"	f
output_kind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn output_kind(&self) -> OutputKind {$/;"	f
ov	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn ov(globs: &[&str]) -> Override {$/;"	f
overflow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^macro_rules! overflow {$/;"	d
overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	f
overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	f
overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]>;$/;"	f
overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	f
overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	f
overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	f
overrides	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn overrides(mut self, name: &'static str) -> RGArg {$/;"	f
overrides	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn overrides(&self) -> Result<Override> {$/;"	f
overrides	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn overrides(x: overrides::Glob<'a>) -> IgnoreMatch<'a> {$/;"	f
overrides	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn overrides(&mut self, overrides: Override) -> &mut IgnoreBuilder {$/;"	f
overrides	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn overrides(&mut self, overrides: Override) -> &mut WalkBuilder {$/;"	f
overrides_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn overrides_with(mut self, name: &'a str) -> Self {$/;"	f
overrides_with_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn overrides_with_all(mut self, names: &[&'a str]) -> Self {$/;"	f
p	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^        fn p(ips: Vec<u32>, flags: u8) -> bool {$/;"	f
p	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^        fn p(n: i32) -> bool {$/;"	f
p	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^        fn p(n: u32) -> bool {$/;"	f
p	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^        fn p(cp: char) -> bool {$/;"	f
p	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f
param	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn param(&self, param: &str) -> Option<usize> {$/;"	f
parent	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn parent(&self) -> Option<Ignore> {$/;"	f
parents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn parents(&mut self, yes: bool) -> &mut IgnoreBuilder {$/;"	f
parents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn parents(&self) -> Parents {$/;"	f
parents	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn parents(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
parse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^        fn parse() -> Self {$/;"	f
parse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    pub fn parse(mut self) -> Arg<'a, 'a> {$/;"	f
parse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn parse(&self) -> Result<Parsed, Error> {$/;"	f
parse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^        fn parse(input: ParseStream) -> parse::Result<Self> {$/;"	f
parse	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn parse() -> Result<Args> {$/;"	f
parse	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/config.rs	/^fn parse<P: AsRef<Path>>($/;"	f
parse_any_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_any_number(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	f
parse_any_signed_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_any_signed_number(&mut self) -> Result<ParserNumber> {$/;"	f
parse_decimal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_decimal($/;"	f
parse_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^fn parse_escape<'de, R: Read<'de>>(read: &mut R, scratch: &mut Vec<u8>) -> Result<()> {$/;"	f
parse_excludes_file	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^fn parse_excludes_file(data: &[u8]) -> Option<PathBuf> {$/;"	f
parse_excludes_file1	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn parse_excludes_file1() {$/;"	f
parse_excludes_file2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn parse_excludes_file2() {$/;"	f
parse_excludes_file3	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn parse_excludes_file3() {$/;"	f
parse_exponent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_exponent($/;"	f
parse_exponent_overflow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_exponent_overflow($/;"	f
parse_flag	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn parse_flag($/;"	f
parse_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^        fn parse_from<I, T>(argv: I) -> Self$/;"	f
parse_help_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn parse_help_subcommand<I, T>(&self, it: &mut I) -> ClapResult<ParseResult<'a>>$/;"	f
parse_human_readable_size	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn parse_human_readable_size($/;"	f
parse_ident	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_ident(&mut self, ident: &[u8]) -> Result<()> {$/;"	f
parse_index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^fn parse_index(s: &str) -> Option<usize> {$/;"	f
parse_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_integer(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	f
parse_ip_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	d
parse_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn parse_line(line: String) -> Option<MountInfo> {$/;"	f
parse_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn parse_line(line: String) -> Option<Subsys> {$/;"	f
parse_line_col	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^fn parse_line_col(msg: &mut String) -> Option<(usize, usize)> {$/;"	f
parse_lit_into_expr_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_expr_path($/;"	f
parse_lit_into_lifetimes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_lifetimes($/;"	f
parse_lit_into_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_path(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Path, ()> {$/;"	f
parse_lit_into_ty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_ty(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Type, ()> {$/;"	f
parse_lit_into_where	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_into_where($/;"	f
parse_lit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn parse_lit_str<T>(s: &syn::LitStr) -> parse::Result<T>$/;"	f
parse_long_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn parse_long_arg<I, T>($/;"	f
parse_long_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_long_integer($/;"	f
parse_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_number(&mut self, positive: bool, significand: u64) -> Result<ParserNumber> {$/;"	f
parse_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        fn parse_number(s: &str) -> Option<u8> {$/;"	f
parse_object_colon	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_object_colon(&mut self) -> Result<()> {$/;"	f
parse_opt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn parse_opt($/;"	f
parse_reader	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/config.rs	/^fn parse_reader<R: io::Read>($/;"	f
parse_short_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn parse_short_arg($/;"	f
parse_socket_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	d
parse_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'a, 's, str>> {$/;"	f
parse_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>> {$/;"	f
parse_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>>;$/;"	f
parse_str_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str_bytes<'s, T, F>($/;"	f
parse_str_raw	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn parse_str_raw<'s>($/;"	f
parse_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn parse_subcommand<I, T>($/;"	f
parse_whitespace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn parse_whitespace(&mut self) -> Result<Option<u8>> {$/;"	f
parser_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn parser_of<'a, 'b>(p: &'b Parser<'a, 'b>, sc: &str) -> &'b Parser<'a, 'b> {$/;"	f
partial	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn partial(err: Error) -> Vec<Error> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn partial_cmp(&self, other: &$lhs) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^            fn partial_cmp(&self, other: &$rhs) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn partial_cmp(&self, other: &BStr) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn partial_cmp(&self, other: &BString) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn partial_cmp(&self, other: &Key<'ko>) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn partial_cmp(&self, other: &Level) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn partial_cmp(&self, other: &LevelFilter) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn partial_cmp(&self, other: &Char) -> Option<Ordering> {$/;"	f
partial_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn partial_cmp(&self, other: &char) -> Option<Ordering> {$/;"	f
partialeq_numeric	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/partial_eq.rs	/^macro_rules! partialeq_numeric {$/;"	d
path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn path(&self) -> Option<&Path> {$/;"	f
path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^        pub fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn path(&self) -> &Path {$/;"	f
path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path_default	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn path_default(&self) -> PathBuf {$/;"	f
path_equals	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn path_equals(dent: &DirEntry, handle: &Handle) -> Result<bool, Error> {$/;"	f
path_is_symlink	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn path_is_symlink(&self) -> bool {$/;"	f
path_is_symlink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn path_is_symlink(&self) -> bool {$/;"	f
path_is_symlink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn path_is_symlink(&self) -> bool {$/;"	f
path_printer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn path_printer<W: WriteColor>($/;"	f
path_separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn path_separator(&self) -> Result<Option<u8>> {$/;"	f
path_string	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn path_string<P: AsRef<Path>>(path: P) -> String {$/;"	f
path_terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn path_terminator(&self) -> Option<u8> {$/;"	f
paths	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn paths(&self) -> Vec<PathBuf> {$/;"	f
paths	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn paths(&self) -> &[PathBuf] {$/;"	f
paths	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn paths(&self) -> Vec<PathBuf> {$/;"	f
pattern_empty	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn pattern_empty(&self) -> String {$/;"	f
pattern_from_os_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn pattern_from_os_str(&self, pat: &OsStr) -> Result<String> {$/;"	f
pattern_from_str	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn pattern_from_str(&self, pat: &str) -> String {$/;"	f
pattern_from_string	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn pattern_from_string(&self, pat: String) -> String {$/;"	f
pattern_line	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn pattern_line(&self, pat: String) -> String {$/;"	f
pattern_literal	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn pattern_literal(&self, pat: String) -> String {$/;"	f
patterns	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn patterns(&self) -> &[String] {$/;"	f
patterns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn patterns(&self) -> &[String] {$/;"	f
patterns	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn patterns(&self) -> Result<Vec<String>> {$/;"	f
pcre2_unicode	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn pcre2_unicode(&self) -> bool {$/;"	f
pcre2_version	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn pcre2_version(args: &Args) -> Result<bool> {$/;"	f
peek	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>>;$/;"	f
peek_end_of_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_end_of_value(&mut self) -> Result<()> {$/;"	f
peek_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_error(&self, reason: ErrorCode) -> Error {$/;"	f
peek_invalid_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_invalid_type(&mut self, exp: &dyn Expected) -> Error {$/;"	f
peek_or_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn peek_or_null(&mut self) -> Result<u8> {$/;"	f
peek_position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	f
peek_position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn peek_position(&self) -> Position;$/;"	f
period_us	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn period_us(&self) -> Option<usize> {$/;"	f
place_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn place_lifetime() -> syn::LifetimeDef {$/;"	f
pointer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn pointer(&self, pointer: &str) -> Option<&Value> {$/;"	f
pointer_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn pointer_mut(&mut self, pointer: &str) -> Option<&mut Value> {$/;"	f
pop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn pop(&mut self) {$/;"	f
pop_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn pop_byte(&mut self) -> Option<u8> {$/;"	f
pop_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn pop_char(&mut self) -> Option<char> {$/;"	f
pop_split_hole	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn pop_split_hole(&mut self) -> ResultOrEmpty {$/;"	f
pos	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    pub fn pos(&self) -> usize {$/;"	f
pos	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	f
pos	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	f
pos	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	f
pos_help_double_lit_single_quote	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_help_double_lit_single_quote() {$/;"	f
pos_help_lit_single_quote	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_help_lit_single_quote() {$/;"	f
pos_help_newline	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_help_newline() {$/;"	f
pos_help_newline_lit_sq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_help_newline_lit_sq() {$/;"	f
pos_mult	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_mult() {$/;"	f
pos_mult_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_mult_help() {$/;"	f
pos_req	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_req() {$/;"	f
pos_req_mult_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn pos_req_mult_help() {$/;"	f
position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn position(&self) -> Position {$/;"	f
position	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn position(&self) -> Position;$/;"	f
position_of_index	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn position_of_index(&self, i: usize) -> Position {$/;"	f
positional	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn positional(name: &'static str, value_name: &'static str) -> RGArg {$/;"	f
positionals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn positionals(&self) -> map::Values<PosBuilder<'a, 'b>> {$/;"	f
positive_fallback_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn positive_fallback_forward() {$/;"	f
positive_sse2_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^    fn positive_sse2_forward() {$/;"	f
possible_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn possible_subcommand(&self, arg_os: &OsStr) -> (bool, Option<&str>) {$/;"	f
possible_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	f
possible_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	f
possible_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]>;$/;"	f
possible_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	f
possible_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	f
possible_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	f
possible_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn possible_value(mut self, name: &'b str) -> Self {$/;"	f
possible_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn possible_values(mut self, names: &[&'b str]) -> Self {$/;"	f
possible_values	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn possible_values(mut self, values: &[&'static str]) -> RGArg {$/;"	f
possible_values_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^    fn possible_values_match() {$/;"	f
possible_values_nomatch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^    fn possible_values_nomatch() {$/;"	f
precedence	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn precedence() {$/;"	f
precondition	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_no_de_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn precondition_no_de_lifetime(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_sized	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn precondition_sized(cx: &Ctxt, cont: &Container) {$/;"	f
prefilter_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn prefilter_state(&self) -> PrefilterState {$/;"	f
prefilter_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn prefilter_state(&self) -> PrefilterState {$/;"	f
prefix_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn prefix_at(&self, text: &[u8], at: usize) -> Option<usize> {$/;"	f
prefix_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn prefix_at($/;"	f
prefixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn prefixes(lits: &Literals) -> Self {$/;"	f
prefixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn prefixes(lits: &Literals) -> SingleByteSet {$/;"	f
prefixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn prefixes(lits: Literals) -> Self {$/;"	f
prefixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn prefixes(_: Literals) -> Self {$/;"	f
prepare_enum_variant_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn prepare_enum_variant_enum($/;"	f
preprocessor	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn preprocessor(&self) -> Option<PathBuf> {$/;"	f
preprocessor	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn preprocessor($/;"	f
preprocessor_globs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn preprocessor_globs(&self) -> Result<Override> {$/;"	f
preprocessor_globs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn preprocessor_globs($/;"	f
pretend_fields_used	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^fn pretend_fields_used(cont: &Container) -> TokenStream {$/;"	f
pretend_used	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^pub fn pretend_used(cont: &Container) -> TokenStream {$/;"	f
pretend_variants_used	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^fn pretend_variants_used(cont: &Container) -> TokenStream {$/;"	f
pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn pretty(writer: W) -> Self {$/;"	f
previous_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char {$/;"	f
previous_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char;$/;"	f
primitive_deserializer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	d
primitive_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	d
print	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn print($/;"	f
print	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	f
print_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn print_help(&mut self) -> ClapResult<()> {$/;"	f
print_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn print_help(&self) -> ClapResult<()> {$/;"	f
print_long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn print_long_help(&mut self) -> ClapResult<()> {$/;"	f
print_stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn print_stats($/;"	f
print_stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn print_stats($/;"	f
print_stats_human	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn print_stats_human($/;"	f
print_stats_json	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn print_stats_json($/;"	f
print_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn print_version<W: Write>(&self, w: &mut W, use_long: bool) -> ClapResult<()> {$/;"	f
printer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn printer<W: WriteColor>(&self, wtr: W) -> Result<Printer<W>> {$/;"	f
printer	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn printer(&mut self) -> &mut Printer<W> {$/;"	f
printer_json	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn printer_json<W: io::Write>(&self, wtr: W) -> Result<JSON<W>> {$/;"	f
printer_standard	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn printer_standard<W: WriteColor>($/;"	f
printer_summary	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn printer_summary<W: WriteColor>($/;"	f
private	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^mod private {$/;"	m
private	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^mod private {$/;"	m
private	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/index.rs	/^mod private {$/;"	m
process_arg_overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn process_arg_overrides<'b>($/;"	f
prop_decode_last_matches_std	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^    fn prop_decode_last_matches_std() {$/;"	f
prop_decode_matches_std	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^    fn prop_decode_matches_std() {$/;"	f
prop_encode_matches_std	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^    fn prop_encode_matches_std() {$/;"	f
prop_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn prop_matches_naive($/;"	f
prop_prefix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn prop_prefix_is_substring($/;"	f
prop_read_write_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn prop_read_write_i32() {$/;"	f
prop_read_write_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn prop_read_write_u32() {$/;"	f
prop_roundtrip	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^    fn prop_roundtrip() {$/;"	f
prop_roundtrip_last	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^    fn prop_roundtrip_last() {$/;"	f
prop_state_encode_decode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn prop_state_encode_decode() {$/;"	f
prop_suffix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn prop_suffix_is_substring($/;"	f
propagate_globals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn propagate_globals(&mut self) {$/;"	f
propagate_globals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn propagate_globals(&mut self, global_arg_vec: &[&'a str]) {$/;"	f
propagate_help_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn propagate_help_version(&mut self) {$/;"	f
propagate_settings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn propagate_settings(&mut self) {$/;"	f
ptr_add	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn ptr_add(ptr: *const u8, amt: usize) -> *const u8 {$/;"	f
ptr_sub	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn ptr_sub(ptr: *const u8, amt: usize) -> *const u8 {$/;"	f
push	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn push(&mut self, spec: Option<ColorSpec>) {$/;"	f
push	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn push(&mut self, dent: &DirEntry) -> Result<()> {$/;"	f
push	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn push(&mut self, err: Error) {$/;"	f
push_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn push_byte(&mut self, byte: u8) {$/;"	f
push_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn push_char(&mut self, ch: char) {$/;"	f
push_compiled	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn push_compiled(&mut self, inst: Inst) {$/;"	f
push_hole	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn push_hole(&mut self, inst: InstHole) -> Hole {$/;"	f
push_ignore_io	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn push_ignore_io(&mut self, err: Error) {$/;"	f
push_inst_ptr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn push_inst_ptr(data: &mut Vec<u8>, prev: &mut InstPtr, ip: InstPtr) {$/;"	f
push_split_hole	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn push_split_hole(&mut self) -> Hole {$/;"	f
push_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn push_str<B: AsRef<[u8]>>(&mut self, bytes: B) {$/;"	f
put	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^        fn put(&self, value: T) {$/;"	f
qc_bm_equals_nieve_find	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        fn qc_bm_equals_nieve_find(pile1: Vec<u8>, pile2: Vec<u8>) -> TestResult {$/;"	f
qc_bm_equals_single	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        fn qc_bm_equals_single(pile1: Vec<u8>, pile2: Vec<u8>) -> TestResult {$/;"	f
qc_bm_finds_first	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        fn qc_bm_finds_first(needle: Vec<u8>) -> TestResult {$/;"	f
qc_bm_finds_subslice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        fn qc_bm_finds_subslice($/;"	f
qc_bm_finds_trailing_needle	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^        fn qc_bm_finds_trailing_needle($/;"	f
qc_byteset_backwards_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_backwards_matches_naive($/;"	f
qc_byteset_backwards_not_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_backwards_not_matches_naive($/;"	f
qc_byteset_forward_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_forward_matches_naive($/;"	f
qc_byteset_forward_not_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^        fn qc_byteset_forward_not_matches_naive($/;"	f
qc_suffix_forward_maximal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        fn qc_suffix_forward_maximal(bytes: Vec<u8>) -> bool {$/;"	f
qc_suffix_reverse_maximal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^        fn qc_suffix_reverse_maximal(bytes: Vec<u8>) -> bool {$/;"	f
qc_twoway_fwd_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_fwd_matches_naive($/;"	f
qc_twoway_fwd_prefix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_fwd_prefix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
qc_twoway_fwd_suffix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_fwd_suffix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
qc_twoway_rev_matches_naive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_rev_matches_naive($/;"	f
qc_twoway_rev_prefix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_rev_prefix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
qc_twoway_rev_suffix_is_substring	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^    fn qc_twoway_rev_suffix_is_substring(bs: Vec<u8>) -> bool {$/;"	f
quiet	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn quiet(&self) -> bool {$/;"	f
quit_after_match	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn quit_after_match(&self) -> Result<bool> {$/;"	f
quit_now	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn quit_now(&self) {$/;"	f
quota_us	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn quota_us(&self) -> Option<usize> {$/;"	f
quote_block	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^macro_rules! quote_block {$/;"	d
quote_expr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^macro_rules! quote_expr {$/;"	d
range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn range(&self) -> Range<usize> {$/;"	f
range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn range(&self) -> Range<usize> {$/;"	f
range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^mod range {$/;"	m
rank	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    fn rank(b: u8) -> usize {$/;"	f
raw	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn raw(self, raw: bool) -> Self {$/;"	f
read_captures_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn read_captures_at<'t>($/;"	f
read_captures_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn read_captures_at<'t>($/;"	f
read_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn read_dir(&mut self) -> Result<fs::ReadDir, Error> {$/;"	f
read_matches_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    pub fn read_matches_at($/;"	f
read_unaligned_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^unsafe fn read_unaligned_usize(ptr: *const u8) -> usize {$/;"	f
read_unaligned_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^unsafe fn read_unaligned_usize(ptr: *const u8) -> usize {$/;"	f
read_vari32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn read_vari32(data: &[u8]) -> (i32, usize) {$/;"	f
read_varu32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn read_varu32(data: &[u8]) -> (u32, usize) {$/;"	f
realloc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn realloc($/;"	f
realloc	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn realloc(&self, ptr: *mut u8, layout: Layout, new_size: usize) -> *mut u8 {$/;"	f
realloc_excess	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn realloc_excess($/;"	f
reconfigure	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn reconfigure(self) -> Result<ArgMatches> {$/;"	f
recv	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn recv(&self) -> Option<Message> {$/;"	f
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_fwd.rs	/^    pub static ref GRAPHEME_BREAK_FWD: ::regex_automata::SparseDFA<&'static [u8], u16> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/grapheme_break_rev.rs	/^    pub static ref GRAPHEME_BREAK_REV: ::regex_automata::SparseDFA<&'static [u8], u16> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/regional_indicator_rev.rs	/^    pub static ref REGIONAL_INDICATOR_REV: ::regex_automata::DenseDFA<&'static [u8], u8> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/sentence_break_fwd.rs	/^    pub static ref SENTENCE_BREAK_FWD: ::regex_automata::SparseDFA<&'static [u8], u32> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/simple_word_fwd.rs	/^    pub static ref SIMPLE_WORD_FWD: ::regex_automata::SparseDFA<&'static [u8], u16> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_fwd.rs	/^    pub static ref WHITESPACE_ANCHORED_FWD: ::regex_automata::DenseDFA<&'static [u8], u8> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/whitespace_anchored_rev.rs	/^    pub static ref WHITESPACE_ANCHORED_REV: ::regex_automata::DenseDFA<&'static [u8], u8> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/fsm/word_break_fwd.rs	/^    pub static ref WORD_BREAK_FWD: ::regex_automata::SparseDFA<&'static [u8], u32> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^    static ref COUNT: usize = HASHMAP.len();$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^    static ref EXAMPLE: u8 = 42;$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^    static ref HASHMAP: HashMap<u32, &'static str> = {$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^    static ref NUMBER: u32 = times_two(21);$/;"	c
ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/lib.rs	/^        static ref RE: Regex = Regex::new("...").unwrap();$/;"	c
ref	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^        static ref LONG_VERSION: String = long_version(None, true);$/;"	c
ref	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^        static ref RE: Regex =$/;"	c
ref	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^            static ref RE: Regex = Regex::new(r"^[\\pL\\pN]+$").unwrap();$/;"	c
regex	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    pub fn regex(&self) -> &R {$/;"	f
regex_size_limit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn regex_size_limit(&self) -> Result<Option<usize>> {$/;"	f
regex_strings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn regex_strings(&self) -> &[String] {$/;"	f
regression_106	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn regression_106() {$/;"	f
regression_skip_current_dir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn regression_skip_current_dir() {$/;"	f
reject_invalid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^    fn reject_invalid() {$/;"	f
reject_invalid_last	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^    fn reject_invalid_last() {$/;"	f
remote	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn remote(&self) -> Option<&syn::Path> {$/;"	f
remove	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn remove(&mut self, arg: &str) {$/;"	f
remove	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn remove(self) -> Value {$/;"	f
remove	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn remove<Q>(&mut self, key: &Q) -> Option<Value>$/;"	f
remove_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn remove_all(&mut self, args: &[&str]) {$/;"	f
remove_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn remove_char(&mut self, at: usize) -> char {$/;"	f
remove_overrides	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn remove_overrides(&mut self, matcher: &mut ArgMatcher) {$/;"	f
rename_all_rules	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	f
rename_by_rules	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	f
rename_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^fn rename_fields() {$/;"	f
rename_variants	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/case.rs	/^fn rename_variants() {$/;"	f
repeat_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^fn repeat_byte(b: u8) -> usize {$/;"	f
repeatn	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn repeatn(&self, n: usize) -> Vec<u8> {$/;"	f
replace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replace<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
replace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn replace<'t, R: Replacer>($/;"	f
replace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn replace<'t, R: Replacer>($/;"	f
replace_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	f
replace_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	f
replace_append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut Vec<u8>) {$/;"	f
replace_append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	f
replace_append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>);$/;"	f
replace_append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut String) {$/;"	f
replace_append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	f
replace_append	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String);$/;"	f
replace_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replace_into<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
replace_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    fn replace_range<R, B>(&mut self, range: R, replace_with: B)$/;"	f
replacement	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/try.rs	/^pub fn replacement() -> TokenStream {$/;"	f
replacement	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn replacement(&self) -> Option<Vec<u8>> {$/;"	f
replacen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replacen<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
replacen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	f
replacen	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	f
replacen_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn replacen_into<N: AsRef<[u8]>, R: AsRef<[u8]>>($/;"	f
require_delimiter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn require_delimiter(mut self, d: bool) -> Self {$/;"	f
require_equals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn require_equals(mut self, r: bool) -> Self {$/;"	f
require_git	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn require_git(&mut self, yes: bool) -> &mut IgnoreBuilder {$/;"	f
require_git	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn require_git(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
required	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn required(&self) -> Iter<&str> {$/;"	f
required	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn required(self, r: bool) -> Self {$/;"	f
required	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn required(mut self, r: bool) -> Self {$/;"	f
required_if	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn required_if(mut self, arg: &'a str, val: &'b str) -> Self {$/;"	f
required_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn required_ifs(mut self, ifs: &[(&'a str, &'b str)]) -> Self {$/;"	f
required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	f
required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	f
required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]>;$/;"	f
required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn required_unless(mut self, name: &'a str) -> Self {$/;"	f
required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	f
required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	f
required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	f
required_unless	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn required_unless(mut self, names: &[&'static str]) -> RGArg {$/;"	f
required_unless_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn required_unless_all(mut self, names: &[&'a str]) -> Self {$/;"	f
required_unless_one	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn required_unless_one(mut self, names: &[&'a str]) -> Self {$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]>;$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn requires(mut self, name: &'a str) -> Self {$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn requires(mut self, n: &'a str) -> Self {$/;"	f
requires_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn requires_all(mut self, names: &[&'a str]) -> Self {$/;"	f
requires_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn requires_all(mut self, ns: &[&'a str]) -> Self {$/;"	f
requires_default	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn requires_default(field: &attr::Field, _variant: Option<&attr::Variant>) -> bool {$/;"	f
requires_if	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn requires_if(mut self, val: &'b str, arg: &'a str) -> Self {$/;"	f
requires_ifs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn requires_ifs(mut self, ifs: &[(&'b str, &'a str)]) -> Self {$/;"	f
reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	f
reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()>;$/;"	f
reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn reset(&self) -> bool {$/;"	f
reset_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn reset_size(&mut self) {$/;"	f
resize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    fn resize(&mut self, num_insts: usize, ncaps: usize) {$/;"	f
resolve_git_commondir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^fn resolve_git_commondir($/;"	f
respan_token_stream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn respan_token_stream(stream: TokenStream, span: Span) -> TokenStream {$/;"	f
respan_token_tree	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn respan_token_tree(mut token: TokenTree, span: Span) -> TokenTree {$/;"	f
restore_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn restore_state(&mut self, state: State) -> Option<StatePtr> {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn reverse(needle: &[u8]) -> Freqy {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn reverse($/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn reverse(needle: &[u8], kind: SuffixKind) -> Suffix {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn reverse(needle: &'b [u8]) -> TwoWay<'b> {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    pub fn reverse(mut self, yes: bool) -> Self {$/;"	f
reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    pub fn reverse($/;"	f
reverse_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn reverse_bytes(&mut self) {$/;"	f
reverse_chars	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn reverse_chars(&mut self) {$/;"	f
reverse_graphemes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn reverse_graphemes(&mut self) {$/;"	f
reverse_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn reverse_lossy() {$/;"	f
reverse_search	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^unsafe fn reverse_search<F: Fn(u8) -> bool>($/;"	f
reverse_ucd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn reverse_ucd() {$/;"	f
rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind<B: AsRef<[u8]>>(&self, needle: B) -> Option<usize> {$/;"	f
rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    pub fn rfind<B: AsRef<[u8]>>(&self, haystack: B) -> Option<usize> {$/;"	f
rfind	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn rfind(&self, haystack: &[u8]) -> Option<usize> {$/;"	f
rfind_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_byte(&self, byte: u8) -> Option<usize> {$/;"	f
rfind_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
rfind_candidate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn rfind_candidate($/;"	f
rfind_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_char(&self, ch: char) -> Option<usize> {$/;"	f
rfind_iter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_iter<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
rfind_large	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_large($/;"	f
rfind_large_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_large_imp($/;"	f
rfind_not_byteset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rfind_not_byteset<B: AsRef<[u8]>>(&self, byteset: B) -> Option<usize> {$/;"	f
rfind_small	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_small($/;"	f
rfind_small_imp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn rfind_small_imp($/;"	f
rfind_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    pub fn rfind_with($/;"	f
rsplit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rsplit_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
rsplitn_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn rsplitn_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
run	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn run(mut self) {$/;"	f
run	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn run<'s, F>(self, mkf: F)$/;"	f
run_one	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn run_one(&mut self, mut work: Work) -> WalkState {$/;"	f
run_recursive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn run_recursive<I>(&self, it: I) -> RecursiveResults$/;"	f
run_search_tests_fwd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn run_search_tests_fwd($/;"	f
run_search_tests_rev	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn run_search_tests_rev($/;"	f
runtime_cpu_features	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^fn runtime_cpu_features() -> Vec<&'static str> {$/;"	f
same_file_system	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn same_file_system(mut self, yes: bool) -> Self {$/;"	f
same_file_system	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn same_file_system() {$/;"	f
same_file_system	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn same_file_system() {$/;"	f
same_file_system	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn same_file_system(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
sc_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! sc_names {$/;"	d
scan_decimal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_decimal(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_exponent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_exponent(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_integer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_integer(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_integer128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^        fn scan_integer128(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_number	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_number(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_or_eof	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn scan_or_eof(&mut self, buf: &mut String) -> Result<u8> {$/;"	f
sdebug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^    macro_rules! sdebug {$/;"	d
sdebugln	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^    macro_rules! sdebugln {$/;"	d
search	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn search(args: &Args) -> Result<bool> {$/;"	f
search	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn search(&mut self, subject: &Subject) -> io::Result<SearchResult> {$/;"	f
search_decompress	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn search_decompress(&mut self, path: &Path) -> io::Result<SearchResult> {$/;"	f
search_parallel	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn search_parallel(args: &Args) -> Result<bool> {$/;"	f
search_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn search_path(&mut self, path: &Path) -> io::Result<SearchResult> {$/;"	f
search_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^fn search_path<M: Matcher, W: WriteColor>($/;"	f
search_preprocessor	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn search_preprocessor($/;"	f
search_reader	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn search_reader<R: io::Read>($/;"	f
search_reader	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^fn search_reader<M: Matcher, R: io::Read, W: WriteColor>($/;"	f
search_worker	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn search_worker<W: WriteColor>($/;"	f
search_zip	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn search_zip(&mut self, yes: bool) -> &mut SearchWorkerBuilder {$/;"	f
searcher	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn searcher(&self) -> ExecNoSync {$/;"	f
searcher	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn searcher(&self, paths: &[PathBuf]) -> Result<Searcher> {$/;"	f
searcher_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn searcher_str(&self) -> ExecNoSyncStr {$/;"	f
select	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    pub fn select(&mut self, name: &str) -> &mut TypesBuilder {$/;"	f
select_guard	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn select_guard(pattern: &[u8]) -> (u8, usize) {$/;"	f
send	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn send(&self, work: Work) {$/;"	f
send_quit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn send_quit(&self) {$/;"	f
send_sync_traits	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn send_sync_traits() {$/;"	f
sentence_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn sentence_indices(&self) -> SentenceIndices {$/;"	f
sentences	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn sentences(&self) -> Sentences {$/;"	f
sentences	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn sentences(bytes: &[u8]) -> Vec<&str> {$/;"	f
separator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn separator(&mut self, sep: Option<Vec<u8>>) {$/;"	f
separator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^    pub fn separator(&mut self, sep: Option<u8>) -> &mut PathPrinterBuilder {$/;"	f
seq_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	d
seq_impl	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	d
ser_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
serde_if_integer128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	d
serde_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn serde_path(&self) -> Cow<syn::Path> {$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/macros.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^                fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^                    fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^                fn serialize<__S>(&self, __serializer: __S) -> #serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^            fn serialize<__S>(&self, __s: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^            fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize<S>(&self, serializer: S) -> result::Result<S::Ok, S::Error>$/;"	f
serialize_adjacently_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_adjacently_tagged_variant($/;"	f
serialize_body	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<()> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<()> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<()> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Value> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<String> {$/;"	f
serialize_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<Value> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<String> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Value> {$/;"	f
serialize_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Value> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<()> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_char(self, value: char) -> Result<()> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Value> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<String> {$/;"	f
serialize_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<Value> {$/;"	f
serialize_display_bounded_length	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	d
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn serialize_element(&self, span: Span) -> TokenStream {$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_element	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f
serialize_entry	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_enum(params: &Parameters, variants: &[Variant], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_externally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_externally_tagged_variant($/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<()> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<()> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<()> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Value> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<String> {$/;"	f
serialize_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<Value> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<()> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<()> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<()> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Value> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<String> {$/;"	f
serialize_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<Value> {$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn serialize_field(&self, span: Span) -> TokenStream {$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^        fn serialize_i128(self, v: i128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_i128(self, _v: i128) -> Result<()> {$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_i128(self, value: i128) -> Result<()> {$/;"	f
serialize_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^        fn serialize_i128(self, value: i128) -> Result<Value> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<()> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<()> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Value> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<String> {$/;"	f
serialize_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<Value> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<()> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<()> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Value> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<String> {$/;"	f
serialize_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<Value> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<()> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<()> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Value> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<String> {$/;"	f
serialize_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<Value> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<()> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<()> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Value> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<String> {$/;"	f
serialize_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<Value> {$/;"	f
serialize_internally_tagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_internally_tagged_variant($/;"	f
serialize_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_into(params: &Parameters, type_into: &syn::Type) -> Fragment {$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn serialize_name(&self) -> String {$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_newtype_struct($/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<()>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<()>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<Value>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<String>$/;"	f
serialize_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<Value>$/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	f
serialize_newtype_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_none(self) -> Result<String> {$/;"	f
serialize_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<()>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<String>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<Value>$/;"	f
serialize_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<Value>$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<String> {$/;"	f
serialize_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct(params: &Parameters, fields: &[Field], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct_as_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_as_map($/;"	f
serialize_struct_as_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_as_struct($/;"	f
serialize_struct_tag_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_tag_field(cattrs: &attr::Container, struct_trait: &StructTrait) -> TokenStream {$/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_variant<'a>($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant_with_flatten	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_variant_with_flatten<'a>($/;"	f
serialize_struct_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_struct_visitor($/;"	f
serialize_tagged_newtype	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct_visitor	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_tuple_struct_visitor($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^        fn serialize_u128(self, v: u128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_u128(self, _v: u128) -> Result<()> {$/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^        fn serialize_u128(self, value: u128) -> Result<()> {$/;"	f
serialize_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^        fn serialize_u128(self, value: u128) -> Result<Value> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<()> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<()> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Value> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<String> {$/;"	f
serialize_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<Value> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<()> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<()> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Value> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<String> {$/;"	f
serialize_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<Value> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<()> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<()> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Value> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<String> {$/;"	f
serialize_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<Value> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<()> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<()> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Value> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<String> {$/;"	f
serialize_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<Value> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<String> {$/;"	f
serialize_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_unit_struct(cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<String> {$/;"	f
serialize_unit_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_untagged_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_untagged_variant($/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn serialize_variant($/;"	f
serialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn set(&mut self, _: ArgSettings) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn set(&mut self, s: AS) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn set(&mut self, ArgSettings);$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn set(&mut self, _: ArgSettings) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn set(mut self, s: ArgSettings) -> Self {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs	/^    pub fn set(&mut self, s: ArgSettings) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^        pub fn set(&mut self, s: $n) {$/;"	f
set	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
set_bg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_bg(&mut self, color: Option<Color>) -> &mut ColorSpec {$/;"	f
set_bold	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_bold(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_boxed_logger	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn set_boxed_logger(logger: Box<Log>) -> Result<(), SetLoggerError> {$/;"	f
set_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn set_color(&mut self, _: &ColorSpec) -> io::Result<()> {$/;"	f
set_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()> {$/;"	f
set_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()>;$/;"	f
set_empty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn set_empty(&mut self) {$/;"	f
set_errored	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^pub fn set_errored() {$/;"	f
set_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn set_failed(&mut self, _failed: &mut bool) {$/;"	f
set_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool) {$/;"	f
set_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool);$/;"	f
set_fg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_fg(&mut self, color: Option<Color>) -> &mut ColorSpec {$/;"	f
set_if_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set_if_none(&mut self, value: T) {$/;"	f
set_ignore_messages	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^pub fn set_ignore_messages(yes: bool) {$/;"	f
set_intense	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_intense(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_italic	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_italic(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_logger	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn set_logger(logger: &'static Log) -> Result<(), SetLoggerError> {$/;"	f
set_logger_inner	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^fn set_logger_inner<F>(make_logger: F) -> Result<(), SetLoggerError>$/;"	f
set_logger_racy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub unsafe fn set_logger_racy(logger: &'static Log) -> Result<(), SetLoggerError> {$/;"	f
set_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn set_match(&mut self) {$/;"	f
set_max_level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn set_max_level(level: LevelFilter) {$/;"	f
set_messages	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/messages.rs	/^pub fn set_messages(yes: bool) {$/;"	f
set_next	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn set_next(&mut self, si: StatePtr, cls: usize, next: StatePtr) {$/;"	f
set_non_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn set_non_match(self, at: usize) -> Result<T> {$/;"	f
set_opt	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set_opt<A: ToTokens>(&mut self, obj: A, value: Option<T>) {$/;"	f
set_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn set_range(&mut self, start: u8, end: u8) {$/;"	f
set_reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_reset(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_term_width	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn set_term_width(mut self, width: usize) -> Self {$/;"	f
set_true	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    fn set_true<A: ToTokens>(&mut self, obj: A) {$/;"	f
set_underline	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn set_underline(&mut self, yes: bool) -> &mut ColorSpec {$/;"	f
set_word	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn set_word(&mut self) {$/;"	f
set_word_boundary	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn set_word_boundary(&mut self) {$/;"	f
setb	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn setb(&mut self, s: ArgSettings) {$/;"	f
setting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn setting(mut self, setting: AppSettings) -> Self {$/;"	f
settings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn short<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn short(&self) -> Option<char> {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn short(&self) -> Option<char> {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn short(&self) -> Option<char>;$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn short(&self) -> Option<char> {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn short(&self) -> Option<char> {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn short(&self) -> Option<char> {$/;"	f
short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn short(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
short	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn short(mut self, name: &'static str) -> RGArg {$/;"	f
short_or_long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn short_or_long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
shortest_dfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn shortest_dfa(&self, text: &[u8], start: usize) -> dfa::Result<usize> {$/;"	f
shortest_dfa_reverse_suffix	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn shortest_dfa_reverse_suffix($/;"	f
shortest_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn shortest_match(&self, text: &[u8]) -> Option<usize> {$/;"	f
shortest_match	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn shortest_match(&self, text: &str) -> Option<usize> {$/;"	f
shortest_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn shortest_match_at(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	f
shortest_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn shortest_match_at(&self, text: &str, start: usize) -> Option<usize> {$/;"	f
shortest_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn shortest_match_at($/;"	f
shortest_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn shortest_match_at($/;"	f
shortest_match_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn shortest_match_at($/;"	f
shortest_nfa	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn shortest_nfa(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	f
shortest_nfa_type	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn shortest_nfa_type($/;"	f
shorts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! shorts {$/;"	d
should_ansi	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn should_ansi(&self) -> bool {$/;"	f
should_attempt_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn should_attempt_color(&self) -> bool {$/;"	f
should_decompress	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn should_decompress(&self, path: &Path) -> bool {$/;"	f
should_early_return_if_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const should_early_return_if_failed: bool = false;$/;"	c
should_early_return_if_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const should_early_return_if_failed: bool = true;$/;"	c
should_early_return_if_failed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/read.rs	/^    const should_early_return_if_failed: bool;$/;"	c
should_exec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^pub fn should_exec(num_insts: usize, text_len: usize) -> bool {$/;"	f
should_preprocess	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    fn should_preprocess(&self, path: &Path) -> bool {$/;"	f
should_show_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^fn should_show_arg(use_long: bool, arg: &ArgWithOrder) -> bool {$/;"	f
should_skip_entry	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn should_skip_entry(ig: &Ignore, dent: &DirEntry) -> bool {$/;"	f
should_suffix_scan	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn should_suffix_scan(&self) -> bool {$/;"	f
should_use	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn should_use(pattern: &[u8]) -> bool {$/;"	f
show_state_ptr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn show_state_ptr(si: StatePtr) -> String {$/;"	f
shrink	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn shrink(&self) -> Box<dyn Iterator<Item = BString>> {$/;"	f
shrink_in_place	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    unsafe fn shrink_in_place($/;"	f
siblings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn siblings() {$/;"	f
simple	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn simple() {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^pub mod size_hint {$/;"	m
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    pub fn size_limit(mut self, size_limit: usize) -> Self {$/;"	f
size_limit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn size_limit($/;"	f
skip	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn skip(&self, mut pc: usize) -> usize {$/;"	f
skip_current_dir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn skip_current_dir(&mut self) {$/;"	f
skip_current_dir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn skip_current_dir() {$/;"	f
skip_deserializing	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	f
skip_entry	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn skip_entry(&self, ent: &DirEntry) -> Result<bool, Error> {$/;"	f
skip_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	f
skip_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn skip_field(&self, span: Span) -> Option<TokenStream> {$/;"	f
skip_filesize	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn skip_filesize($/;"	f
skip_loop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn skip_loop($/;"	f
skip_serializing	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	f
skip_serializing_if	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn skip_serializing_if(&self) -> Option<&syn::ExprPath> {$/;"	f
skip_stdout	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn skip_stdout(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
skippable	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn skippable(&self) -> bool {$/;"	f
slots_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn slots_len(&self) -> usize {$/;"	f
slots_len	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    fn slots_len(&self) -> usize;$/;"	f
slow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn slow(slice: &[u8]) -> Result<(), Utf8Error> {$/;"	f
some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^macro_rules! some {$/;"	d
some_helper_function	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/lib.rs	/^fn some_helper_function(text: &str) -> bool {$/;"	f
sort	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sort() {$/;"	f
sort_by	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn sort_by<F>(mut self, cmp: F) -> Self$/;"	f
sort_by	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn sort_by(&self) -> Result<SortBy> {$/;"	f
sort_by_file_name	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn sort_by_file_name<F>(&mut self, cmp: F) -> &mut WalkBuilder$/;"	f
sort_by_file_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn sort_by_file_path<F>(&mut self, cmp: F) -> &mut WalkBuilder$/;"	f
sort_by_metadata_time	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^fn sort_by_metadata_time<G>($/;"	f
sort_max_open	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sort_max_open() {$/;"	f
sorted_ents	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn sorted_ents(&self) -> Vec<DirEntry> {$/;"	f
sorted_paths	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn sorted_paths(&self) -> Vec<PathBuf> {$/;"	f
source	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	f
source	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
source	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
source_is_object_safe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn source_is_object_safe() {$/;"	f
spaces	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs	/^    fn spaces [n]{{$/;"	f
spanned_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn spanned_tokens(s: &syn::LitStr) -> parse::Result<TokenStream> {$/;"	f
spec_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn spec_vals(&self, a: &ArgWithDisplay) -> String {$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit {$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit;$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t [u8]) -> Split<'r, 't> {$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t str) -> Split<'r, 't> {$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	f
split	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	f
split_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr) {$/;"	f
split_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr);$/;"	f
split_at_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn split_at_byte(&self, b: u8) -> (&OsStr, &OsStr);$/;"	f
split_at_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn split_at_byte(&self, byte: u8) -> (&OsStr, &OsStr) {$/;"	f
split_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn split_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
split_with_de_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn split_with_de_lifetime($/;"	f
splitn	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn splitn<'r, 't>($/;"	f
splitn	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn splitn<'r, 't>($/;"	f
splitn_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn splitn_str<'a, B: ?Sized + AsRef<[u8]>>($/;"	f
standard_filters	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn standard_filters(&mut self, yes: bool) -> &mut WalkBuilder {$/;"	f
standard_stream_is_send	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn standard_stream_is_send() {$/;"	f
start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_bytes.rs	/^    pub fn start(&self) -> usize {$/;"	f
start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_unicode.rs	/^    pub fn start(&self) -> usize {$/;"	f
start_flags	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn start_flags(&self, text: &[u8], at: usize) -> (EmptyFlags, StateFlags) {$/;"	f
start_flags_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn start_flags_reverse($/;"	f
start_ptr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn start_ptr(&self, si: StatePtr) -> StatePtr {$/;"	f
start_state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn start_state($/;"	f
starts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^        fn starts(h: &str, n: &OsStr) -> bool {$/;"	f
starts_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool {$/;"	f
starts_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool;$/;"	f
starts_with_digit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/error.rs	/^fn starts_with_digit(slice: &str) -> bool {$/;"	f
starts_with_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn starts_with_str<B: AsRef<[u8]>>(&self, prefix: B) -> bool {$/;"	f
state	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn state(&self, si: StatePtr) -> &State {$/;"	f
state_heap_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn state_heap_size(&self) -> usize {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn stats(&self) -> bool {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn stats(&self) -> Result<Option<Stats>> {$/;"	f
stats	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/search.rs	/^    pub fn stats(&self) -> Option<&Stats> {$/;"	f
status_t	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    type status_t = i32;$/;"	T
std_support	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^mod std_support {$/;"	m
std_support	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^mod std_support {$/;"	m
std_support	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^mod std_support {$/;"	m
std_support	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^mod std_support {$/;"	m
stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stderr(choice: ColorChoice) -> BufferWriter {$/;"	f
stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stderr(choice: ColorChoice) -> BufferedStandardStream {$/;"	f
stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stderr(choice: ColorChoice) -> StandardStream {$/;"	f
stdout	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stdout(choice: ColorChoice) -> BufferWriter {$/;"	f
stdout	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stdout(choice: ColorChoice) -> BufferedStandardStream {$/;"	f
stdout	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn stdout(choice: ColorChoice) -> StandardStream {$/;"	f
stdout	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn stdout(&self) -> cli::StandardStream {$/;"	f
stdout_handle	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn stdout_handle() -> Option<Handle> {$/;"	f
step	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn step(state: usize, b: u8) -> usize {$/;"	f
step	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^    fn step(&mut self, mut ip: InstPtr, mut at: InputAt) -> bool {$/;"	f
step	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/pikevm.rs	/^    fn step($/;"	f
stop_at	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^    fn stop_at<F>(&mut self, f: F)$/;"	f
stops_at_git_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn stops_at_git_dir() {$/;"	f
str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	f
str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn str(&mut self, v: &str) -> Result<(), Error>;$/;"	f
str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	f
str_width	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^fn str_width(s: &str) -> usize {$/;"	f
stream	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn stream(&self, s: &mut sval::value::Stream) -> sval::value::Result {$/;"	f
string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/export.rs	/^mod string {$/;"	m
strip	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^    fn strip<'a, P: 'a + AsRef<Path> + ?Sized>($/;"	f
strip_dot_prefix	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/subject.rs	/^    pub fn strip_dot_prefix(&mut self, yes: bool) -> &mut SubjectBuilder {$/;"	f
strip_prefix	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/pathutil.rs	/^pub fn strip_prefix<'a, P: AsRef<Path> + ?Sized>($/;"	f
strs_to_bstrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn strs_to_bstrs<S: AsRef<str>>(strs: &[S]) -> Vec<&[u8]> {$/;"	f
strs_to_bstrs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn strs_to_bstrs<S: AsRef<str>>(strs: &[S]) -> Vec<&[u8]> {$/;"	f
struct_from_ast	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ast.rs	/^fn struct_from_ast<'a>($/;"	f
struct_pattern	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/pretend.rs	/^fn struct_pattern(fields: &[Field]) -> TokenStream {$/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn struct_variant<V>($/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn struct_variant<V>($/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn struct_variant<V>($/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn struct_variant<V>(self, _fields: &'static [&'static str], _visitor: V) -> Result<V::Value>$/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn struct_variant<V>(self, fields: &'static [&'static str], visitor: V) -> Result<V::Value>$/;"	f
struct_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn struct_variant<V>($/;"	f
sub	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^fn sub(a: *const u8, b: *const u8) -> usize {$/;"	f
sub	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^fn sub(a: *const u8, b: *const u8) -> usize {$/;"	f
subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn subcommand(mut self, subcmd: App<'a, 'b>) -> Self {$/;"	f
subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn subcommand(&mut self, sc: SubCommand<'a>) {$/;"	f
subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn subcommand(&self) -> (&str, Option<&ArgMatches<'a>>) {$/;"	f
subcommand_details	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^    fn subcommand_details(&self) -> String {$/;"	f
subcommand_details	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn subcommand_details(p: &Parser) -> String {$/;"	f
subcommand_matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn subcommand_matches<S: AsRef<str>>(&self, name: S) -> Option<&ArgMatches<'a>> {$/;"	f
subcommand_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	f
subcommand_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	f
subcommands	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn subcommands<I>(mut self, subcmds: I) -> Self$/;"	f
subcommands	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn subcommands(&self) -> Iter<App> {$/;"	f
subcommands_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs	/^pub fn subcommands_of(p: &Parser) -> Vec<(String, String)> {$/;"	f
subcommands_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn subcommands_of(p: &Parser) -> String {$/;"	f
subject_builder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn subject_builder(&self) -> SubjectBuilder {$/;"	f
suffix_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^    fn suffix_enum() {$/;"	f
suffix_forward	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn suffix_forward() {$/;"	f
suffix_long	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^    fn suffix_long() {$/;"	f
suffix_reverse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn suffix_reverse() {$/;"	f
suffixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^    fn suffixes(bytes: &[u8]) -> Vec<&[u8]> {$/;"	f
suffixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn suffixes(lits: &Literals) -> Self {$/;"	f
suffixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    fn suffixes(lits: &Literals) -> SingleByteSet {$/;"	f
suffixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^    pub fn suffixes(lits: Literals) -> Self {$/;"	f
suffixes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/mod.rs	/^        pub fn suffixes(_: Literals) -> Self {$/;"	f
suggest	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn suggest(_: &str) -> Option<String> {$/;"	f
suggest	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn suggest(msg: &str) -> Option<String> {$/;"	f
suggest	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^fn suggest(msg: String) -> String {$/;"	f
suggest_multiline	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^fn suggest_multiline(msg: String) -> String {$/;"	f
suggest_pcre2	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^fn suggest_pcre2(msg: &str) -> Option<String> {$/;"	f
summary_kind	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn summary_kind(&self) -> Option<SummaryKind> {$/;"	f
supports_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn supports_color(&self) -> bool {$/;"	f
supports_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn supports_color(&self) -> bool;$/;"	f
sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn sval(&mut self, v: &sval::Value) -> Result<(), Error> {$/;"	f
sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn sval(&mut self, v: &sval_support::Value) -> Result<(), Error> {$/;"	f
sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn sval(&mut self, v: &sval_support::Value) -> Result<(), Error>;$/;"	f
sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn sval(&mut self, _: &internal::sval_support::Value) -> Result<(), Error> {$/;"	f
swap_greed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn swap_greed($/;"	f
swap_greed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn swap_greed(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
switch	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/app.rs	/^    fn switch(long_name: &'static str) -> RGArg {$/;"	f
sym_dir_follow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_dir_follow() {$/;"	f
sym_dir_nofollow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_dir_nofollow() {$/;"	f
sym_dir_self_loop_io_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_dir_self_loop_io_error() {$/;"	f
sym_file_follow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_file_follow() {$/;"	f
sym_file_nofollow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_file_nofollow() {$/;"	f
sym_file_self_loop_io_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_file_self_loop_io_error() {$/;"	f
sym_loop_detect	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_loop_detect() {$/;"	f
sym_noloop	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_noloop() {$/;"	f
sym_root_dir_follow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_dir_follow() {$/;"	f
sym_root_dir_nofollow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_dir_nofollow() {$/;"	f
sym_root_file_follow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_file_follow() {$/;"	f
sym_root_file_nofollow	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_file_nofollow() {$/;"	f
sym_self_loop_no_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_self_loop_no_error() {$/;"	f
symlink	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn symlink<P: AsRef<Path>, Q: AsRef<Path>>(src: P, dst: Q) {$/;"	f
symlink_dir	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn symlink_dir<P1: AsRef<Path>, P2: AsRef<Path>>($/;"	f
symlink_file	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn symlink_file<P1: AsRef<Path>, P2: AsRef<Path>>($/;"	f
symlink_loop	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn symlink_loop() {$/;"	f
symlinks	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn symlinks() {$/;"	f
syn_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/ctxt.rs	/^    pub fn syn_error(&self, err: syn::Error) {$/;"	f
system_info	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    pub struct system_info {$/;"	s
tag	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn tag(&self) -> &TagType {$/;"	f
tagged	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn tagged<P: AsRef<Path>>(self, path: P, lineno: u64) -> Error {$/;"	f
take	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    pub fn take(&mut self) -> Value {$/;"	f
takes_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn takes_value(&self) -> bool {$/;"	f
takes_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool {$/;"	f
takes_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool;$/;"	f
takes_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn takes_value(self, tv: bool) -> Self {$/;"	f
takes_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn takes_value(&self) -> bool {$/;"	f
takes_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn takes_value(&self) -> bool {$/;"	f
takes_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn takes_value(&self) -> bool {$/;"	f
target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut MetadataBuilder<'a> {$/;"	f
target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut RecordBuilder<'a> {$/;"	f
target	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn target(&self) -> &'a str {$/;"	f
template	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn template<S: Into<&'b str>>(mut self, s: S) -> Self {$/;"	f
term_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^mod term_size {$/;"	m
terminator	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^    pub fn terminator(&mut self, terminator: u8) -> &mut PathPrinterBuilder {$/;"	f
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/suggestions.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^mod test {$/;"	m
test	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^mod test {$/;"	m
test_256_parse_err_out_of_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_256_parse_err_out_of_range() {$/;"	f
test_256_parse_ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_256_parse_ok() {$/;"	f
test_cgroup_cpu_quota	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn test_cgroup_cpu_quota() {$/;"	f
test_cgroup_cpu_quota_ceil	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn test_cgroup_cpu_quota_ceil() {$/;"	f
test_cgroup_cpu_quota_divide_by_zero	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn test_cgroup_cpu_quota_divide_by_zero() {$/;"	f
test_cgroup_mount	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn test_cgroup_mount() {$/;"	f
test_clear	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_clear() {$/;"	f
test_cross_cmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_cross_cmp() {$/;"	f
test_cross_eq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_cross_eq() {$/;"	f
test_debug	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn test_debug() {$/;"	f
test_default_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn test_default_indices() {$/;"	f
test_default_indices_with_shorter_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn test_default_indices_with_shorter_lifetime() {$/;"	f
test_default_osvalues	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn test_default_osvalues() {$/;"	f
test_default_osvalues_with_shorter_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn test_default_osvalues_with_shorter_lifetime() {$/;"	f
test_default_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn test_default_values() {$/;"	f
test_default_values_with_shorter_lifetime	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    fn test_default_values_with_shorter_lifetime() {$/;"	f
test_error_trait	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_error_trait() {$/;"	f
test_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn test_from() {$/;"	f
test_from_sval	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn test_from_sval() {$/;"	f
test_get	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    fn test_get() {$/;"	f
test_get_physical	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^    fn test_get_physical() {$/;"	f
test_inv_memchr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^    fn test_inv_memchr() {$/;"	f
test_invalid_defs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    fn test_invalid_defs() {$/;"	f
test_is_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_is_none() {$/;"	f
test_level_case_insensitive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_case_insensitive() {$/;"	f
test_level_de_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_de_bytes() {$/;"	f
test_level_de_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_de_error() {$/;"	f
test_level_filter_case_insensitive	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_case_insensitive() {$/;"	f
test_level_filter_de_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_de_bytes() {$/;"	f
test_level_filter_de_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_de_error() {$/;"	f
test_level_filter_ser_de	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_ser_de() {$/;"	f
test_level_from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_level_from_str() {$/;"	f
test_level_ser_de	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_ser_de() {$/;"	f
test_level_show	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_level_show() {$/;"	f
test_levelfilter_from_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_levelfilter_from_str() {$/;"	f
test_levelfilter_show	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_levelfilter_show() {$/;"	f
test_load_mountinfo	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn test_load_mountinfo() {$/;"	f
test_load_subsys	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn test_load_subsys() {$/;"	f
test_metadata_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_metadata_builder() {$/;"	f
test_metadata_convenience_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_metadata_convenience_builder() {$/;"	f
test_no_reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_no_reset() {$/;"	f
test_record_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_builder() {$/;"	f
test_record_complete_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_complete_builder() {$/;"	f
test_record_convenience_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_convenience_builder() {$/;"	f
test_record_key_values_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_key_values_builder() {$/;"	f
test_reset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_reset() {$/;"	f
test_rgb_parse_err_bad_format	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_rgb_parse_err_bad_format() {$/;"	f
test_rgb_parse_err_out_of_range	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_rgb_parse_err_out_of_range() {$/;"	f
test_rgb_parse_ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_rgb_parse_ok() {$/;"	f
test_simple_parse_ok	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_simple_parse_ok() {$/;"	f
test_sval_structured	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn test_sval_structured() {$/;"	f
test_to_level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_to_level() {$/;"	f
test_to_level_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_to_level_filter() {$/;"	f
test_to_value_display	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn test_to_value_display() {$/;"	f
test_to_value_structured	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn test_to_value_structured() {$/;"	f
test_var_ansi_write_256	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_var_ansi_write_256() {$/;"	f
test_var_ansi_write_rgb	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn test_var_ansi_write_rgb() {$/;"	f
test_windows_osstr_starts_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^fn test_windows_osstr_starts_with() {$/;"	f
test_yaml	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    fn test_yaml() {$/;"	f
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ascii.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/mod.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/byteset/scalar.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/twoway.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/lib.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/expand.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/literal/imp.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/utf8.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/config.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/gitignore.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^mod tests {$/;"	m
tests	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^mod tests {$/;"	m
text	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_trait.rs	/^    pub fn text(&self) -> &'t R::Text {$/;"	f
threads	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn threads(&self) -> Result<usize> {$/;"	f
threads	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn threads(&self) -> usize {$/;"	f
threads	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn threads(&mut self, n: usize) -> &mut WalkBuilder {$/;"	f
times_two	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^fn times_two(n: u32) -> u32 { n * 2 }$/;"	f
tmp	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn tmp() -> Dir {$/;"	f
tmpdir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn tmpdir() -> TempDir {$/;"	f
tmpdir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn tmpdir() -> TempDir {$/;"	f
to_args	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn to_args(self) -> Result<Args> {$/;"	f
to_ascii_lowercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_ascii_lowercase(&self) -> Vec<u8> {$/;"	f
to_ascii_uppercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_ascii_uppercase(&self) -> Vec<u8> {$/;"	f
to_ascii_uppercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn to_ascii_uppercase(c: u8) -> u8 {$/;"	f
to_builder	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn to_builder(&self) -> RecordBuilder {$/;"	f
to_compile_errors	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/lib.rs	/^fn to_compile_errors(errors: Vec<syn::Error>) -> proc_macro2::TokenStream {$/;"	f
to_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^        fn to_key(&self) -> Key {$/;"	f
to_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	f
to_key	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn to_key(&self) -> Key;$/;"	f
to_level	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn to_level(&self) -> Option<Level> {$/;"	f
to_level_filter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn to_level_filter(&self) -> LevelFilter {$/;"	f
to_lowercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_lowercase(&self) -> Vec<u8> {$/;"	f
to_lowercase_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_lowercase_into(&self, buf: &mut Vec<u8>) {$/;"	f
to_os_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_os_str(&self) -> Result<&OsStr, Utf8Error> {$/;"	f
to_os_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_os_str_lossy(&self) -> Cow<OsStr> {$/;"	f
to_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^        fn to_owned(&self) -> BString {$/;"	f
to_owned	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn to_owned(&self) -> Self::Owned {$/;"	f
to_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_path(&self) -> Result<&Path, Utf8Error> {$/;"	f
to_path_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_path_lossy(&self) -> Cow<Path> {$/;"	f
to_raw_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^pub fn to_raw_value<T>(value: &T) -> Result<Box<RawValue>, Error>$/;"	f
to_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str(&self) -> Result<&str, Utf8Error> {$/;"	f
to_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str_lossy(&self) -> Cow<str> {$/;"	f
to_str_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str_lossy() {$/;"	f
to_str_lossy_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_str_lossy_into(&self, dest: &mut String) {$/;"	f
to_str_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^            fn to_str_slice(o: &OsString) -> &str {$/;"	f
to_str_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &OsStr {$/;"	f
to_str_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &str {$/;"	f
to_str_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^        fn to_str_slice(o: &OsString) -> &OsStr {$/;"	f
to_str_unchecked	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    unsafe fn to_str_unchecked(&self) -> &str {$/;"	f
to_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_string<T>(value: &T) -> Result<String>$/;"	f
to_string_pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_string_pretty<T>(value: &T) -> Result<String>$/;"	f
to_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	f
to_tokens	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	f
to_uppercase	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_uppercase(&self) -> Vec<u8> {$/;"	f
to_uppercase_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn to_uppercase_into(&self, buf: &mut Vec<u8>) {$/;"	f
to_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^            fn to_usize(i: &usize) -> usize {$/;"	f
to_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^        fn to_usize(_: &usize) -> usize {$/;"	f
to_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^        fn to_value(&self) -> Value {$/;"	f
to_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn to_value(&self) -> Value;$/;"	f
to_value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^pub fn to_value<T>(value: T) -> Result<Value, Error>$/;"	f
to_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_vec<T>(value: &T) -> Result<Vec<u8>>$/;"	f
to_vec_pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_vec_pretty<T>(value: &T) -> Result<Vec<u8>>$/;"	f
to_windows	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn to_windows($/;"	f
to_writer	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_writer<W, T>(writer: W, value: &T) -> Result<()>$/;"	f
to_writer_pretty	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^pub fn to_writer_pretty<W, T>(writer: W, value: &T) -> Result<()>$/;"	f
token	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs	/^fn token(b: u8) -> bool {$/;"	f
too_few_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn too_few_values<U>($/;"	f
too_many_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn too_many_values<V, U>(val: V, arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	f
touch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn touch<P: AsRef<Path>>(&self, path: P) {$/;"	f
touch_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn touch_all<P: AsRef<Path>>(&self, paths: &[P]) {$/;"	f
trace	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! trace {$/;"	d
translate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.13.0/src/linux.rs	/^    fn translate(mntinfo: MountInfo, subsys: Subsys) -> Option<Cgroup> {$/;"	f
transparent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	f
tri	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/lib.rs	/^macro_rules! tri {$/;"	d
trim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim(&self) -> &[u8] {$/;"	f
trim_end	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_end(&self) -> &[u8] {$/;"	f
trim_end_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_end_with<F: FnMut(char) -> bool>(&self, mut trim: F) -> &[u8] {$/;"	f
trim_left_matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn trim_left_matches(&self, b: u8) -> &OsStr;$/;"	f
trim_left_matches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^    fn trim_left_matches(&self, byte: u8) -> &OsStr {$/;"	f
trim_line	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_line(line: &mut Vec<u8>) {$/;"	f
trim_line_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_line_slice(mut line: &[u8]) -> &[u8] {$/;"	f
trim_record	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_record(record: &mut Vec<u8>, terminator: u8) {$/;"	f
trim_record_slice	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/io.rs	/^fn trim_record_slice(mut record: &[u8], terminator: u8) -> &[u8] {$/;"	f
trim_start	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_start(&self) -> &[u8] {$/;"	f
trim_start_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_start_with<F: FnMut(char) -> bool>(&self, mut trim: F) -> &[u8] {$/;"	f
trim_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn trim_with<F: FnMut(char) -> bool>(&self, mut trim: F) -> &[u8] {$/;"	f
try	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/try.rs	/^        macro_rules! try {$/;"	d
try_from_argmatches	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^        fn try_from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Result<Self, clap::Error>;$/;"	f
try_main	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn try_main(args: Args) -> Result<()> {$/;"	f
try_parse	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^        fn try_parse() -> Result<Self, clap::Error> {$/;"	f
try_parse_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs	/^        fn try_parse_from<I, T>(argv: I) -> Result<Self, clap::Error>$/;"	f
tuple_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_impls	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Error>$/;"	f
tuple_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	f
type_defs	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn type_defs(&self) -> Result<Vec<FileTypeDef>> {$/;"	f
type_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn type_from(&self) -> Option<&syn::Type> {$/;"	f
type_into	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn type_into(&self) -> Option<&syn::Type> {$/;"	f
type_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^    fn type_name(&self) -> String {$/;"	f
type_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^    fn type_name(&self) -> String {$/;"	f
type_of_item	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^fn type_of_item(cont: &Container) -> syn::Type {$/;"	f
type_try_from	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^    pub fn type_try_from(&self) -> Option<&syn::Type> {$/;"	f
types	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn types(&self) -> Result<Types> {$/;"	f
types	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/main.rs	/^fn types(args: &Args) -> Result<bool> {$/;"	f
types	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn types(x: types::Glob<'a>) -> IgnoreMatch<'a> {$/;"	f
types	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    pub fn types(&mut self, types: Types) -> &mut IgnoreBuilder {$/;"	f
types	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    fn types() -> Vec<&'static str> {$/;"	f
types	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn types(&mut self, types: Types) -> &mut WalkBuilder {$/;"	f
u32_to_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^fn u32_to_usize(n: u32) -> usize {$/;"	f
u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	f
u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn u64(&mut self, v: u64) -> Result<(), Error>;$/;"	f
u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	f
u64_to_usize	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^fn u64_to_usize(arg_name: &str, value: Option<u64>) -> Result<Option<usize>> {$/;"	f
u8_class	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^    fn u8_class(&self, b: u8) -> usize {$/;"	f
ucdtests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn ucdtests() -> Vec<GraphemeClusterBreakTest> {$/;"	f
ucdtests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/sentence.rs	/^    fn ucdtests() -> Vec<SentenceBreakTest> {$/;"	f
ucdtests	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn ucdtests() -> Vec<WordBreakTest> {$/;"	f
uint_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/from_primitive.rs	/^macro_rules! uint_to {$/;"	d
underline	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    pub fn underline(&self) -> bool {$/;"	f
unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	f
unexpected	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn unexpected(&self) -> Unexpected {$/;"	f
unexpected_multiple_usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn unexpected_multiple_usage<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	f
unicode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    pub fn unicode(mut self, yes: bool) -> Self {$/;"	f
unicode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn unicode(&mut self, yes: bool) -> &mut RegexBuilder {$/;"	f
unicode	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/re_builder.rs	/^                pub fn unicode(&mut self, yes: bool) -> &mut RegexSetBuilder {$/;"	f
unicode	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn unicode(&self) -> bool {$/;"	f
unicode_lit_star_backtracking_utf8bytes_default_utf8bytes_mismatch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn unicode_lit_star_backtracking_utf8bytes_default_utf8bytes_mismatch() {$/;"	f
uniescape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn uniescape(s: &str) -> String {$/;"	f
uniescape_vec	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/grapheme.rs	/^    fn uniescape_vec(strs: &[String]) -> Vec<String> {$/;"	f
unit_only	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f
unit_twoway_fwd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn unit_twoway_fwd() {$/;"	f
unit_twoway_rev	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/tests.rs	/^fn unit_twoway_rev() {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	f
unit_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	f
unknown_argument	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn unknown_argument<A, U>(arg: A, did_you_mean: &str, usage: U, color: ColorWhen) -> Self$/;"	f
unknown_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn unknown_field(field: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unknown_variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^            fn unknown_variant(variant: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unmatched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/overrides.rs	/^    fn unmatched() -> Glob<'a> {$/;"	f
unmatched	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/types.rs	/^    fn unmatched() -> Glob<'a> {$/;"	f
unraw	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/dummy.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unraw	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/internals/attr.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unrecognized_subcommand	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn unrecognized_subcommand<S, N>(subcmd: S, name: N, color: ColorWhen) -> Self$/;"	f
unrestricted_count	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn unrestricted_count(&self) -> u64 {$/;"	f
unset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn unset(&mut self, s: AS) {$/;"	f
unset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn unset(mut self, s: ArgSettings) -> Self {$/;"	f
unset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs	/^    pub fn unset(&mut self, s: ArgSettings) {$/;"	f
unset	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^        pub fn unset(&mut self, s: $n) {$/;"	f
unset_setting	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn unset_setting(mut self, setting: AppSettings) -> Self {$/;"	f
unset_settings	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn unset_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
unsetb	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn unsetb(&mut self, s: ArgSettings) {$/;"	f
unwrap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/compile.rs	/^    fn unwrap(self) -> Inst {$/;"	f
update	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/search/prefilter.rs	/^    pub fn update(&mut self, skipped: usize) {$/;"	f
uppercut_s_backtracking_bytes_default_bytes_mismatch	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/exec.rs	/^    fn uppercut_s_backtracking_bytes_default_bytes_mismatch() {$/;"	f
usable_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^    fn usable_size(&self, layout: &Layout) -> (usize, usize) {$/;"	f
usable_size	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/jemallocator-0.3.2/src/lib.rs	/^pub unsafe fn usable_size<T>(ptr: *const T) -> usize {$/;"	f
usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn usage<S: Into<&'b str>>(mut self, usage: S) -> Self {$/;"	f
usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs	/^    pub fn usage(&mut self, usage: String) {$/;"	f
usage	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn usage(&self) -> &str {$/;"	f
use_delimiter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn use_delimiter(mut self, d: bool) -> Self {$/;"	f
use_long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    fn use_long_help(&self) -> bool {$/;"	f
use_stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn use_stderr(&self) -> bool {$/;"	f
uses_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^    pub fn uses_bytes(&self) -> bool {$/;"	f
using_default_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn using_default_path(&self) -> bool {$/;"	f
usize_of	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn usize_of(&self, name: &str) -> Result<Option<usize>> {$/;"	f
usize_of_nonzero	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn usize_of_nonzero(&self, name: &str) -> Result<Option<usize>> {$/;"	f
usize_to_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/backtrack.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
usize_to_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
utf8_chunks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn utf8_chunks(&self) -> Utf8Chunks {$/;"	f
utf8_error	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_vec.rs	/^    pub fn utf8_error(&self) -> &Utf8Error {$/;"	f
utf8e	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn utf8e(valid_up_to: usize) -> Utf8Error {$/;"	f
utf8e2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn utf8e2(valid_up_to: usize, error_len: usize) -> Utf8Error {$/;"	f
val	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn val<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> Result<String, io::Error> {$/;"	f
val_delim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	f
val_delim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	f
val_delim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char>;$/;"	f
val_delim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	f
val_delim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	f
val_delim	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	f
val_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	f
val_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	f
val_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>>;$/;"	f
val_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	f
val_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	f
val_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	f
val_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	f
val_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	f
val_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str>;$/;"	f
val_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	f
val_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	f
val_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	f
valid	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn valid(&self) -> &'a str {$/;"	f
valid_up_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    pub fn valid_up_to(&self) -> usize {$/;"	f
validate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^pub fn validate(slice: &[u8]) -> Result<(), Utf8Error> {$/;"	f
validate	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    pub fn validate($/;"	f
validate_all_codepoints	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn validate_all_codepoints() {$/;"	f
validate_arg_conflicts	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_arg_conflicts(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	f
validate_arg_num_occurs	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_arg_num_occurs<A>($/;"	f
validate_arg_num_vals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_arg_num_vals<A>($/;"	f
validate_arg_requires	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_arg_requires<A>($/;"	f
validate_arg_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_arg_values<A>($/;"	f
validate_blacklist	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_blacklist(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	f
validate_errors	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn validate_errors() {$/;"	f
validate_matched_args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_matched_args(&self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
validate_multiple_codepoints	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/utf8.rs	/^    fn validate_multiple_codepoints() {$/;"	f
validate_required	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_required(&mut self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	f
validate_required_unless	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs	/^    fn validate_required_unless(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	f
validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	f
validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>> {$/;"	f
validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>>;$/;"	f
validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn validator<F>(mut self, f: F) -> Self$/;"	f
validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	f
validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	f
validator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	f
validator_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	f
validator_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>> {$/;"	f
validator_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>>;$/;"	f
validator_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn validator_os<F>(mut self, f: F) -> Self$/;"	f
validator_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	f
validator_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	f
validator_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	f
vals_for	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs	/^    fn vals_for(&self, o: &OptBuilder) -> String {$/;"	f
value	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/cache.rs	/^        pub fn value(&self) -> &T {$/;"	f
value_delimiter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn value_delimiter(mut self, d: &str) -> Self {$/;"	f
value_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn value_name(mut self, name: &'b str) -> Self {$/;"	f
value_names	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn value_names(mut self, names: &[&'b str]) -> Self {$/;"	f
value_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn value_of<S: AsRef<str>>(&self, name: S) -> Option<&str> {$/;"	f
value_of_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn value_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Cow<'a, str>> {$/;"	f
value_of_lossy	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn value_of_lossy(&self, name: &str) -> Option<String> {$/;"	f
value_of_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn value_of_os<S: AsRef<str>>(&self, name: S) -> Option<&OsStr> {$/;"	f
value_of_os	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn value_of_os(&self, name: &str) -> Option<&OsStr> {$/;"	f
value_t	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! value_t {$/;"	d
value_t_or_exit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! value_t_or_exit {$/;"	d
value_terminator	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn value_terminator(mut self, term: &'b str) -> Self {$/;"	f
value_validation	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn value_validation(arg: Option<&AnyArg>, err: String, color: ColorWhen) -> Self {$/;"	f
value_validation_auto	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn value_validation_auto(err: String) -> Self {$/;"	f
values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^        pub fn values(&self) -> Values<V> {$/;"	f
values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn values(&self) -> Values {$/;"	f
values_mut	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut {$/;"	f
values_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn values_of<S: AsRef<str>>(&'a self, name: S) -> Option<Values<'a>> {$/;"	f
values_of_lossy	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn values_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Vec<String>> {$/;"	f
values_of_lossy	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn values_of_lossy(&self, name: &str) -> Option<Vec<String>> {$/;"	f
values_of_lossy_vec	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn values_of_lossy_vec(&self, name: &str) -> Vec<String> {$/;"	f
values_of_os	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs	/^    pub fn values_of_os<S: AsRef<str>>(&'a self, name: S) -> Option<OsValues<'a>> {$/;"	f
values_of_os	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn values_of_os(&self, name: &str) -> Option<clap::OsValues> {$/;"	f
values_t	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! values_t {$/;"	d
values_t_or_exit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! values_t_or_exit {$/;"	d
variant	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	f
variant_identifier	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	d
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self)>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Error>$/;"	f
variant_seed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, VariantDeserializer), Error>$/;"	f
variants	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs	/^    pub fn variants() -> [&'static str; 5] {$/;"	f
variants	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^            pub fn variants() -> [&'static str; $crate::_clap_count_exprs!($(stringify!($v)),+)] {$/;"	f
vb	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn vb(b: usize) -> String {$/;"	f
vec_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/map.rs	/^mod vec_map {$/;"	m
vec_or_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^        macro_rules! vec_or_str {$/;"	d
verify_positionals	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn verify_positionals(&self) -> bool {$/;"	f
version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	f
version_message	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn version_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	f
version_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn version_short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	f
version_short	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn version_short(&mut self, s: &str) {$/;"	f
visible_alias	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
visible_alias	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
visible_aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
visible_aliases	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
visible_byte	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^        fn visible_byte(b: u8) -> String {$/;"	f
visit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error>;$/;"	f
visit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn visit(&self, visitor: &mut Visitor) -> Result<(), Error> {$/;"	f
visit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/de.rs	/^    fn visit<'de, V>(self, visitor: V) -> Result<V::Value>$/;"	f
visit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn visit(&mut self, entry: Result<DirEntry, Error>) -> WalkState {$/;"	f
visit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn visit(&mut self, entry: Result<DirEntry, Error>) -> WalkState;$/;"	f
visit	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    pub fn visit(mut self, builder: &mut dyn ParallelVisitorBuilder) {$/;"	f
visit_array	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_array<'de, V>(array: Vec<Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_array_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_array_ref<'de, V>(array: &'de [Value], visitor: V) -> Result<V::Value, Error>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_bool<__E>(self, __value: bool) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_bool<E>(self, value: bool) -> Result<Value, E> {$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_borrowed_bytes<E: Error>($/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	f
visit_borrowed_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_borrowed_bytes<__E>(self, __value: &'de [u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_borrowed_str<E: Error>($/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_borrowed_str<__E>(self, __value: &'de str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn visit_borrowed_str<E>(self, s: &'de str) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_byte_buf<E: Error>($/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_bytes<E: Error>($/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	f
visit_bytes	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_bytes<__E>(self, __value: &[u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	f
visit_char	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_char<__E>(self, __value: char) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_content_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f
visit_content_map_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f
visit_content_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, E>$/;"	f
visit_content_seq_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_enum<A>(self, value: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_enum<__A>(self, __data: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	f
visit_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	f
visit_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_f32<__E>(self, __value: f32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_f64<__E>(self, __value: f64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Number, E>$/;"	f
visit_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Value, E> {$/;"	f
visit_field	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^        fn visit_field(&mut self, field: &'ast syn::Field) {$/;"	f
visit_float_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! visit_float_method {$/;"	d
visit_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	f
visit_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	f
visit_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i16<__E>(self, __value: i16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	f
visit_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	f
visit_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i32<__E>(self, __value: i32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i64<__E>(self, __value: i64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Number, E> {$/;"	f
visit_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Value, E> {$/;"	f
visit_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	f
visit_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	f
visit_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_i8<__E>(self, __value: i8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_integer_method	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^macro_rules! visit_integer_method {$/;"	d
visit_macro	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^        fn visit_macro(&mut self, _mac: &'ast syn::Macro) {}$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_map<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_map<__A>(self, mut __map: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Number, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_newtype_struct<__E>(self, __e: __E) -> _serde::export::Result<Self::Value, __E::Error>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	f
visit_none	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_none<E>(self) -> Result<Value, E> {$/;"	f
visit_object	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_object<'de, V>(object: Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_object_ref	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^fn visit_object_ref<'de, V>(object: &'de Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            fn visit_pair(&mut self, _: Key<'kvs>, _: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error>;$/;"	f
visit_pair	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^            fn visit_pair($/;"	f
visit_path	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^        fn visit_path(&mut self, path: &'ast syn::Path) {$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_seq<V: SeqAccess<'de>>($/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_seq<A>(mut self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_seq<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_seq<__A>(self, mut __seq: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_seq<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_some<D>(self, deserializer: D) -> Result<Value, D::Error>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_str<E: Error>($/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                        fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^        fn visit_str<__E>(self, __value: &str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<NumberFromString, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_str<E>(self, value: &str) -> Result<Value, E>$/;"	f
visit_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/impls.rs	/^                fn visit_string<E: Error>($/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/raw.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_string<E>(self, value: String) -> Result<Value, E> {$/;"	f
visit_string	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	f
visit_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u128	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^        fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	f
visit_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	f
visit_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u16<__E>(self, __value: u16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^                    fn visit_u32<E>(self, value: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	f
visit_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u32<__E>(self, __value: u32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u64<__E>(self, __value: u64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/number.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Number, E> {$/;"	f
visit_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Value, E> {$/;"	f
visit_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	f
visit_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	f
visit_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_u8<__E>(self, __value: u8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.110/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^            fn visit_unit<__E>(self) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^            fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/de.rs	/^            fn visit_unit<E>(self) -> Result<Value, E> {$/;"	f
visitor_is_object_safe	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visitor_is_object_safe() {$/;"	f
w	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/macros.rs	/^macro_rules! w {$/;"	d
walk_collect	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn walk_collect(prefix: &Path, builder: &WalkBuilder) -> Vec<String> {$/;"	f
walk_collect_entries_parallel	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn walk_collect_entries_parallel(builder: &WalkBuilder) -> Vec<DirEntry> {$/;"	f
walk_collect_parallel	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn walk_collect_parallel($/;"	f
walkdir_is_dir	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^fn walkdir_is_dir(dent: &walkdir::DirEntry) -> bool {$/;"	f
walker	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn walker(&self) -> Result<Walk> {$/;"	f
walker_builder	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn walker_builder(&self, paths: &[PathBuf]) -> Result<WalkBuilder> {$/;"	f
walker_parallel	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    pub fn walker_parallel(&self) -> Result<WalkParallel> {$/;"	f
warn	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! warn {$/;"	d
warning	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs	/^    pub fn warning<T>(&self, msg: T) -> Format<T>$/;"	f
wfile	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/dir.rs	/^    fn wfile<P: AsRef<Path>>(path: P, contents: &str) {$/;"	f
wfile	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn wfile<P: AsRef<Path>>(path: P, contents: &str) {$/;"	f
wfile_size	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn wfile_size<P: AsRef<Path>>(path: P, size: u64) {$/;"	f
whitespace_len_fwd	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/whitespace.rs	/^pub fn whitespace_len_fwd(slice: &[u8]) -> usize {$/;"	f
whitespace_len_rev	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/whitespace.rs	/^pub fn whitespace_len_rev(slice: &[u8]) -> usize {$/;"	f
windows_osstr_starts_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs	/^fn windows_osstr_starts_with(osstr: &OsStr, prefix: &[u8]) -> bool {$/;"	f
with_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_bound($/;"	f
with_capacity	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> Self {$/;"	f
with_defaults	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn with_defaults<S: Into<String>>(n: S) -> Self {$/;"	f
with_depth	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn with_depth(self, depth: usize) -> Error {$/;"	f
with_description	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn with_description(description: &str, kind: ErrorKind) -> Self {$/;"	f
with_filename	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/args.rs	/^    fn with_filename(&self, paths: &[PathBuf]) -> bool {$/;"	f
with_formatter	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn with_formatter(writer: W, formatter: F) -> Self {$/;"	f
with_goto	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/prog.rs	/^        fn with_goto(cur: usize, goto: usize, fmtd: String) -> String {$/;"	f
with_indent	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    pub fn with_indent(indent: &'a [u8]) -> Self {$/;"	f
with_lifetime_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_lifetime_bound(generics: &syn::Generics, lifetime: &str) -> syn::Generics {$/;"	f
with_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs	/^    pub fn with_name(s: String) -> Self {$/;"	f
with_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn with_name(n: String) -> Self {$/;"	f
with_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	f
with_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	f
with_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs	/^    pub fn with_name<'b>(name: &str) -> App<'a, 'b> {$/;"	f
with_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/lib.rs	/^    fn with_path<P: AsRef<Path>>(self, path: P) -> Error {$/;"	f
with_self_bound	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_self_bound($/;"	f
with_where_predicates	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_where_predicates($/;"	f
with_where_predicates_from_fields	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_where_predicates_from_fields($/;"	f
with_where_predicates_from_variants	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn with_where_predicates_from_variants($/;"	f
without_defaults	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/bound.rs	/^pub fn without_defaults(generics: &syn::Generics) -> syn::Generics {$/;"	f
wlnerr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! wlnerr($/;"	d
word_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn word_indices(&self) -> WordIndices {$/;"	f
words	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn words(&self) -> Words {$/;"	f
words	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/unicode/word.rs	/^    fn words(bytes: &[u8]) -> Vec<&str> {$/;"	f
words_with_break_indices	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn words_with_break_indices(&self) -> WordsWithBreakIndices {$/;"	f
words_with_breaks	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.13/src/ext_slice.rs	/^    fn words_with_breaks(&self) -> WordsWithBreaks {$/;"	f
work_done	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/ignore/src/walk.rs	/^    fn work_done(&self) {$/;"	f
wrap	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn wrap<Q: io::Write>(&self, wtr: Q) -> LossyStandardStream<Q> {$/;"	f
wrap_deserialize_field_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn wrap_deserialize_field_with($/;"	f
wrap_deserialize_variant_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn wrap_deserialize_variant_with($/;"	f
wrap_deserialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/de.rs	/^fn wrap_deserialize_with($/;"	f
wrap_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^fn wrap_help(help: &str, avail_chars: usize) -> String {$/;"	f
wrap_help_last_word	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn wrap_help_last_word() {$/;"	f
wrap_in_const	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/dummy.rs	/^pub fn wrap_in_const($/;"	f
wrap_serialize_field_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn wrap_serialize_field_with($/;"	f
wrap_serialize_variant_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn wrap_serialize_variant_with($/;"	f
wrap_serialize_with	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.110/src/ser.rs	/^fn wrap_serialize_with($/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize>;$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/value/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write(&mut self, b: &[u8]) -> io::Result<usize> {$/;"	f
write	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_all	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	f
write_all_args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn write_all_args(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	f
write_app_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn write_app_help(w: &'a mut Write, app: &App, use_long: bool) -> ClapResult<()> {$/;"	f
write_arg	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_arg<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	f
write_args	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_args<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	f
write_args_unsorted	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_args_unsorted<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	f
write_before_after_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_before_after_help(&mut self, h: &str) -> io::Result<()> {$/;"	f
write_bin_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_bin_name(&mut self, parser: &Parser) -> io::Result<()> {$/;"	f
write_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_bool<W>(&mut self, writer: &mut W, value: bool) -> io::Result<()>$/;"	f
write_char_escape	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_char_escape<W>(&mut self, writer: &mut W, char_escape: CharEscape) -> io::Result<()>$/;"	f
write_color	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write_color($/;"	f
write_console	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write_console(&self, console: &mut wincon::Console) -> io::Result<()> {$/;"	f
write_custom	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_custom {$/;"	d
write_default_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn write_default_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	f
write_f32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_f32<W>(&mut self, writer: &mut W, value: f32) -> io::Result<()>$/;"	f
write_f64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_f64<W>(&mut self, writer: &mut W, value: f64) -> io::Result<()>$/;"	f
write_flags_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn write_flags_of(p: &Parser) -> String {$/;"	f
write_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn write_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	f
write_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_help_err	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn write_help_err<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_i16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i16<W>(&mut self, writer: &mut W, value: i16) -> io::Result<()>$/;"	f
write_i32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i32<W>(&mut self, writer: &mut W, value: i32) -> io::Result<()>$/;"	f
write_i64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i64<W>(&mut self, writer: &mut W, value: i64) -> io::Result<()>$/;"	f
write_i8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_i8<W>(&mut self, writer: &mut W, value: i8) -> io::Result<()>$/;"	f
write_intense	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_intense {$/;"	d
write_long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn write_long_help<W: Write>(&mut self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn write_long_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn write_long_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_lossy_utf8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^fn write_lossy_utf8<W: io::Write>(mut w: W, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_name	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^        macro_rules! write_name {$/;"	d
write_normal	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_normal {$/;"	d
write_nspaces	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/macros.rs	/^macro_rules! write_nspaces {$/;"	d
write_null	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_null<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
write_number_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_number_str<W>(&mut self, writer: &mut W, value: &str) -> io::Result<()>$/;"	f
write_opts_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn write_opts_of(p: &Parser) -> String {$/;"	f
write_parser_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn write_parser_help(w: &'a mut Write, parser: &Parser, use_long: bool) -> ClapResult<()> {$/;"	f
write_parser_help_to_stderr	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    pub fn write_parser_help_to_stderr(w: &'a mut Write, parser: &Parser) -> ClapResult<()> {$/;"	f
write_path	/uhome/home/lingege32/rust_trace_ripgrep/ripgrep/crates/core/path_printer.rs	/^    pub fn write_path(&mut self, path: &Path) -> io::Result<()> {$/;"	f
write_positionals_of	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs	/^fn write_positionals_of(p: &Parser) -> String {$/;"	f
write_raw_fragment	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_raw_fragment<W>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	f
write_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^            fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()> {$/;"	f
write_string_fragment	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_string_fragment<W>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	f
write_subcommands	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_subcommands(&mut self, parser: &Parser) -> io::Result<()> {$/;"	f
write_templated_help	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_templated_help(&mut self, parser: &Parser, template: &str) -> ClapResult<()> {$/;"	f
write_thing	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^        macro_rules! write_thing {$/;"	d
write_to	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn write_to<W: Write>(&self, w: &mut W) -> io::Result<()> {$/;"	f
write_u16	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u16<W>(&mut self, writer: &mut W, value: u16) -> io::Result<()>$/;"	f
write_u32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u32<W>(&mut self, writer: &mut W, value: u32) -> io::Result<()>$/;"	f
write_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u64<W>(&mut self, writer: &mut W, value: u64) -> io::Result<()>$/;"	f
write_u8	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.53/src/ser.rs	/^    fn write_u8<W>(&mut self, writer: &mut W, value: u8) -> io::Result<()>$/;"	f
write_var_ansi_code	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.0/src/lib.rs	/^        macro_rules! write_var_ansi_code {$/;"	d
write_vari32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn write_vari32(data: &mut Vec<u8>, n: i32) {$/;"	f
write_varu32	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.9/src/dfa.rs	/^fn write_varu32(data: &mut Vec<u8>, mut n: u32) {$/;"	f
write_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs	/^    fn write_version(&mut self, parser: &Parser) -> io::Result<()> {$/;"	f
write_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_version	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W, use_long: bool) -> io::Result<()> {$/;"	f
wrong_number_of_values	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs	/^    pub fn wrong_number_of_values<S, U>($/;"	f
yaml_opt_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_opt_str {$/;"	d
yaml_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs	/^        macro_rules! yaml_str {$/;"	d
yaml_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_str {$/;"	d
yaml_to_bool	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_to_bool {$/;"	d
yaml_to_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_to_str {$/;"	d
yaml_to_u64	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_to_u64 {$/;"	d
yaml_to_usize	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_to_usize {$/;"	d
yaml_tuple2	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_tuple2 {$/;"	d
yaml_tuple3	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_tuple3 {$/;"	d
yaml_vec_or_str	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/macros.rs	/^macro_rules! yaml_vec_or_str {$/;"	d
zeroed	/uhome/home/lingege32/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs	/^    pub fn zeroed() -> Self {$/;"	f
